{"version":3,"file":"index.modern.mjs","sources":["../src/utils/cors.ts","../src/utils/tests.ts","../src/utils/index.ts"],"sourcesContent":["/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import { Client, buildClient } from '@datocms/cma-client';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = []\n\n  for (let i = 0; i < models.length; i++) {\n    const r: TestResult = { model: models[i].api_key }\n    console.log(`${i + 1}/${models.length}: ${r.model}`)\n\n    try {\n      const previews = await testWebPreviewsEndpoint(models[i], client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) {\n      //console.log(e)\n    }\n\n    try {\n      r.revalidate = await testRevalidateEndpoint(models[i], client)\n    } catch (e) {\n      //console.log(e)\n    }\n    results.push(r)\n  }\n\n  return results.sort((a, b) => a.model > b.model ? 1 : -1)\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate || !r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nexport const testResultsToHtml = (results: TestResult[]) => {\n  return `\n    <html>\n      <head>\n        <style>\n          table {\n            border-collapse: collapse;\n            width: 400px;\n          }\n          th, td {\n            padding: 5px;\n            text-align:left;\n          }\n          .center{\n            text-align:center;\n          }\n        </style>\n      </head>\n      <body>\n        <pre>\n        <table>\n          <thead>\n            <tr>\n              <th>Model</th>\n              <th>Web Previews</th>\n              <th>Revalidate</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(r => `\n              <tr title=\"Web Previews\\n-----------\\n${!r.previews ? '' : r.previews?.map(p => `${p.label}: ${p.url}`).join('\\n')}\\n\\nRevalidate\\n-----------\\n${!r.revalidate ? '' : r.revalidate?.paths?.join('\\n')}\">\n                <td>${r.model}</td>\n                <td class=\"center\">${r.previews ? 'x' : '-'}</td>\n                <td class=\"center\">${r.revalidate?.revalidated ? 'x' : '-'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </pre>\n      </body>\n    </html>\n  `\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": item.meta\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n  if (res.status === 200) {\n    const json = await res.json()\n    return json\n  } else {\n    throw new Error(`Error testing revalidate endpoint: ${res.status} ${res.statusText}`)\n  }\n}","import { ReactNode } from \"react\";\nimport { ApiError, buildClient } from \"@datocms/cma-client\";\nexport { default as cors } from './cors.js'\nexport { testApiEndpoints } from './tests.js'\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const parseDatoCMSApiError = (e: any): string => {\n\n  if (e instanceof ApiError === false)\n    return typeof e === 'string' ? e : e.message || e.toString()\n\n  const err = new ApiError(e)\n  return err.errors.map(e => {\n    let code = `${e.attributes.code}`\n    let errors = []\n\n    if (Array.isArray(e.attributes.details?.errors)) {\n      e.attributes.details.errors.forEach(e => {\n        errors.push(Object.keys(e).map(k => `${k}: ${e[k]}`).join(', '))\n      })\n    }\n    return `${code}${errors.length ? `: ${errors.join('. ')}` : ''}`\n  }).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a, b) => {\n    const ai = alfabet.findIndex((l) => l === (key ? a[key] : a)?.charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (key ? b[key] : b)?.charAt(0).toUpperCase())\n    return !ai ? -1 : ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}"],"names":["cors","req","res","options","methods","opts","defaultOptions","headers","Promise","resolve","originHeadersFromReq","origin","_opts$origin","originHeaders","v","k","append","set","forEach","mergeHeaders","credentials","exposed","Array","isArray","exposedHeaders","join","method","allowed","Headers","get","getAllowedHeaders","allowedHeaders","maxAge","String","preflightContinue","Response","status","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","undefined","then","_temp2","some","o","RegExp","test","pact","s","_Pact","prototype","onFulfilled","onRejected","state","this","callback","_settle","result","e","_this","testApiEndpoints","client","buildClient","apiToken","process","env","DATOCMS_API_TOKEN","site","find","console","log","name","itemTypes","list","_temp6","results","sort","a","b","model","array","body","reject","models","filter","t","modular_block","i","push","r","_temp","_catch","testRevalidateEndpoint","_testRevalidateEndpoi","revalidate","api_key","length","testWebPreviewsEndpoint","previews","_temp3","_temp4","_cycle","bind","_temp5","baseApiUrl","NEXT_PUBLIC_SITE_URL","itemType","items","type","_client$items$list","item","fetch","Authorization","btoa","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","JSON","stringify","attributes","environmentId","locale","json","previewLinks","_client$items$list2","environment","entity_type","event_type","entity","id","relationships","item_type","data","meta","related_entities","Error","statusText","observer","_isSettledPact","thenable","isServer","window","chunkSize","newArr","slice","parseDatoError","err","errors","map","details","_ref$attributes","code","field","message","detailsCode","_ref2","parseDatoCMSApiError","ApiError","toString","_e$attributes$details","Object","keys","isEmpty","obj","capitalize","str","lower","toLowerCase","replace","match","toUpperCase","sleep","ms","refject","setTimeout","rInt","min","max","Math","ceil","floor","random","truncateParagraph","sentances","ellipsis","minLength","_s$split","_s$split2","dotIndex","split","lastIndexOf","qIndex","isQuestion","substring","truncateWords","text","maxLength","truncatedText","lastSpaceIndex","substr","sortSwedish","arr","key","ai","alfabet","findIndex","l","_ref3","charAt","bi","_ref4","awaitElement","selector","_exit2","_result","_i","_for","el","document","querySelector","n","cleanSelector"],"mappings":"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"}
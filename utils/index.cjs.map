{"version":3,"file":"index.cjs","sources":["../src/utils/cors.ts","../src/utils/tests.ts","../src/utils/index.ts"],"sourcesContent":["/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import { Client, buildClient } from '@datocms/cma-client';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = await Promise.all(models.map(async (model, i) => {\n\n    const r: TestResult = { model: model.api_key }\n    console.log(`${i + 1}/${models.length}: ${r.model}`)\n\n    try {\n      const previews = await testWebPreviewsEndpoint(model, client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) { }\n\n    try {\n      r.revalidate = await testRevalidateEndpoint(model, client)\n    } catch (e) { }\n\n    return r\n  }))\n\n  return results.sort((a, b) => a.model > b.model ? 1 : -1)\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate || !r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nexport const testResultsToHtml = (results: TestResult[]) => {\n  return `\n    <html>\n      <head>\n        <style>\n          table {\n            border-collapse: collapse;\n            width: 400px;\n          }\n          th, td {\n            padding: 5px;\n            text-align:left;\n          }\n          .center{\n            text-align:center;\n          }\n        </style>\n      </head>\n      <body>\n        <pre>\n        <table>\n          <thead>\n            <tr>\n              <th>Model</th>\n              <th>Web Previews</th>\n              <th>Revalidate</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(r => `\n              <tr title=\"Web Previews\\n-----------\\n${!r.previews ? '' : r.previews?.map(p => `${p.label}: ${p.url}`).join('\\n')}\\n\\nRevalidate\\n-----------\\n${!r.revalidate ? '' : r.revalidate?.paths?.join('\\n')}\">\n                <td>${r.model}</td>\n                <td class=\"center\">${r.previews ? 'x' : '-'}</td>\n                <td class=\"center\">${r.revalidate?.revalidated ? 'x' : '-'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </pre>\n      </body>\n    </html>\n  `\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": item.meta\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n  if (res.status === 200) {\n    const json = await res.json()\n    return json\n  } else {\n    throw new Error(`Error testing revalidate endpoint: ${res.status} ${res.statusText}`)\n  }\n}","import { ReactNode } from \"react\";\nimport { ApiError, buildClient } from \"@datocms/cma-client\";\nexport { default as cors } from './cors.js'\nexport { testApiEndpoints } from './tests.js'\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const parseDatoCMSApiError = (e: any): string => {\n\n  if (e instanceof ApiError === false)\n    return typeof e === 'string' ? e : e.message || e.toString()\n\n  const err = new ApiError(e)\n  return err.errors.map(e => {\n    let code = `${e.attributes.code}`\n    let errors = []\n\n    if (Array.isArray(e.attributes.details?.errors)) {\n      e.attributes.details.errors.forEach(e => {\n        errors.push(Object.keys(e).map(k => `${k}: ${e[k]}`).join(', '))\n      })\n    }\n    return `${code}${errors.length ? `: ${errors.join('. ')}` : ''}`\n  }).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a, b) => {\n    const ai = alfabet.findIndex((l) => l === (key ? a[key] : a)?.charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (key ? b[key] : b)?.charAt(0).toUpperCase())\n    return !ai ? -1 : ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}"],"names":["cors","originHeadersFromReq","req","origin","value","reqOrigin","headers","Headers","set","append","isOriginAllowed","getOriginHeaders","get","undefined","Promise","resolve","then","_temp2","defaultOptions","methods","preflightContinue","optionsSuccessStatus","allowed","Array","isArray","some","o","RegExp","test","testApiEndpoints","baseApiUrl","process","env","NEXT_PUBLIC_SITE_URL","_settle","pact","state","s","_Pact","bind","v","observer","prototype","onFulfilled","this","callback","onRejected","result","e","_this","_isSettledPact","thenable","isServer","window","sleep","ms","refject","setTimeout","selector","_exit2","_temp3","_result","Error","_i","_temp4","_for","i","el","document","querySelector","match","forEach","n","replace","cleanSelector","reject","str","lower","toLowerCase","toUpperCase","array","chunkSize","newArr","length","push","slice","res","options","opts","_opts$origin","originHeaders","k","mergeHeaders","credentials","exposed","exposedHeaders","join","method","getAllowedHeaders","allowedHeaders","maxAge","String","Response","status","obj","Object","keys","filter","ApiError","message","toString","errors","map","_e$attributes$details","code","attributes","details","err","_ref$attributes","field","detailsCode","_ref2","min","max","Math","ceil","floor","random","arr","key","sort","a","b","ai","alfabet","findIndex","l","_ref3","charAt","bi","_ref4","client","buildClient","apiToken","DATOCMS_API_TOKEN","site","find","console","log","name","itemTypes","list","models","t","modular_block","all","model","_temp","_catch","testRevalidateEndpoint","itemType","items","type","api_key","_client$items$list2","fetch","Authorization","btoa","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","body","JSON","stringify","environment","entity_type","event_type","entity","id","item","relationships","item_type","data","meta","related_entities","json","statusText","_testRevalidateEndpoi","r","revalidate","testWebPreviewsEndpoint","_client$items$list","environmentId","locale","previewLinks","previews","_temp5","results","sentances","ellipsis","minLength","_s$split","_s$split2","dotIndex","split","lastIndexOf","qIndex","isQuestion","substring","text","maxLength","truncatedText","lastSpaceIndex","substr"],"mappings":"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"}
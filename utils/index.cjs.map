{"version":3,"file":"index.cjs","sources":["../src/utils/index.ts"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { ApiError } from \"@datocms/cma-client\";\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a, b) => {\n    const ai = alfabet.findIndex((l) => l === (key ? a[key] : a).charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (key ? b[key] : b).charAt(0).toUpperCase())\n    return ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}"],"names":["pact","state","value","s","o","_settle","bind","v","then","observer","_Pact","prototype","onFulfilled","onRejected","result","callback","this","e","_this","thenable","isServer","window","ms","Promise","resolve","refject","setTimeout","awaitElement","selector","_exit2","_temp3","_result","Error","i","_temp4","_for","_i","el","document","querySelector","match","forEach","n","replace","cleanSelector","sleep","reject","str","lower","toLowerCase","toUpperCase","array","chunkSize","length","newArr","push","slice","obj","Object","keys","filter","k","undefined","err","errors","map","attributes","details","code","_ref$attributes","field","message","detailsCode","Array","isArray","join","_ref2","min","max","Math","ceil","floor","random","arr","key","alfabet","sort","a","b","findIndex","l","charAt","bi","ai","sentances","ellipsis","minLength","_s$split","_s$split2","dotIndex","split","lastIndexOf","qIndex","substring","isQuestion","text","maxLength","truncatedText","lastSpaceIndex","substr"],"mappings":"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"}
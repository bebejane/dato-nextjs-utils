{"version":3,"file":"components.modern.mjs","sources":["../src/components/DatoMarkdown.tsx","../src/components/DatoSEO.tsx"],"sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {children:[any], href: UrlObject }\n\nconst truncateSentances = (markdown, limit: number) => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      components={{\n        // @ts-ignore\n        a: ({ children, href } : AnchorProp) => \n          // @ts-ignore\n          <Link scroll={false} href={href} prefetch={false}>\n            <a>{children[0]}</a>\n          </Link>\n      }}\n    />\n  )\n}\n\nexport default DatoMarkdown;\n\n","import { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;"],"names":["DatoMarkdown","_ref","children","truncate","className","sentances","content","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","h","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href","prefetch","_ref2","DatoSEO","_ref$seo","seo","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","parseDatoMetaTags","globalSeo","favicon","favicons","map","attributes","generateImages","meta","url","process","env","NEXT_PUBLIC_SITE_URL","siteName","titleSuffix","fallbackSeo","NextSeo","canonical","openGraph","images","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","width","height","_ref4","metaTags","Array","isArray","tags","filter","m","tag","titleTag","startsWith","t","forEach","property","name","Math","round","scaleRatio"],"mappings":"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"}
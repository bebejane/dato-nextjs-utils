{"version":3,"file":"index.umd.js","sources":["../src/api.ts","../src/hoc/withGlobalProps.ts","../src/hooks/useScrollInfo.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","operations","Array","isArray","map","op","operationName","join","Promise","resolve","response","Date","getTime","_extends","text","result","console","log","requestName","t","e","reject","batchMax","batchInterval","headers","Authorization","BatchHttpLink","client","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","schema","gql","apiQuery","options","variables","preview","_ref$preview","Error","setLink","previewLink","batch","q","idx","vars","length","all","data","errorMessages","filter","_ref2","errors","forEach","_ref3","message","push","res","_catch","err","GlobalQuery","pageBottomLimit","_useState","useState","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","document","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","useCallback","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useEffect","addEventListener","removeEventListener","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","apply","seo","SEOQuery","context","props","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","error","_req$body","basicAuth","authorization","split","Buffer","from","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","apiToken","requestTimeout","itemTypes","list","models","model","find","m","items","type","api_key","fields","eq","then","records","record","paths","p","revalidated"],"mappings":"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"}
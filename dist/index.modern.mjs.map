{"version":3,"file":"index.modern.mjs","sources":["../src/api.ts","../src/hoc/withGlobalProps.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/is-buffer/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/index.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/bail/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/unified/lib/index.js","../node_modules/trough/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/cjs/react-is.development.js","../node_modules/react-is/index.js","../node_modules/object-assign/index.js","../node_modules/prop-types/lib/has.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/checkPropTypes.js","../node_modules/prop-types/factoryWithTypeCheckers.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.development.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/inline-style-parser/index.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/hast-util-whitespace/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/style-to-object/index.js","../node_modules/react-markdown/lib/react-markdown.js","../src/components/DatoMarkdown.tsx","../src/components/DatoSEO.tsx"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {no:1, count:0, size:pageSize, end:false} : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n    .then(res => {\n      const d = mergeData(res, data)\n      setData(d)\n      return d\n    })\n    .catch(err => setError(err))\n    .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{\n    if(!initialData)\n      load()\n    else if(initialData.pagination?.count <= pageSize)\n      setPage((page)=>({...page, end:true}))\n\n  }, [initialData, load, setPage, pageSize])\n\n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_SERVER_CONTEXT_TYPE:\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\nfunction isSuspenseList(object) {\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.SuspenseList = SuspenseList;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isSuspenseList = isSuspenseList;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} – ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","operations","Array","isArray","map","op","operationName","join","Promise","resolve","response","Date","getTime","_extends","text","result","console","log","requestName","t","e","reject","batchMax","batchInterval","headers","Authorization","BatchHttpLink","client","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","schema","gql","apiQuery","options","variables","preview","_ref$preview","Error","setLink","previewLink","batch","q","idx","vars","length","all","data","errorMessages","filter","_ref2","errors","forEach","_ref3","message","push","res","_catch","err","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","SEOQuery","context","props","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","error","withRevalidate","_req$body","basicAuth","authorization","split","Buffer","from","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","apiToken","requestTimeout","itemTypes","list","models","model","find","m","items","type","api_key","fields","eq","then","records","record","paths","p","revalidated","useApiQuery","document","_temp","_ref","initialData","pageSize","_useState","useState","setData","no","count","size","page","_useState2","setPage","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","_initialData$paginati","pagination","loadMore","nextPage","first","skip","_d$Object$keys$find","isNaN","usePreviousRoute","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","protocols","isBuffer","obj","constructor","stringifyPosition","value","position","point","index","line","column","pos","start","VFileMessage","reason","place","origin","parts","super","indexOf","slice","this","name","stack","source","ruleId","prototype","file","fatal","path","ext","TypeError","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","segments","joined","absolute","allowAboveRoot","code","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","stringify","isUrl","fileURLOrPath","href","order","VFile","buffer","messages","history","cwd","prop","includes","URL","protocol","url","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","urlToPath","assertNonEmpty","dirname","unmatchedSlash","basename","assertPart","extname","startPart","startDot","preDotState","stem","encoding","info","fail","part","bail","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","deep","getPrototypeOf","Symbol","toStringTag","iterator","unified","base","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","output","fn","middleware","called","parameters","fnExpectsCallback","done","exception","wrap","use","middelware","trough","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","tree","runSync","complete","assertDone","processSync","destination","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","children","splice","remove","chunkStart","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","limit","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","classifyCharacter","resolveAll","attention","attentionMarkers","marker","sequence","after","open","close","_open","_close","group","openingSequence","closingSequence","nextEvents","sliceSerialize","movePoint","insideSpan","_bufferIndex","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","partial","blockQuote","state","_container","characterEscape","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","codeFenced","closingFenceConstruct","sizeOpen","closingSequenceEnd","nonLazyLine","tail","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","contentContinue","codeIndented","afterStartPrefix","afterPrefix","indentedContent","codeText","gap","tailExitIndex","headEnterIndex","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","atBreak","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","hardBreakEscape","headingAtx","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","htmlFlow","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","resolveTo","htmlText","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","destinationAfter","between","afterLabel","labelStartImage","labelStartLink","lineEnding","thematicBreak","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","setextUnderline","paragraph","heading","initial","flowInitial","afterConstruct","resolver","createResolver","string","initializeFactory","field","notText","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","resolveText","search","decodeNumericCharacterReference","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","spread","_spread","checked","listItemValue","getData","listOrdered","listUnordered","reference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","depth","onexitdata","characterEscapeValue","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","resume","codeFencedFence","lang","onexithardbreak","referenceType","fragment","labelText","ancestor","decodeString","resource","setextHeadingLineSequence","setextHeadingText","mdastExtensions","tokenStack","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","create","and","errorHandler","onExitError","parent","ordered","compiler","postprocess","extensions","combineExtensions","defaultConstructs","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","chunkIndex","go","main","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","_","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","createTokenizer","atCarriageReturn","match","endPosition","lastIndex","exec","preprocess","combined","remarkParse","u","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","convert","castFactory","tests","checks","anyFactory","propsFactory","visit","visitor","reverse","is","step","factory","parents","subresult","grandparents","toResult","visitParents","pointStart","pointEnd","clean","normalizeUri","encodeURIComponent","loose","footnoteReference","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","toHast","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","remarkRehype$1","bridge","mutate","b","for","c","f","g","l","n","r","v","w","x","y","z","a","$$typeof","A","NODE_ENV","hasSymbol","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","typeOf","object","$$typeofType","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isConcurrentMode","exports","AsyncMode","isAsyncMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","module","require$$0","require$$1","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","objectAssign","test1","getOwnPropertyNames","test2","order2","test3","letter","shouldUseNative","symbols","to","s","has","Function","bind","printWarning","ReactPropTypesSecret","loggedTypeFailures","checkPropTypes","typeSpecs","location","componentName","getStack","typeSpecName","ex","resetWarningCache","emptyFunctionThatReturnsNull","emptyFunction","emptyFunctionWithReset","isValidElement","throwOnDirectAccess","ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bigint","bool","func","number","symbol","any","createChainableTypeChecker","arrayOf","typeChecker","propName","propFullName","PropTypeError","propValue","getPropType","elementType","ReactIs","instanceOf","expectedClass","isNode","objectOf","propType","oneOf","expectedValues","validate","valuesString","getPreciseType","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","expectedTypes","checkerResult","expectedType","shape","shapeTypes","invalidValidatorError","exact","allKeys","checkType","isRequired","chainedCheckType","every","iteratorFn","maybeIterable","getIteratorFn","entries","RegExp","isSymbol","PropTypes","shim","getShim","require$$2","Schema","property","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","valid","dash","cap","kebab","camelcase","charAt","hastToReact","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","getModuleId","REACT_MODULE_REFERENCE","REACT_SERVER_CONTEXT_TYPE","REACT_OFFSCREEN_TYPE","SuspenseList","hasWarnedAboutDeprecatedIsConcurrentMode","isSuspenseList","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","trim","str","tableElements","Set","childrenToReact","childIndex","toReact","thing","skipHtml","parentSchema","addProperty","listDepth","component","components","basic","React","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","Type","rest","dashes","padRight","padLeft","spaces","declarations","lineno","updatePosition","Position","whitespace","msg","filename","silent","re","comments","ret","decl","decls","len","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","warn","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","colon","propTypes","truncate","sentances","truncateMarkdown","ellipsis","markdown","truncateSentances","gfm","remarkBreaks","Link","scroll","_ref$seo","site","_ref$site","subtitle","description","_ref$noindex","noindex","parseDatoMetaTags","globalSeo","favicon","favicons","generateImages","NEXT_PUBLIC_SITE_URL","siteName","titleSuffix","fallbackSeo","NextSeo","canonical","openGraph","images","locale","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","_ref4","metaTags","tags","tag","titleTag","startsWith","round","scaleRatio"],"mappings":"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"}
{"version":3,"file":"components.modern.js","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","seo","site","pathname","title","subtitle","description","noindex","meta","parseDatoMetaTags","globalSeo","favicon","favicons","map","attributes","images","generateImages","url","process","env","NEXT_PUBLIC_SITE_URL","React","createElement","NextSeo","siteName","titleSuffix","fallbackSeo","canonical","openGraph","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","width","height","split","Array","isArray","tags","titleTag","metaTags","filter","m","tag","content","startsWith","t","forEach","property","name","value","scaleRatio","Math","round","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","href","Link","scroll"],"mappings":"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"}
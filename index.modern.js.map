{"version":3,"file":"index.modern.js","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/components/DatoSEO.tsx","src/components/DatoMarkdown.tsx"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {no:1, count:0, size:pageSize, end:false} : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n    .then(res => {\n      const d = mergeData(res, data)\n      setData(d)\n      return d\n    })\n    .catch(err => setError(err))\n    .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{\n    if(!initialData)\n      load()\n    else if(initialData.pagination?.count <= pageSize)\n      setPage((page)=>({...page, end:true}))\n\n  }, [initialData, load, setPage, pageSize])\n\n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} – ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","async","input","init","queries","JSON","parse","body","toString","undefined","Array","isArray","map","op","operationName","join","response","t","Date","getTime","result","text","console","log","requestName","batchMax","batchInterval","headers","Authorization","link","BatchHttpLink","previewLink","_extends","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","SEOQuery","schema","gql","apiQuery","options","variables","preview","Error","setLink","batch","q","idx","vars","length","data","Promise","all","filter","errors","forEach","e","message","errorMessages","push","res","err","_t","opt","callback","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","props","context","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","error","withRevalidate","basicAuth","authorization","auth","split","user","pwd","Buffer","from","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","_req$body","entity","payload","record","modelId","_payload$relationship","relationships","_payload$relationship2","item_type","_payload$relationship3","id","buildClient","apiToken","requestTimeout","model","itemTypes","list","find","m","items","type","api_key","fields","eq","recordFromPayload","paths","p","revalidated","useApiQuery","document","initialData","pageSize","setData","useState","page","setPage","no","count","size","setError","loading","setLoading","load","useCallback","then","d","newData","oldData","Object","keys","k","concat","catch","finally","useEffect","pagination","_initialData$paginati","loadMore","nextPage","_d$Object$keys$find","first","skip","isNaN","usePreviousRoute","storage","globalThis","sessionStorage","router","useRouter","prevRoute","setPrevRoute","getItem","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","useScrollInfo","pageBottomLimit","scrollInfo","setScrollInfo","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","DatoSEO","site","pathname","title","subtitle","description","noindex","parseDatoMetaTags","globalSeo","favicon","favicons","attributes","images","generateImages","meta","url","NEXT_PUBLIC_SITE_URL","siteName","titleSuffix","fallbackSeo","NextSeo","canonical","openGraph","locale","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","width","height","metaTags","tags","tag","titleTag","content","startsWith","property","name","value","scaleRatio","round","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","slice","truncateSentances","h","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","href","Link","scroll"],"mappings":"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"}
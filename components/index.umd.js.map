{"version":3,"file":"index.umd.js","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  const props = {\n    canonical: url,\n    openGraph: {\n      url,\n      title,\n      images,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: twitterProps,\n    additionalLinkTags: favicons,\n    noindex: noindex,\n    nofollow: noindex,\n  }\n\n  if (title)\n    props['title'] = title\n  if (description) {\n    props['description'] = description\n    props.openGraph['description'] = description\n  }\n\n  return (\n    <NextSeo {...props} />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  subtitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, title, subtitle, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","buildTitle","title","globalSeo","subtitle","siteName","titleSuffix","children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","description","noindex","_ref$noindex","meta","_ref5","fallbackSeo","metaTags","Array","isArray","tags","titleTag","filter","m","tag","startsWith","map","t","forEach","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","favicons","_extends","generateImages","process","env","NEXT_PUBLIC_SITE_URL","undefined","props","canonical","openGraph","images","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","createElement","NextSeo","_ref3","_ref4","twitterSite","replace","DefaultSeo","twitterCard"],"mappings":"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"}
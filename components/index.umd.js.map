{"version":3,"file":"index.umd.js","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nexport type DefaultSEOProps = {\n  site: any,\n  path: string,\n  title?: string,\n  siteTitle?: string,\n  description?: string,\n}\n\nexport type DatoSEOProps = DefaultSEOProps & {\n  seo?: any,\n  noindex?: boolean\n}\n\nexport const DefaultDatoSEO = (props: DefaultSEOProps) => {\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  const data = parseProps(props)\n  const titleTemplate = `${props.siteTitle}${data.globalSeo?.titleSuffix ? ` ${data.globalSeo?.titleSuffix}` : ''} %s`\n\n  return (\n    <DefaultSeo\n      {...data}\n      titleTemplate={titleTemplate}\n      defaultTitle={props.siteTitle}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${props.path || ''}`}\n      additionalLinkTags={data.favicons}\n    />\n  )\n}\n\nconst DatoSEO = (props: DatoSEOProps) => {\n  const data = parseProps(props)\n  return <NextSeo {...data} />\n}\n\nexport default DatoSEO;\n\nconst parseProps = ({\n  seo = {},\n  site = {},\n  title,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n  console.log('desc', description);\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      description,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: {\n      title,\n      image: meta[\"og:image\"],\n      handle: globalSeo?.twitterAccount,\n      site: globalSeo?.twitterAccount,\n      cardType: 'summary_large_image',\n    },\n    noindex: noindex,\n    nofollow: noindex,\n    meta,\n    title,\n    description,\n    favicons,\n    globalSeo,\n    images\n  }\n\n  return props\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["_ref","seo","_ref$seo","site","_ref$site","title","description","_ref$noindex","noindex","console","log","meta","parseDatoMetaTags","globalSeo","favicon","favicons","map","_ref2","attributes","images","generateImages","fallbackSeo","undefined","openGraph","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","nofollow","url","width","height","split","_ref3","metaTags","Array","isArray","tags","filter","m","tag","titleTag","content","startsWith","siteName","_extends","t","forEach","property","name","scaleRatio","Math","round","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href","props","data","parseProps","createElement","NextSeo","_data$globalSeo","_data$globalSeo2","process","env","NEXT_PUBLIC_SITE_URL","siteTitle","titleSuffix","DefaultSeo","titleTemplate","defaultTitle","canonical","path","additionalLinkTags"],"mappings":"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"}
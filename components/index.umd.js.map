{"version":3,"file":"index.umd.js","sources":["../src/components/DatoMarkdown.tsx","../src/components/DatoSEO.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  const props = {\n    canonical: url,\n    openGraph: {\n      url,\n      title,\n      images,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: twitterProps,\n    additionalLinkTags: favicons,\n    noindex: noindex,\n    nofollow: noindex,\n  }\n\n  if (title)\n    props['title'] = title\n  if (description) {\n    props['description'] = description\n    props.openGraph['description'] = description\n  }\n\n  return (\n    <NextSeo {...props} />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  subtitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, title, subtitle, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  //title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      titleTemplate={`${title}${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''} %s`}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}"],"names":["children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","title","subtitle","description","noindex","_ref$noindex","_ref5","globalSeo","fallbackSeo","metaTags","Array","isArray","tags","titleTag","filter","m","tag","siteName","startsWith","map","t","meta","forEach","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","favicons","images","generateImages","process","env","NEXT_PUBLIC_SITE_URL","titleSuffix","buildTitle","undefined","props","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","createElement","NextSeo","_ref4","_extends","twitterSite","replace","DefaultSeo","titleTemplate","twitterCard"],"mappings":"ugCA0BqB,YAAGA,IAAAA,IAAAA,SAAWC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAAWC,EAASC,EAATD,UACtD,IAAIH,EACF,OAAO,KAET,MAAyBC,EAAsFI,EAAgB,QAACL,EAAU,CAACM,MAAML,EAAUM,UAAS,IAAhIJ,EAVZ,SAACK,EAAmBF,GAC5C,IAAIE,EAAU,OAAeA,EAC7B,IAAML,EAAYK,EAASC,MAAM,KACjC,OAAgBN,EAACO,QAAUJ,EAASH,EAAUQ,MAAM,EAAEL,GAAOM,KAAK,KAAQ,MAAQJ,CACpF,CAMkDK,CAAkBb,EAAoBG,GAAcH,eAEpG,OACEc,EAAAA,sBAACC,EAAa,QAAA,CACZC,cAAe,CAACC,EAAG,QAACC,EAAY,SAChChB,UAAWA,EACXF,SAAUmB,EAEVC,WAAY,CAEVC,EAAG,SAAGrB,gBAAc,OAAoBc,EAAAA,sBAACQ,EAAI,QAAA,CAACC,QAAQ,EAAOC,KAAzCC,EAAJD,mBAAyDV,EAAAA,QAAId,cAAAA,IAAAA,OAAvEA,SAAgF,IAAc,IAK5G,YChCgB,SAAHI,GACXsB,IAAAA,EAAAA,EAAAA,IACAC,EAAAA,EAAAA,KAAAA,OAAI,IAAAC,EAAG,CAAA,EACPC,EAAAA,IAAAA,SACAC,EAAK1B,EAAL0B,MACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,QAAAA,OAAU,IAAAC,GAGVA,IA8FwB,SAAHC,GAAMT,IAAAA,IAAAA,IAAKC,EAAIQ,EAAJR,KAAME,EAAAA,EAAAA,SAEtC,IAAKH,IAAQC,EAAM,MAAO,GAE1B,IAAQS,GAAcT,GAAQ,CAAA,GAAtBS,UACAC,GAAgBD,GAAa,CAAE,GAA/BC,YAGIC,GAFCC,MAAMC,QAAQd,GAAOA,EAAMA,EAAIe,OAErB,GACXC,EAAGJ,EAASK,OAAO,SAAAC,GAAKA,MAAU,UAAVA,EAAEC,GAAe,GAAE,GAEnDH,GAAYN,IACG,MAAbP,EACFa,EAAgBA,EAAAA,CAAAA,EAAAA,EAAUvB,CAAAA,QAASiB,EAAUU,WACtCV,GAAaM,EAASvB,QAAQ4B,WAAWX,EAAUU,YAC1DJ,OAAgBA,EAAQ,CAAEvB,QAAYiB,EAAUU,SAAQ,MAAMJ,EAASvB,YAG3EmB,EAAWA,EAASU,IAAI,SAAAC,GAAO,MAAiB,UAATA,EAACJ,IAAkBI,EAAIP,CAAS,GAEvE,IAAMQ,EAAO,CAAE,EAQf,GANAZ,EAASa,QAAQ,SAAAF,GAGfC,EAFaD,EAAEG,WAAaH,EAAEG,WAAWC,UAAYJ,EAAEG,WAAWE,KAAOL,EAAEJ,KAC7DI,EAAEG,WAAaH,EAAEG,WAAWjC,SAAW8B,EAAEG,WAAaH,EAAE9B,OAExE,IAEK+B,EAAK,aAA0B,MAAXb,GAAAA,EAAakB,MAAO,CAC3C,IACgBC,EAAG,GAAQnB,EAAYkB,MAAME,MAD/B,KACgDpB,EAAYkB,MAAME,MAChFP,EAAK,YAAiBb,EAAYkB,MAAMG,IAAG,UAC3CR,EAAK,kBAHS,IAIdA,EAAK,mBAAqBS,KAAKC,MAAMvB,EAAYkB,MAAMM,OAASL,EACjE,CACD,OACFN,CAAA,CAlIeY,CAAkB,CAAEpC,SAT9B,IAAAqC,EAAG,CAAE,EACRpC,EAQsCA,KAAAA,EAAME,SAAAA,IACpCO,EAAuBT,EAAvBS,UAAW4B,EAAYrC,EAAZqC,QACLC,EAAGD,EAAUA,EAAQhB,IAAI,SAAAvB,GAAsB,OAAY2B,EAAAA,CAAAA,EAArB3B,EAAV2B,WAA4C,GAAK,GACrFc,EAgFe,SAACR,EAAKD,EAAOI,GAClC,GAAKH,EAOL,OANgBA,EAAIjD,MAAM,KACX,CAAC,CACdiD,IAAAA,EACAD,MAAAA,EACAI,OAAAA,GAGJ,CAzFiBM,CAAejB,EAAK,YAAaA,EAAK,kBAAmBA,EAAK,oBACvEQ,KAASU,QAAQC,IAAIC,sBAAuBzC,GAAY,IAE9DC,EA8HiB,SAACA,EAAgBM,EAAiBL,GAQnD,OANKD,GAASM,IACZN,EAAQM,EAAUU,WAEP,MAATV,GAAAA,EAAWmC,aAAexC,KAC5BD,SAAmBM,GAAAA,EAAWmC,aAAexC,EAAQ,KAAOK,MAAAA,OAAAA,EAAAA,EAAWmC,aAAexC,IAAAA,EAAa,IAE9FD,CACT,CAvIU0C,CAAW1C,EAAOM,EAAWL,GAEhCC,IACHA,EAAckB,EAAKlB,YAAckB,EAAKlB,YAAcI,EAAqB,MAATA,OAAS,EAATA,EAAWC,YAAYL,iBAAcyC,GAEvG,IAQWC,EAAG,CACZC,UAAWjB,EACXkB,UAAW,CACTlB,IAAAA,EACA5B,MAAAA,EACAoC,OAAAA,EACAW,OAAQ3B,EAAK,aACb4B,KAAM5B,EAAK,WACX6B,UAAW7B,EAAK,iBAElB8B,QAlBwB,CACxBlD,MAAAA,EACAyB,MAAOL,EAAK,YACZ+B,OAAiB,MAAT7C,OAAS,EAATA,EAAW8C,eACnBvD,KAAMS,MAAAA,OAAAA,EAAAA,EAAW8C,eACjBC,SAAU,uBAcVC,mBAAoBnB,EACpBhC,QAASA,EACToD,SAAUpD,GAUZ,OAPIH,IACF4C,EAAa,MAAI5C,GACfE,IACF0C,EAAmB,YAAI1C,EACvB0C,EAAME,UAAuB,YAAI5C,gBAIjClB,EAAC,QAAAwE,cAAAC,EAAOA,QAAKb,EAEjB,mBAU8B,YAAG/C,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAiBE,IAAAA,YAE9CI,EAAmDT,EAAnDS,UAAW4B,EAAwCrC,EAAxCqC,QAAsB3B,EAAkBV,EAA/BS,UAAaC,YACnC4B,EAAWD,EAAUA,EAAQhB,IAAI,SAAmBwC,GAAG,OAAAC,EAAA,CAAA,EAAnBrC,EAAAA,WAA4C,GAAK,GACrFsC,EAActD,EAAU8C,eAAwC9C,uBAAAA,EAAU8C,eAAeS,QAAQ,IAAK,SAAQlB,eAIpH,OACE3D,EAAAA,QAAAwE,cAACM,EAAAA,WAAU,CACT9D,MAAOA,EACP+D,cAAkB/D,GAAQM,MAAAA,GAAAA,EAAWmC,YAAkBnC,WAAAA,SAAAA,EAAWmC,aAAgB,IAAE,MACpFvC,YAAaA,EACboD,mBAAoBnB,EACpBW,UAAW,CACTE,KAAM,UACND,OAAQzC,EAAUyC,OAClBE,UAAW3C,EAAUU,UAEvBkC,QAAS,CACPC,OAAQ7C,EAAU8C,eAClBvD,KAAM+D,EACNP,SAAU9C,EAAYyD,cAI9B"}
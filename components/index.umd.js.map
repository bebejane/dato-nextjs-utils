{"version":3,"file":"index.umd.js","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nexport type DefaultSEOProps = {\n  site?: any,\n  path?: string,\n  title?: string,\n  siteTitle?: string,\n  description?: string,\n}\n\nexport type DatoSEOProps = DefaultSEOProps & {\n  seo?: any,\n  noindex?: boolean\n}\n\nexport const DefaultDatoSEO = (props: DefaultSEOProps) => {\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  const data = parseProps(props)\n  const titleTemplate = `${props.siteTitle}${data.globalSeo?.titleSuffix ? ` ${data.globalSeo?.titleSuffix}` : ' —'} %s`\n\n  return (\n    <DefaultSeo\n      {...data}\n      titleTemplate={titleTemplate}\n      defaultTitle={props.siteTitle}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${props.path || ''}`}\n      additionalLinkTags={data.favicons}\n    />\n  )\n}\n\nconst DatoSEO = (props: DatoSEOProps) => {\n  const data = parseProps(props)\n  return <NextSeo {...data} />\n}\n\nexport default DatoSEO;\n\nconst parseProps = ({\n  seo = {},\n  site = {},\n  title,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      description,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: {\n      title,\n      image: meta[\"og:image\"],\n      handle: globalSeo?.twitterAccount,\n      site: globalSeo?.twitterAccount,\n      cardType: 'summary_large_image',\n    },\n    noindex: noindex,\n    nofollow: noindex,\n    meta,\n    title,\n    description,\n    favicons,\n    globalSeo,\n    images\n  }\n\n  return props\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\nimport { SpecialComponents } from \"react-markdown/lib/ast-to-react.js\";\n\ntype MarkdownProps = {\n  children?: React.ReactNode,\n  allowedElements?: string[]\n  truncate?: number,\n  className?: string,\n  sentances?: number,\n  scroll?: boolean,\n  disableBreaks?: boolean\n}\n\ntype AnchorProp = {\n  children: any[],\n  href: UrlObject\n}\n\nconst truncateSentances = (markdown: string, limit: number): string => {\n  if (!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit ? sentances.slice(0, limit).join(' ') + '...' : markdown\n}\n\nconst DatoMarkdown = ({ children, truncate, className, sentances, allowedElements, scroll = true, disableBreaks = false }: MarkdownProps) => {\n  if (!children)\n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) : children : truncateMarkdown(children, { limit: truncate, ellipsis: true })\n\n  return (\n    <ReactMarkdown\n      remarkPlugins={disableBreaks ? [gfm] : [gfm, remarkBreaks]}\n      className={className}\n      children={content}\n      allowedElements={allowedElements}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href }: AnchorProp) => <Link scroll={scroll} href={href}>{children[0]}</ Link>\n      }}\n\n    />\n  )\n}\n\nexport default DatoMarkdown\n\n"],"names":["DefaultDatoSEO","parseProps","_ref","_ref$seo","seo","site","_ref$site","title","description","noindex","_ref$noindex","parseDatoMetaTags","globalSeo","favicon","favicons","map","_ref2","attributes","images","generateImages","meta","fallbackSeo","undefined","openGraph","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","nofollow","url","width","height","split","_ref3","metaTags","Array","isArray","tags","filter","m","tag","titleTag","content","startsWith","siteName","_extends","t","forEach","property","name","scaleRatio","Math","round","children","truncate","className","sentances","allowedElements","scroll","_ref$scroll","_ref$disableBreaks","disableBreaks","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","React","createElement","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","href","props","data","NextSeo","_data$globalSeo","_data$globalSeo2","process","env","NEXT_PUBLIC_SITE_URL","titleTemplate","siteTitle","titleSuffix","DefaultSeo","defaultTitle","canonical","path","additionalLinkTags"],"mappings":"w/BAgBaA,IA0BPC,EAAa,SAMAC,GAAA,IAAAC,EAAAD,EALjBE,QACAC,KAAAA,OAAO,IAAAC,EAAA,CAAA,EACPC,EAAAA,IAAAA,MACAC,EAAWN,EAAXM,YACAC,EAAAA,EAAAA,QAAAA,OAAO,IAAAC,GAGPA,IAAaC,EAAkB,CAAEP,eAP3B,CAAE,IAO8BC,KAAAA,IAC9BO,EAAuBP,EAAvBO,UAAWC,EAAYR,EAAZQ,QACLC,EAAGD,EAAUA,EAAQE,IAAI,SAAmBC,GAAG,OAAYC,EAAAA,CAAAA,EAA/BA,EAAAA,WAA4C,GAAK,GAC/EC,EAAGC,EAAeC,EAAK,YAAaA,EAAK,kBAAmBA,EAAK,oBA+B7E,OA7BKZ,IACHA,EAAcY,EAAKZ,YAAcY,EAAKZ,YAAcI,EAAYA,MAAAA,OAAAA,EAAAA,EAAWS,YAAYb,iBAAcc,GAEzF,CACZC,UAAW,CACThB,MAAAA,EACAW,OAAAA,EACAV,YAAAA,EACAgB,OAAQJ,EAAK,aACbK,KAAML,EAAK,WACXM,UAAWN,EAAK,iBAElBO,QAAS,CACPpB,MAAAA,EACAqB,MAAOR,EAAK,YACZS,OAAiB,MAATjB,OAAS,EAATA,EAAWkB,eACnBzB,KAAMO,MAAAA,OAAAA,EAAAA,EAAWkB,eACjBC,SAAU,uBAEZtB,QAASA,EACTuB,SAAUvB,EACVW,KAAAA,EACAb,MAAAA,EACAC,YAAAA,EACAM,SAAAA,EACAF,UAAAA,EACAM,OAAAA,EAIJ,EAEoBC,EAAG,SAACc,EAAKC,EAAOC,GAClC,GAAKF,EAOL,OANgBA,EAAIG,MAAM,KACX,CAAC,CACdH,IAAAA,EACAC,MAAAA,EACAC,OAAAA,GAGJ,IAE0B,SAA4BE,GAAA,MAAzBjC,EAAAA,IAAKC,EAAIgC,EAAJhC,KAEhC,IAAKD,IAAQC,EAAM,MAAO,GAE1B,IAAQO,GAAcP,GAAQ,CAAE,GAAxBO,UACAS,GAAgBT,GAAa,CAAE,GAA/BS,YAGIiB,GAFCC,MAAMC,QAAQpC,GAAOA,EAAMA,EAAIqC,OAErB,KACRH,EAASI,OAAO,SAAAC,GAAC,MAAc,YAARC,GAAe,GAAE,GAEnDC,GAAYjC,GACVA,GAAaiC,EAASC,QAAQC,WAAWnC,EAAUoC,YACrDH,EAAQI,EAAA,GAAQJ,EAAQ,CAAEC,QAAYlC,EAAUoC,SAAQ,MAAMH,EAASC,WAG3ER,EAAWA,EAASvB,IAAI,SAAAmC,GAAO,MAAiB,YAARN,IAAkBM,EAAIL,CAAS,GAEvE,IAAUzB,EAAG,CAAA,EAQb,GANAkB,EAASa,QAAQ,SAAAD,GAGf9B,EAFa8B,EAAEjC,WAAaiC,EAAEjC,WAAWmC,UAAYF,EAAEjC,WAAWoC,KAAOH,EAAEN,KAC7DM,EAAEjC,WAAaiC,EAAEjC,WAAW6B,SAAWI,EAAEjC,WAAaiC,EAAEJ,OAExE,IAEK1B,EAAK,mBAAeC,GAAAA,EAAaO,MAAO,CAC3C,IACgB0B,EAAG,GAAQjC,EAAYO,MAAMM,MAD/B,KACgDb,EAAYO,MAAMM,MAChFd,EAAK,YAAiBC,EAAYO,MAAMK,IAAY,UACpDb,EAAK,kBAHS,IAIdA,EAAK,mBAAqBmC,KAAKC,MAAMnC,EAAYO,MAAMO,OAASmB,EACjE,CACD,QACF,iBCtGqB,SAAHpD,GAAMuD,IAAAA,IAAAA,SAAUC,EAAQxD,EAARwD,SAAUC,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,gBAAiBC,EAAAA,EAAAA,OAAAA,cAAaC,EAAAC,EAAA9D,EAAE+D,cAAAA,OAAa,IAAAD,GAC7GA,EAAA,IAAKP,EACH,YAEF,IAAaX,EAAYY,EAAqFQ,EAAgB,QAACT,EAAU,CAAEU,MAAOT,EAAUU,UAAU,IAAlIR,EAVZ,SAACS,EAAkBF,GAC3C,IAAKE,EAAU,OAAeA,EAC9B,IAAMT,EAAYS,EAASjC,MAAM,KACjC,OAAgBwB,EAACU,QAAUH,EAAQP,EAAUW,MAAM,EAAGJ,GAAOK,KAAK,KAAO,MAAQH,CACnF,CAMkDI,CAAkBhB,EAAoBG,GAAaH,eAEnG,OACEiB,EAAA,QAAAC,cAACC,EAAa,QAAA,CACZC,cAAeZ,EAAgB,CAACa,EAAG,SAAI,CAACA,EAAG,QAAEC,EAAY,SACzDpB,UAAWA,EACXF,SAAUX,EACVe,gBAAiBA,EAEjBmB,WAAY,CAEVC,EAAG,SAAGxB,gBAAc,OAAmBiB,EAAC,QAAAC,cAAAO,EAAI,SAACpB,OAAQA,EAAQqB,KAAzCnE,EAAJmE,MAAV1B,EAAAA,SAA6E,GAAW,IAKtG,YDfgB,SAAC2B,GACf,IAAUC,EAAGpF,EAAWmF,gBACxB,OAAOV,EAAAA,sBAACY,EAAOA,QAAKD,EACtB,mBAtB8B,SAACD,GAE7B,IAAAG,EAAAC,EAAA,IAAKC,QAAQC,IAAIC,qBACf,KAAM,wCAER,IAAMN,EAAOpF,EAAWmF,GACLQ,EAAMR,EAAMS,kBAAYN,EAAAF,EAAKzE,YAAL2E,EAAgBO,iBAAkB,SAAAT,EAAKzE,gBAAL,EAAA4E,EAAgBM,aAAgB,yBAE7G,OACEpB,UAACC,cAAAoB,EAAUA,gBACLV,EAAI,CACRO,cAAeA,EACfI,aAAcZ,EAAMS,UACpBI,UAAS,GAAKR,QAAQC,IAAIC,sBAAuBP,EAAMc,MAAQ,IAC/DC,mBAAoBd,EAAKvE,WAG/B"}
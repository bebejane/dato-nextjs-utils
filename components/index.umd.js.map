{"version":3,"file":"index.umd.js","sources":["../src/components/DatoMarkdown.tsx","../src/components/DatoSEO.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: React.ReactNode | React.ReactNode[], \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;"],"names":["children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","meta","globalSeo","fallbackSeo","metaTags","Array","isArray","tags","titleTag","filter","m","tag","siteName","startsWith","_extends","map","t","forEach","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","images","generateImages","process","env","NEXT_PUBLIC_SITE_URL","createElement","NextSeo","titleSuffix","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","favicons","nofollow"],"mappings":"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"}
{"version":3,"file":"index.cjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale: meta[\"og:locale\"],\n        type: meta[\"og:type\"],\n        site_name: meta[\"og:site_name\"],\n      }}\n      twitter={twitterProps}\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  subtitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, title, subtitle, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","buildTitle","title","globalSeo","subtitle","siteName","titleSuffix","children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","_ref$seo","seo","_ref$site","site","pathname","description","noindex","_ref$noindex","meta","_ref5","fallbackSeo","metaTags","Array","isArray","tags","titleTag","filter","m","tag","startsWith","map","t","forEach","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","favicon","images","generateImages","process","env","NEXT_PUBLIC_SITE_URL","undefined","createElement","NextSeo","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","favicons","nofollow","_ref3","_ref4","replace","DefaultSeo","twitterSite","twitterCard"],"mappings":"6lBAaMA,IAuIUC,EAAG,SAACC,EAAgBC,EAAiBC,GAQnD,OANKF,GAASC,IACZD,EAAQC,EAAUE,WAEP,MAATF,GAAAA,EAAWG,aAAeF,KAC5BF,EAAWA,GAAiB,MAATC,GAAAA,EAAWG,YAAkBH,KAAAA,MAAAA,OAAAA,EAAAA,EAAWG,aAAgB,KAAKF,EAAQ,IAAOA,EAAa,KAEvGF,CACT,uBCnIqB,YAAGK,IAAAA,IAAAA,SAAWC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAAWC,EAASC,EAATD,UACtD,IAAIH,EACF,OAAO,KAET,MAAyBC,EAAsFI,EAAgB,QAACL,EAAU,CAACM,MAAML,EAAUM,UAAS,IAAhIJ,EAVZ,SAACK,EAAmBF,GAC5C,IAAIE,EAAU,OAAeA,EAC7B,IAAML,EAAYK,EAASC,MAAM,KACjC,OAAgBN,EAACO,QAAUJ,EAASH,EAAUQ,MAAM,EAAEL,GAAOM,KAAK,KAAQ,MAAQJ,CACpF,CAMkDK,CAAkBb,EAAoBG,GAAcH,eAEpG,OACEc,EAAAA,sBAACC,EAAa,QAAA,CACZC,cAAe,CAACC,EAAG,QAACC,EAAY,SAChChB,UAAWA,EACXF,SAAUmB,EAEVC,WAAY,CAEVC,EAAG,SAAGrB,gBAAc,OAAoBc,EAAAA,sBAACQ,EAAI,QAAA,CAACC,QAAQ,EAAOC,KAAzCC,EAAJD,mBAAyDV,EAAAA,QAAId,cAAAA,IAAAA,OAAvEA,SAAgF,IAAc,IAK5G,kBDhCgB,SAQGI,GAAA,IAAAsB,EAAAtB,EAPjBuB,IAAQC,EAAAxB,EACRyB,KAAAA,OAAO,IAAAD,EAAA,CAAE,EAAAA,EACTE,EAAAA,EAAAA,SACAnC,EAAAA,EAAAA,MACAE,EAAQO,EAARP,SACAkC,EAAW3B,EAAX2B,YACAC,EAAAA,EAAAA,QAAAA,OAAU,IAAAC,KAGJC,EAuFkB,SAAsCC,GAAA,IAAhCR,EAAAQ,EAAHR,IAAKE,EAAAA,EAAAA,KAAMC,IAAAA,SAEtC,IAAKH,IAAQE,EAAM,MAAO,GAE1B,IAAQjC,GAAciC,GAAQ,CAAA,GAAtBjC,UACAwC,GAAgBxC,GAAa,CAAA,GAA7BwC,YAGJC,GAFSC,MAAMC,QAAQZ,GAAOA,EAAMA,EAAIa,OAErB,GACnBC,EAAWJ,EAASK,OAAO,SAAAC,GAAKA,MAAU,UAAVA,EAAEC,GAAe,GAAE,GAEnDH,GAAY7C,IACG,MAAbkC,EACFW,EAAgBA,EAAAA,CAAAA,EAAAA,GAAUtB,QAASvB,EAAUE,WACtCF,GAAa6C,EAAStB,QAAQ0B,WAAWjD,EAAUE,YAC1D2C,EAAgBA,EAAAA,CAAAA,EAAAA,EAAUtB,CAAAA,QAAYvB,EAAUE,SAAQ,MAAM2C,EAAStB,YAG3EkB,EAAWA,EAASS,IAAI,SAAAC,GAAO,MAAiB,YAARH,IAAkBG,EAAIN,CAAS,GAEvE,MAAa,CAAE,EAQf,GANAJ,EAASW,QAAQ,SAAAD,GAGfb,EAFaa,EAAEE,WAAaF,EAAEE,WAAWC,UAAYH,EAAEE,WAAWE,KAAOJ,EAAEH,KAC7DG,EAAEE,WAAaF,EAAEE,WAAW9B,SAAW4B,EAAEE,WAAaF,EAAE5B,OAExE,IAEKe,EAAK,aAA0B,MAAXE,GAAAA,EAAagB,MAAO,CAC3C,IACMC,EAAa,GAAQjB,EAAYgB,MAAME,MAD/B,KACgDlB,EAAYgB,MAAME,MAChFpB,EAAK,YAAiBE,EAAYgB,MAAMG,IAAG,UAC3CrB,EAAK,kBAHS,IAIdA,EAAK,mBAAqBsB,KAAKC,MAAMrB,EAAYgB,MAAMM,OAASL,EACjE,CACD,OAAOnB,CACT,CA3HeyB,CAAkB,CAAEhC,SAT3B,IAAAD,EAAA,CAAA,EAAEA,EAS8BG,KAAAA,EAAMC,SAAAA,IAC3BlC,EAAciC,EAAvBjC,UAAWgE,EAAY/B,EAAZ+B,UACFA,EAAUA,EAAQd,IAAI,SAAmBrB,GAAG,YAATA,EAAVwB,WAA4C,GAAK,GACrFY,EAyEe,SAACN,EAAKD,EAAOI,GAClC,GAAKH,EAOL,OANgBA,EAAI9C,MAAM,KACX,CAAC,CACd8C,IAAAA,EACAD,MAAAA,EACAI,OAAAA,GAGJ,CAlFiBI,CAAe5B,EAAK,YAAaA,EAAK,kBAAmBA,EAAK,oBACpEqB,EAAA,GAAMQ,QAAQC,IAAIC,sBAAuBnC,GAAY,IAe9D,OAbAnC,EAAQD,EAAWC,EAAOC,EAAWC,GAEhCkC,IACHA,EAAcG,EAAKH,YAAcG,EAAKH,YAAcnC,EAAqB,MAATA,OAAS,EAATA,EAAWwC,YAAYL,iBAAcmC,gBAWrGpD,EAAA,QAAAqD,cAACC,EAAOA,QACN,CAAAzE,MAAOA,EACPoC,YAAaA,EACbsC,UAAWd,EACXe,UAAW,CACTf,IAAAA,EACA5D,MAAAA,EACAoC,YAAAA,EACA8B,OAAAA,EACAU,OAAQrC,EAAK,aACbsC,KAAMtC,EAAK,WACXuC,UAAWvC,EAAK,iBAElBwC,QAtBsB,CACxB/E,MAAAA,EACAyD,MAAOlB,EAAK,YACZyC,OAAQ/E,MAAAA,OAAAA,EAAAA,EAAWgF,eACnB/C,KAAe,MAATjC,OAAS,EAATA,EAAWgF,eACjBC,SAAU,uBAkBRC,mBAAoBC,EACpB/C,QAASA,EACTgD,SAAUhD,GAGhB,yBAU8B,SAAHiD,OAAUpD,EAAAoD,EAAJpD,KAAMlC,EAAKsF,EAALtF,MAAOE,EAAAA,EAAAA,SAAUkC,IAAAA,YAE9CnC,EAAmDiC,EAAnDjC,UAAWgE,EAAwC/B,EAAxC+B,QAAsBxB,EAAkBP,EAA/BjC,UAAawC,YAC3B2C,EAAGnB,EAAUA,EAAQd,IAAI,SAAAoC,GAAsB,OAAYjC,EAAAA,CAAAA,EAArBiC,EAAVjC,WAA4C,GAAK,KACvErD,EAAUgF,eAAwChF,uBAAAA,EAAUgF,eAAeO,QAAQ,IAAK,SAAQjB,EAIpH,OAFAvE,EAAQD,EAAWC,EAAOC,EAAWC,gBAGnCiB,EAAC,QAAAqD,cAAAiB,EAAUA,WACT,CAAAzF,MAAOA,EACPoC,YAAaA,EACb+C,mBAAoBC,EACpBT,UAAW,CACTE,KAAM,UACND,OAAQ3E,EAAU2E,OAClBE,UAAW7E,EAAUE,UAEvB4E,QAAS,CACPC,OAAQ/E,EAAUgF,eAClB/C,KAAMwD,EACNR,SAAUzC,EAAYkD,cAI9B"}
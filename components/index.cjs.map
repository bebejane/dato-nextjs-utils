{"version":3,"file":"index.cjs","sources":["../src/components/DatoMarkdown.tsx","../src/components/DatoSEO.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({ seo = {}, site = {}, pathname, title, subtitle, description, noindex = false }: any) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale: meta[\"og:locale\"],\n        type: meta[\"og:type\"],\n        site_name: meta[\"og:site_name\"],\n      }}\n      twitter={twitterProps}\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({ site, url, title, description }) => {\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;"],"names":["children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","title","subtitle","description","noindex","_ref$noindex","globalSeo","fallbackSeo","Array","isArray","tags","titleTag","metaTags","filter","m","tag","_extends","siteName","startsWith","map","t","meta","forEach","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","favicons","images","generateImages","process","env","NEXT_PUBLIC_SITE_URL","createElement","NextSeo","titleSuffix","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","_ref3","replace","undefined","DefaultSeo","twitterSite","twitterCard"],"mappings":"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"}
{"version":3,"file":"index.cjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\n\ntype DefaultSEOProps = {\n  site: any,\n  path: string,\n  title?: string,\n  siteTitle?: string,\n  description?: string,\n}\n\n\ntype DatoSEOProps = DefaultSEOProps & {\n  seo?: any,\n  noindex?: boolean\n}\n\nconst DatoSEO = (props: DatoSEOProps) => {\n\n  const data = parseProps(props)\n\n  return (\n    <NextSeo {...data} />\n  )\n}\nexport default DatoSEO;\n\nexport const DefaultDatoSEO = (props: DefaultSEOProps) => {\n\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  const data = parseProps(props)\n  const titleTemplate = `${props.siteTitle}${data.globalSeo?.titleSuffix ? ` ${data.globalSeo?.titleSuffix}` : ''} %s`\n\n  return (\n    <DefaultSeo\n      {...data}\n      titleTemplate={titleTemplate}\n      defaultTitle={props.siteTitle}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${props.path || ''}`}\n      additionalLinkTags={data.favicons}\n    />\n  )\n}\n\nconst parseProps = ({\n  seo = {},\n  site = {},\n  title,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  description = description || meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      description,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: {\n      title,\n      image: meta[\"og:image\"],\n      handle: globalSeo?.twitterAccount,\n      site: globalSeo?.twitterAccount,\n      cardType: 'summary_large_image',\n    },\n    noindex: noindex,\n    nofollow: noindex,\n    meta,\n    title,\n    description,\n    favicons,\n    globalSeo,\n    images\n  }\n  console.log(props);\n\n\n  return props\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","parseProps","seo","site","_ref$site","title","description","_ref","noindex","_ref$noindex","meta","parseDatoMetaTags","_ref$seo","globalSeo","favicon","map","_ref2","_extends","attributes","images","generateImages","props","openGraph","fallbackSeo","undefined","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","nofollow","favicons","console","log","url","width","height","split","metaTags","Array","isArray","tags","titleTag","filter","m","tag","content","startsWith","siteName","t","forEach","property","name","scaleRatio","Math","round","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href","data","createElement","NextSeo","_data$globalSeo","_data$globalSeo2","process","env","NEXT_PUBLIC_SITE_URL","titleTemplate","siteTitle","titleSuffix","DefaultSeo","defaultTitle","canonical","path","additionalLinkTags"],"mappings":"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"}
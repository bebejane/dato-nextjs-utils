{"version":3,"file":"index.modern.mjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale: meta[\"og:locale\"],\n        type: meta[\"og:type\"],\n        site_name: meta[\"og:site_name\"],\n      }}\n      twitter={twitterProps}\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  subtitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, title, subtitle, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","_ref","_ref$seo","seo","_ref$site","site","pathname","title","subtitle","description","noindex","_ref$noindex","meta","parseDatoMetaTags","globalSeo","favicon","favicons","map","_ref2","attributes","generateImages","url","process","env","NEXT_PUBLIC_SITE_URL","buildTitle","fallbackSeo","undefined","React","NextSeo","canonical","openGraph","images","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","DefaultDatoSEO","_ref3","_extends","twitterSite","replace","createElement","DefaultSeo","siteName","twitterCard","width","height","split","_ref5","metaTags","Array","isArray","tags","titleTag","filter","m","tag","content","startsWith","t","forEach","property","name","scaleRatio","Math","round","titleSuffix","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href"],"mappings":"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"}
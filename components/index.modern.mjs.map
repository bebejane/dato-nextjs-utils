{"version":3,"file":"index.modern.mjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  const props = {\n    canonical: url,\n    openGraph: {\n      url,\n      title,\n      images,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: twitterProps,\n    additionalLinkTags: favicons,\n    noindex: noindex,\n    nofollow: noindex,\n  }\n\n  if (title)\n    props['title'] = title\n  if (description) {\n    props['description'] = description\n    props.openGraph['description'] = description\n  }\n\n  return (\n    <NextSeo {...props} />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  subtitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, title, subtitle, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","_ref","seo","site","_ref$site","pathname","title","subtitle","description","noindex","_ref$noindex","meta","parseDatoMetaTags","_ref$seo","globalSeo","favicon","favicons","map","_extends","attributes","generateImages","process","env","NEXT_PUBLIC_SITE_URL","buildTitle","fallbackSeo","undefined","props","canonical","url","openGraph","images","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","React","createElement","NextSeo","DefaultDatoSEO","_ref3","_ref4","twitterSite","replace","DefaultSeo","siteName","twitterCard","width","height","split","_ref5","metaTags","Array","isArray","tags","titleTag","filter","m","tag","content","startsWith","t","forEach","property","name","scaleRatio","Math","round","titleSuffix","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href","_ref2"],"mappings":"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"}
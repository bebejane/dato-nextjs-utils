{"version":3,"file":"index.modern.mjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\n\ntype DefaultSEOProps = {\n  site: any,\n  path: string,\n  title?: string,\n  siteTitle?: string,\n  description?: any,\n}\n\n\ntype DatoSEOProps = DefaultSEOProps & {\n  seo?: any,\n  noindex?: boolean\n}\n\nconst DatoSEO = (props: DatoSEOProps) => {\n\n  const data = parseProps(props)\n\n  return (\n    <NextSeo {...data} />\n  )\n}\nexport default DatoSEO;\n\nexport const DefaultDatoSEO = (props: DefaultSEOProps) => {\n\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  const data = parseProps(props)\n  const titleTemplate = `${props.siteTitle}${data.globalSeo?.titleSuffix ? ` ${data.globalSeo?.titleSuffix}` : ''} %s`\n\n  return (\n    <DefaultSeo\n      {...data}\n      titleTemplate={titleTemplate}\n      defaultTitle={props.siteTitle}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${props.path || ''}`}\n      additionalLinkTags={data.favicons}\n    />\n  )\n}\n\nconst parseProps = ({\n  seo = {},\n  site = {},\n  title,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  description = description ?? meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      description,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: {\n      title,\n      image: meta[\"og:image\"],\n      handle: globalSeo?.twitterAccount,\n      site: globalSeo?.twitterAccount,\n      cardType: 'summary_large_image',\n    },\n    noindex: noindex,\n    nofollow: noindex,\n    meta,\n    title,\n    description,\n    favicons,\n    globalSeo,\n    images\n  }\n\n\n  return props\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} â€“ ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","props","data","parseProps","React","createElement","NextSeo","DefaultDatoSEO","_data$globalSeo","_data$globalSeo2","process","env","NEXT_PUBLIC_SITE_URL","titleTemplate","siteTitle","globalSeo","titleSuffix","DefaultSeo","defaultTitle","canonical","path","additionalLinkTags","favicons","_ref","seo","site","_ref$site","title","description","noindex","_ref$noindex","meta","parseDatoMetaTags","_ref$seo","favicon","map","_ref2","attributes","images","generateImages","openGraph","fallbackSeo","undefined","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","nofollow","url","width","height","split","_ref3","metaTags","Array","isArray","tags","filter","m","tag","titleTag","content","startsWith","siteName","t","forEach","property","name","Math","round","scaleRatio","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href"],"mappings":"8bAkBMA,IAAAA,EAAU,SAACC,GAEf,IAAMC,EAAOC,EAAWF,gBAExB,OACEG,EAACC,cAAAC,EAAYJ,EAEjB,EAG2BK,EAAG,SAACN,GAG7B,IAAAO,EAAAC,EAAA,IAAKC,QAAQC,IAAIC,qBACf,KAAM,wCAER,IAAMV,EAAOC,EAAWF,GACLY,EAAMZ,EAAMa,WAA0B,OAAdZ,EAAAA,EAAKa,YAALP,EAAgBQ,YAAW,YAAAP,EAAOP,EAAKa,kBAALN,EAAgBO,aAAgB,IAAE,mBAE/G,OACEZ,EAACC,cAAAY,OACKf,EAAI,CACRW,cAAeA,EACfK,aAAcjB,EAAMa,UACpBK,UAAS,GAAKT,QAAQC,IAAIC,sBAAuBX,EAAMmB,MAAQ,IAC/DC,mBAAoBnB,EAAKoB,WAG/B,EAEgBnB,EAAG,SAAHoB,aACdC,QACAC,KAAAA,OAAO,IAAAC,EAAA,CAAE,EACTC,EAAAA,IAAAA,MACAC,EAAAA,EAAAA,gBACAC,QAAAA,OAAU,IAAAC,GAGVA,EAAUC,EAAGC,EAAkB,CAAER,SAP9B,IAAAS,EAAG,CAAA,IAOgCR,KAAAA,IAC9BV,EAAuBU,EAAvBV,UAAWmB,EAAYT,EAAZS,QACbZ,EAAWY,EAAUA,EAAQC,IAAI,SAAmBC,GAAG,OAAYC,EAAAA,CAAAA,EAA/BA,EAAAA,WAA4C,GAAK,GAC/EC,EAAGC,EAAeR,EAAK,YAAaA,EAAK,kBAAmBA,EAAK,oBA+B7E,MA3Bc,CACZS,UAAW,CACTb,MAAAA,EACAW,OAAAA,EACAV,YANJA,UAAcA,EAAAA,KAAeG,EAAKH,aAAcG,EAAKH,YAAcb,QAAYA,SAAAA,EAAW0B,YAAYb,iBAAcc,EAOhHC,OAAQZ,EAAK,aACba,KAAMb,EAAK,WACXc,UAAWd,EAAK,iBAElBe,QAAS,CACPnB,MAAAA,EACAoB,MAAOhB,EAAK,YACZiB,OAAiB,MAATjC,OAAS,EAATA,EAAWkC,eACnBxB,KAAMV,MAAAA,OAAAA,EAAAA,EAAWkC,eACjBC,SAAU,uBAEZrB,QAASA,EACTsB,SAAUtB,EACVE,KAAAA,EACAJ,MAAAA,EACAC,YAAAA,EACAN,SAAAA,EACAP,UAAAA,EACAuB,OAAAA,EAKJ,EAEMC,EAAiB,SAACa,EAAKC,EAAOC,GAClC,GAAKF,EAOL,OANgBA,EAAIG,MAAM,KACX,CAAC,CACdH,IAAAA,EACAC,MAAAA,EACAC,OAAAA,GAGJ,IAE0B,SAAHE,GAAMhC,IAAAA,IAAAA,IAAKC,EAAAA,EAAAA,KAEhC,IAAKD,IAAQC,EAAM,MAAO,GAE1B,IAAQV,GAAcU,GAAQ,CAAA,GAAtBV,UACA0B,GAAgB1B,GAAa,CAAE,GAA/B0B,YAGJgB,GAFSC,MAAMC,QAAQnC,GAAOA,EAAMA,EAAIoC,OAErB,KACRH,EAASI,OAAO,SAAAC,GAAC,MAAc,YAARC,GAAe,GAAE,GAEnDC,GAAYjD,GACVA,GAAaiD,EAASC,QAAQC,WAAWnD,EAAUoD,YACrDH,OAAgBA,EAAQ,CAAEC,QAAYlD,EAAUoD,SAAQ,MAAMH,EAASC,WAG3ER,EAAWA,EAAStB,IAAI,SAAAiC,GAAO,MAAiB,YAARL,IAAkBK,EAAIJ,CAAS,GAEvE,IAAUjC,EAAG,GAQb,GANA0B,EAASY,QAAQ,SAAAD,GAGfrC,EAFaqC,EAAE/B,WAAa+B,EAAE/B,WAAWiC,UAAYF,EAAE/B,WAAWkC,KAAOH,EAAEL,KAC7DK,EAAE/B,WAAa+B,EAAE/B,WAAW4B,SAAWG,EAAE/B,WAAa+B,EAAEH,OAExE,IAEKlC,EAAK,aAAeU,MAAAA,GAAAA,EAAaM,MAAO,CAC3C,MACmB,GAAQN,EAAYM,MAAMM,MAD/B,KACgDZ,EAAYM,MAAMM,MAChFtB,EAAK,YAAiBU,EAAYM,MAAMK,IAAY,UACpDrB,EAAK,kBAHS,IAIdA,EAAK,mBAAqByC,KAAKC,MAAMhC,EAAYM,MAAMO,OAASoB,EACjE,CACD,OAAO3C,CACT,EChHkB4C,EAAG,YAAGC,IAAAA,IAAAA,SAAWC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAAWC,EAASxD,EAATwD,UACtD,IAAIH,EACF,OAAO,KAET,MAAyBC,EAAsFG,EAAiBJ,EAAU,CAACK,MAAMJ,EAAUK,UAAS,IAAhIH,EAVZ,SAACI,EAAmBF,GAC5C,IAAIE,EAAU,OAAeA,EAC7B,IAAMJ,EAAYI,EAAS5B,MAAM,KACjC,OAAgBwB,EAACK,QAAUH,EAASF,EAAUM,MAAM,EAAEJ,GAAOK,KAAK,KAAQ,MAAQH,CACpF,CAMkDI,CAAkBX,EAAoBG,GAAcH,eAEpG,OACExE,gBAACoF,EAAa,CACZC,cAAe,CAACC,EAAIC,GACpBb,UAAWA,EACXF,SAAUX,EAEV2B,WAAY,CAEVC,EAAG,SAAGjB,gBAAc,OAAoBxE,gBAAC0F,EAAI,CAACC,QAAQ,EAAOC,KAAzC5D,EAAJ4D,mBAAyD5F,EAAIwE,cAAAA,IAAAA,OAAvEA,SAAgF,IAAc,IAK5G"}
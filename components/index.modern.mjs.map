{"version":3,"file":"index.modern.mjs","sources":["../src/components/DatoSEO.tsx","../src/components/DatoMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["DatoSEO","seo","site","_ref$site","pathname","title","_ref","subtitle","description","_ref$noindex","noindex","meta","parseDatoMetaTags","_ref$seo","globalSeo","favicon","map","_ref2","attributes","images","generateImages","process","env","NEXT_PUBLIC_SITE_URL","React","createElement","NextSeo","siteName","titleSuffix","fallbackSeo","canonical","url","openGraph","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","favicons","nofollow","width","height","split","metaTags","Array","isArray","tags","titleTag","filter","m","tag","content","startsWith","_extends","t","forEach","property","name","scaleRatio","Math","round","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","length","slice","join","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href"],"mappings":"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"}
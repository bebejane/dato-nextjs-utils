{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any\n  initialData?: any\n  pageSize?: number\n  preview?: boolean\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end: boolean\n}\n\nconst useApiQuery = <T>(document: TypedDocumentNode, { variables, initialData, pageSize, preview = false }: UseApiQueryProps = {}) => {\n\n  const [initial, setInitial] = useState<T>(initialData)\n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no: 1,\n    count: initialData.pagination?.count || 0,\n    size: pageSize,\n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(initialData) !== JSON.stringify(initial)) {\n      setData(initialData)\n      setInitial(initialData)\n    }\n  }, [initialData])\n\n  const loadMore = (vars: any) => load(vars)\n\n  const load = useCallback((vars?: any) => {\n    setLoading(true)\n\n    return apiQuery(document, { variables: { ...variables, ...vars }, preview })\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .finally(() => setLoading(false))\n\n  }, [document, variables, data])\n\n  const nextPage = useCallback(async () => {\n    if (!page)\n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = page.no * page.size\n\n    if (skip > page.count && page.count > 0)\n      return page\n\n    try {\n      const d = await load({ ...variables.variables, first, skip })\n      const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n      const no = page.no + 1\n      const end = no * pageSize >= count\n      const p = { ...page, no, count, end }\n\n      setPage(p)\n      return p;\n\n    } catch (err) {\n      setError(err)\n      return page;\n    }\n  }, [page, variables, pageSize, setPage, setError, load])\n\n  const mergeData = (newData, oldData) => {\n\n    if (!oldData || !newData) return newData\n\n    Object.keys(newData).forEach(k => {\n      if (oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n\n    return newData;\n  }\n\n  useEffect(() => { !initialData && load() }, [initialData, load])\n\n  return { data, error, loading, loadMore, nextPage, page }\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n\n  const storage = globalThis.localStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n  useEffect(() => {\n    const prevRoute = storage.getItem('currentRoute') || null;\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n  }, [router.asPath, storage])\n\n  useEffect(() => {\n    const handleWindowReload = () => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('unload', handleWindowReload)\n    return () => window.removeEventListener('unload', handleWindowReload)\n  }, [])\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean,\n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling: false,\n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer: null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n\n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({ ...scrollInfo, isScrolling: false }), 100)\n    }\n\n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    handleScroll()\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["_ref","_process$env$DATOCMS_","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","async","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","result","text","console","log","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","useApiQuery","document","variables","initialData","pageSize","_initialData$paginati","_initialData$paginati2","_initialData$paginati3","initial","setInitial","useState","data","setData","page","setPage","no","count","pagination","size","end","error","setError","loading","setLoading","useEffect","stringify","load","useCallback","vars","options","Error","setLink","batch","q","idx","length","Promise","all","errorMessages","filter","errors","forEach","e","message","push","res","err","apiQuery","then","d","mergeData","finally","nextPage","first","skip","_d$Object$keys$find","Object","keys","find","k","isNaN","p","newData","oldData","concat","loadMore","usePreviousRoute","storage","globalThis","localStorage","router","useRouter","prevRoute","setPrevRoute","getItem","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","useScrollInfo","pageBottomLimit","scrollInfo","setScrollInfo","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
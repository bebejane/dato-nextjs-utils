{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts","../src/hooks/useLivePreview.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': 'true'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any\n  initialData?: any\n  pageSize?: number\n  preview?: boolean\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end: boolean\n}\n\nconst useApiQuery = <T>(document: TypedDocumentNode, { variables, initialData, pageSize, preview = false }: UseApiQueryProps = {}) => {\n\n  const [initial, setInitial] = useState<T>(initialData)\n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no: 1,\n    count: initialData.pagination?.count || 0,\n    size: pageSize,\n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(initialData) !== JSON.stringify(initial)) {\n      setData(initialData)\n      setInitial(initialData)\n    }\n  }, [initialData])\n\n  const loadMore = (vars: any) => load(vars)\n\n  const load = useCallback((vars?: any) => {\n    setLoading(true)\n\n    return apiQuery(document, { variables: { ...variables, ...vars }, preview })\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .finally(() => setLoading(false))\n\n  }, [document, variables, data])\n\n  const nextPage = useCallback(async () => {\n    if (!page)\n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = page.no * page.size\n\n    if (skip > page.count && page.count > 0)\n      return page\n\n    try {\n      const d = await load({ ...variables.variables, first, skip })\n      const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n      const no = page.no + 1\n      const end = no * pageSize >= count\n      const p = { ...page, no, count, end }\n\n      setPage(p)\n      return p;\n\n    } catch (err) {\n      setError(err)\n      return page;\n    }\n  }, [page, variables, pageSize, setPage, setError, load])\n\n  const mergeData = (newData, oldData) => {\n\n    if (!oldData || !newData) return newData\n\n    Object.keys(newData).forEach(k => {\n      if (oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n\n    return newData;\n  }\n\n  useEffect(() => { !initialData && load() }, [initialData, load])\n\n  return { data, error, loading, loadMore, nextPage, page }\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n\n  const storage = globalThis.localStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n  useEffect(() => {\n    const prevRoute = storage.getItem('currentRoute') || null;\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n  }, [router.asPath, storage])\n\n  useEffect(() => {\n    const handleWindowReload = () => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('unload', handleWindowReload)\n    return () => window.removeEventListener('unload', handleWindowReload)\n  }, [])\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean,\n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling: false,\n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer: null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n\n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({ ...scrollInfo, isScrolling: false }), 100)\n    }\n\n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    handleScroll()\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import { useQuerySubscription } from 'react-datocms';\nimport { subscribeToQuery } from 'datocms-listen'\nimport { DocumentNode } from '@apollo/client/core/core.cjs';\n\nexport type LivePreviewOptions = {\n  preview: boolean\n  variables?: any\n  apiToken?: string\n}\n\nexport default function useLivePreview(\n  query: DocumentNode,\n  initialData: any = {},\n  options: LivePreviewOptions = {\n    preview: false,\n    variables: {}\n  }) {\n\n  const { data, error, status } = useQuerySubscription({\n    token: options.apiToken || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN,\n    query: query,\n    initialData,\n    variables: options.variables,\n    enabled: options.preview,\n    includeDrafts: options.preview,\n    excludeInvalid: true,\n    reconnectionPeriod: 5000,\n  })\n\n  return { data, error, status }\n\n}\n\n// http://localhost:3000/api/preview?slug=/posts/testar&secret=jcV0Zcu6Yyl9"],"names":["isServer","window","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","Promise","resolve","response","t","Date","getTime","_extends","text","result","console","log","e","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","client","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","document","_temp","_initialData$paginati","_initialData$paginati2","_initialData$paginati3","variables","initialData","pageSize","_ref$preview","useState","initial","_useState","setInitial","data","_useState2","setData","no","count","pagination","size","end","page","_useState3","setPage","error","setError","_useState4","loading","setLoading","_useState5","useEffect","stringify","load","useCallback","vars","apiQuery","options","_ref2","_ref2$preview","Error","setLink","batch","q","idx","length","all","errorMessages","filter","errors","forEach","_ref4","message","push","res","_catch","err","then","d","mergeData","skip","first","_d$Object$keys$find","Object","keys","find","k","isNaN","p","newData","oldData","concat","loadMore","nextPage","usePreviousRoute","storage","globalThis","localStorage","router","useRouter","getItem","prevRoute","setPrevRoute","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","handleScroll","useTransitionFix","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","useLivePreview","_useQuerySubscription","useQuerySubscription","token","enabled","includeDrafts","excludeInvalid","reconnectionPeriod","status"],"mappings":"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"}
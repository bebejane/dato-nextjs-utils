{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any\n  initialData?: any\n  pageSize?: number\n  preview?: boolean\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end: boolean\n}\n\nconst useApiQuery = <T>(document: TypedDocumentNode, { variables, initialData, pageSize, preview = false }: UseApiQueryProps = {}) => {\n\n  const [initial, setInitial] = useState<T>(initialData)\n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no: 1,\n    count: initialData.pagination?.count || 0,\n    size: pageSize,\n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(initialData) !== JSON.stringify(initial)) {\n      setData(initialData)\n      setInitial(initialData)\n    }\n  }, [initialData])\n\n  const loadMore = (vars: any) => load(vars)\n\n  const load = useCallback((vars?: any) => {\n    setLoading(true)\n\n    return apiQuery(document, { variables: { ...variables, ...vars }, preview })\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .finally(() => setLoading(false))\n\n  }, [document, variables, data])\n\n  const nextPage = useCallback(async () => {\n    if (!page)\n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = page.no * page.size\n\n    if (skip > page.count && page.count > 0)\n      return page\n\n    try {\n      const d = await load({ ...variables.variables, first, skip })\n      const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n      const no = page.no + 1\n      const end = no * pageSize >= count\n      const p = { ...page, no, count, end }\n\n      setPage(p)\n      return p;\n\n    } catch (err) {\n      setError(err)\n      return page;\n    }\n  }, [page, variables, pageSize, setPage, setError, load])\n\n  const mergeData = (newData, oldData) => {\n\n    if (!oldData || !newData) return newData\n\n    Object.keys(newData).forEach(k => {\n      if (oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n\n    return newData;\n  }\n\n  useEffect(() => { !initialData && load() }, [initialData, load])\n\n  return { data, error, loading, loadMore, nextPage, page }\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n\n  const storage = globalThis.localStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n  useEffect(() => {\n    const prevRoute = storage.getItem('currentRoute') || null;\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n  }, [router.asPath, storage])\n\n  useEffect(() => {\n    const handleWindowReload = () => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('unload', handleWindowReload)\n    return () => window.removeEventListener('unload', handleWindowReload)\n  }, [])\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean,\n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling: false,\n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer: null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n\n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({ ...scrollInfo, isScrolling: false }), 100)\n    }\n\n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    handleScroll()\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["isServer","window","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","JSON","parse","body","toString","undefined","operations","queries","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","result","console","log","requestName","batchMax","batchInterval","preview","apiToken","headers","Authorization","GRAPHQL_INCLUDE_DRAFTS","BatchHttpLink","createLink","previewLink","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","document","_temp","_initialData$paginati","_initialData$paginati2","_initialData$paginati3","variables","initialData","pageSize","_ref$preview","useState","initial","_useState","setInitial","data","_useState2","setData","no","count","pagination","size","end","page","_useState3","setPage","error","setError","_useState4","loading","setLoading","_useState5","useEffect","stringify","load","useCallback","vars","options","_ref2","_ref2$preview","Error","client","setLink","batch","q","idx","length","Promise","all","errorMessages","filter","errors","forEach","_ref4","e","message","push","res","err","then","d","mergeData","resolve","skip","first","_d$Object$keys$find","Object","keys","find","k","isNaN","p","_catch","reject","newData","oldData","concat","loadMore","nextPage","usePreviousRoute","storage","globalThis","localStorage","router","useRouter","getItem","prevRoute","setPrevRoute","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","handleScroll","useTransitionFix","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
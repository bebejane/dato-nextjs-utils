{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`,\n    'X-Exclude-Invalid': true\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {no:1, count:0, size:pageSize, end:false} : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables])\n\n\tuseEffect(()=>{\n    if(!initialData)\n      load()\n    else if(initialData.pagination?.count <= pageSize)\n      setPage((page)=>({...page, end:true}))\n\n  }, [initialData, load, setPage, pageSize])\n\n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["isServer","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","response","t","Date","getTime","text","then","result","console","log","e","Promise","reject","batchMax","batchInterval","headers","Authorization","link","BatchHttpLink","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","useApiQuery","document","_temp","_ref","variables","initialData","pageSize","_useState","useState","data","setData","no","count","size","end","page","_useState2","setPage","error","_useState3","setError","loading","setLoading","_useState4","load","useCallback","vars","options","_ref$preview","preview","Error","resolve","setLink","batch","q","idx","length","all","filter","errors","forEach","_ref3","message","errorMessages","push","res","_catch","err","apiQuery","newData","oldData","d","Object","keys","k","concat","useEffect","_initialData$paginati","pagination","_extends","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","usePreviousRoute","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","window","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
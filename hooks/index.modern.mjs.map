{"version":3,"file":"index.modern.mjs","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\n\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string = GRAPHQL_API_TOKEN) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true,\n  }\n\n  if (preview)\n    headers['X-Include-Drafts'] = true\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ( filter: { id: { eq: \"${id}\" } }) {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","then","response","getTime","text","result","console","log","t","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","previewLink","client","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","useApiQuery","document","_temp","_initialData$paginati","_initialData$paginati2","_ref","variables","initialData","pageSize","_useState","useState","data","setData","_useState2","no","count","size","end","pagination","page","setPage","error","_useState3","setError","loading","setLoading","_useState4","load","useCallback","vars","options","_ref$preview","Error","resolve","setLink","q","idx","length","all","batch","errorMessages","filter","errors","forEach","message","push","res","_catch","err","apiQuery","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","usePreviousRoute","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
{"version":3,"file":"index.umd.js","sources":["../src/api/index.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`,\n    'X-Exclude-Invalid': true,\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts' : true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}\n\nexport const datoError = (err: Error) =>{\n  console.error(err)\n  return err.message || err\n}\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["window","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","then","response","t","Date","getTime","text","result","console","log","e","Promise","reject","batchMax","batchInterval","headers","Authorization","link","BatchHttpLink","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","isServer","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","document","_temp","_initialData$paginati","_initialData$paginati2","_ref","variables","initialData","pageSize","_useState","useState","data","setData","_useState2","no","count","size","end","pagination","page","setPage","error","_useState3","setError","loading","setLoading","_useState4","load","useCallback","vars","apiQuery","options","preview","_ref$preview","Error","resolve","setLink","batch","q","idx","length","all","filter","_ref2","errors","forEach","_ref3","message","push","errorMessages","res","_catch","err","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
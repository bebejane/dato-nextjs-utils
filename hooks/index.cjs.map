{"version":3,"file":"index.cjs","sources":["../src/api/index.ts","../src/hooks/useLivePreview.ts","../src/hooks/useApiQuery.ts","../src/hooks/usePreviousRoute.ts","../src/hooks/useScrollInfo.ts","../src/hooks/useTransitionFix.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string, excludeInvalid: boolean = true) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': excludeInvalid ? 'true' : 'false'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n  excludeInvalid?: boolean\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken, excludeInvalid = true } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken, excludeInvalid) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  //@ts-ignore\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { useQuerySubscription } from 'react-datocms';\nimport * as listen from 'datocms-listen'\nimport { DocumentNode } from '@apollo/client/core/core.cjs';\n\nconst GRAPHQL_API_TOKEN = process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nexport type LivePreviewOptions = {\n  preview: boolean\n  variables?: any\n  apiToken?: string\n}\n\nexport default function useLivePreview(\n  query: DocumentNode,\n  initialData: any = {},\n  options: LivePreviewOptions = {\n    preview: false,\n    variables: {}\n  }) {\n\n  const { data, error, status } = useQuerySubscription({\n    token: options.apiToken || GRAPHQL_API_TOKEN,\n    query: query,\n    initialData,\n    variables: options.variables,\n    enabled: options.preview,\n    includeDrafts: options.preview,\n    excludeInvalid: true,\n    reconnectionPeriod: 5000,\n  })\n\n  return { data, error, status }\n\n}\n\n// http://localhost:3000/api/preview?slug=/posts/testar&secret=jcV0Zcu6Yyl9","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any\n  initialData?: any\n  pageSize?: number\n  preview?: boolean\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end: boolean\n}\n\nconst useApiQuery = <T>(document: TypedDocumentNode, { variables, initialData, pageSize, preview = false }: UseApiQueryProps = {}) => {\n\n  const [initial, setInitial] = useState<T>(initialData)\n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no: 1,\n    count: initialData.pagination?.count || 0,\n    size: pageSize,\n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(initialData) !== JSON.stringify(initial)) {\n      setData(initialData)\n      setInitial(initialData)\n    }\n  }, [initialData])\n\n  const loadMore = (vars: any) => load(vars)\n\n  const load = useCallback((vars?: any) => {\n    setLoading(true)\n\n    return apiQuery(document, { variables: { ...variables, ...vars }, preview })\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .finally(() => setLoading(false))\n\n  }, [document, variables, data])\n\n  const nextPage = useCallback(async () => {\n    if (!page)\n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = page.no * page.size\n\n    if (skip > page.count && page.count > 0)\n      return page\n\n    try {\n      const d = await load({ ...variables.variables, first, skip })\n      const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n      const no = page.no + 1\n      const end = no * pageSize >= count\n      const p = { ...page, no, count, end }\n\n      setPage(p)\n      return p;\n\n    } catch (err) {\n      setError(err)\n      return page;\n    }\n  }, [page, variables, pageSize, setPage, setError, load])\n\n  const mergeData = (newData, oldData) => {\n\n    if (!oldData || !newData) return newData\n\n    Object.keys(newData).forEach(k => {\n      if (oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n\n    return newData;\n  }\n\n  useEffect(() => { !initialData && load() }, [initialData, load])\n\n  return { data, error, loading, loadMore, nextPage, page }\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n\n  const storage = globalThis.localStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n  useEffect(() => {\n    const prevRoute = storage.getItem('currentRoute') || null;\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n  }, [router.asPath, storage])\n\n  useEffect(() => {\n    const handleWindowReload = () => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('unload', handleWindowReload)\n    return () => window.removeEventListener('unload', handleWindowReload)\n  }, [])\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean,\n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling: false,\n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer: null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n\n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({ ...scrollInfo, isScrolling: false }), 100)\n    }\n\n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    handleScroll()\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix"],"names":["isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","_ref","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","operations","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","then","result","console","log","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","excludeInvalid","headers","Authorization","BatchHttpLink","link","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","document","_temp","_initialData$paginati","_initialData$paginati2","_initialData$paginati3","variables","initialData","pageSize","_ref$preview","useState","initial","_useState","setInitial","data","_useState2","setData","no","count","pagination","size","end","page","_useState3","setPage","error","setError","_useState4","loading","setLoading","_useState5","useEffect","stringify","load","useCallback","vars","apiQuery","options","_ref2","_ref2$preview","_ref2$excludeInvalid","Error","resolve","setLink","batch","q","idx","length","all","errorMessages","filter","_ref3","errors","forEach","_ref4","message","push","res","_catch","err","d","mergeData","skip","first","_d$Object$keys$find","Object","keys","find","k","isNaN","p","newData","oldData","concat","loadMore","nextPage","useLivePreview","useQuerySubscription","token","enabled","includeDrafts","reconnectionPeriod","_useQuerySubscription","status","storage","globalThis","localStorage","router","useRouter","getItem","prevRoute","setPrevRoute","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","handleScroll","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect"],"mappings":"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"}
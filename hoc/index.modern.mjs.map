{"version":3,"file":"index.modern.mjs","sources":["../src/hoc/withGlobalProps.ts","../src/api/index.ts","../src/hoc/withPreview.ts","../src/hoc/withWebPreviews.ts","../src/utils/cors.ts","../src/hoc/withWebPreviewsEdge.ts","../src/hoc/withRevalidate.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withBackup.ts","../src/hoc/withBasicAuthEdge.ts","../src/hoc/withFavicon.ts","../src/hoc/withTests.ts","../src/hoc/withCors.ts","../src/hoc/withVercelCronAuth.ts","../src/hoc/withVercelCronAuthEdge.ts","../src/hoc/withBackupEdge.ts"],"sourcesContent":["import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string, excludeInvalid: boolean = true) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': excludeInvalid ? 'true' : 'false'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n  excludeInvalid?: boolean\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken, excludeInvalid = true } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken, excludeInvalid) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  //@ts-ignore\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (!process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `DATOCMS_PREVIEW_SECRET env not set` })\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `Invalid token` })\n\n  if (!req.query.slug)\n    return res.status(500).json({ message: 'Invalid slug' })\n\n  const { slug } = req.query as { slug: string }\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 3 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string | null>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string | null>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'GET' && req.query?.ping)\n      return res.status(200).send('pong')\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body;\n\n    if (!payload || !payload?.entity)\n      return res.status(400).send('Payload empty or missing entity')\n\n    const { entity, related_entities, event_type } = payload\n    const model = related_entities.find(({ id }) => id === entity.relationships?.item_type?.data?.id)\n\n    if (!model)\n      return res.status(400).send('Model not found in payload')\n\n    const record = { id: entity.id, ...entity.attributes, model: model.attributes }\n    const delay = Date.now() - Math.max(new Date(entity.meta.updated_at).getTime(), new Date(entity.meta.published_at).getTime(), new Date(entity.meta.created_at).getTime())\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths)\n          return res.status(400).send('Nothing to revalidate. Paths empty')\n\n        if (paths.length === 0)\n          return res.status(200).json({ revalidated: false, paths, delay, event_type })\n\n        for (const path of paths) {\n          try {\n            await res.revalidate(path)\n          } catch (err) {\n            console.error(err)\n            console.log('Error revalidating', path)\n            throw err\n          }\n        }\n\n        console.log(`revalidate${delay && !['unpublish', 'delete'].includes(event_type) ? ` (${delay}ms)` : ''} ${event_type}`, paths)\n\n        return res.status(200).json({ revalidated: true, paths, delay, event_type })\n      } catch (err) {\n        console.log('Error revalidating', paths)\n        //console.error(err)\n        return res.status(200).json({ revalidated: false, paths, err: err.message, delay, event_type })\n      }\n    })\n  }\n}\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n    throw new Error('BASIC_AUTH_USER or BASIC_AUTH_PASSWORD not set in .env')\n\n  const basicAuth = req.headers.authorization\n\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { username: string, password: string }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    if (process.env.NODE_ENV === 'development')\n      return callback(req, res)\n\n    const basicAuth = req.headers.authorization\n\n    if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      throw new Error('Basic auth not set up in .env')\n\n    if (!basicAuth || !process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD) {\n      res.setHeader('WWW-Authenticate', 'Basic realm=\"NodeJs\", charset=\"UTF-8\"')\n      return res.status(401).send('Access denied')\n    }\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport { buildClient } from '@datocms/cma-client';\n\nconst withBackup = withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    return res.status(500).send('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    return res.status(500).send('DATOCMS_API_TOKEN not set in .env')\n\n  try {\n\n    const maxBackups = req.query.max ? parseInt(req.query.max as string) : 1\n    const backupPrefix = 'auto-backup-'\n    const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n    const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n    const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n    const name = `auto-backup-${today}`\n\n    console.log('Last backup was: ', backups[0]?.id ?? 'none')\n    console.log('Max backups: ', maxBackups)\n    console.log('Creating backup...', name)\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return res.status(200).send(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`)\n  } catch (e) {\n    console.log(e)\n    return res.status(500).send(`Backup failed: ${e.message}`)\n  }\n\n})\n\nexport default withBackup\nexport const maxDuration = 30;\n","import type { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withBasicAuthEdge(callback: (req: NextRequest, res: NextResponse) => void, options?: { username: string, password: string }): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.get('authorization')\n\n    if (!basicAuth)\n      return new Response('Access denied', { status: 401 })\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return new Response('Access denied. Wrong password or username.', { status: 401 })\n\n    return callback(req, res)\n  }\n}","import { GetServerSideProps } from \"next\";\n\nexport const withFavicon: GetServerSideProps = async function ({ res }) {\n\n  if (!process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN)\n    return { notFound: true }\n\n  const query = await fetch('https://graphql.datocms.com/', {\n    method: 'POST',\n    body: JSON.stringify({\n      query:\n        `query Site {\n          site: _site {\n            favicon{\n              url\n              mimeType\n            }\n          }\n        }\n    `}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accepts': 'application/json',\n      'Authorization': process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n    }\n  })\n\n  const { data: { site } } = await query.json() as { data: { site: any } }\n\n  if (!site?.favicon.url)\n    return { notFound: true }\n\n  const reader = (await fetch(site.favicon.url)).body.getReader()\n\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done)\n      break;\n    res.write(value)\n  }\n\n  res.end()\n\n  return {\n    props: {},\n  };\n}\n\nexport default withFavicon","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport withCors from './withCors.js';\nimport { Client, buildClient } from '@datocms/cma-client';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst withTests = withCors(withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  const results = await testApiEndpoints()\n\n  if (req.query?.json) {\n    res.setHeader('Content-Type', 'application/json')\n    res.status(200).json(results)\n  } else if (req.query.text) {\n    res.setHeader('Content-Type', 'text/plain')\n    res.status(200).send(testResultsToString(results))\n  } else {\n    res.setHeader('Content-Type', 'text/html')\n    res.status(200).send(testResultsToHtml(results))\n  }\n}))\n\nexport default withTests\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = await Promise.all(models.map(async (model, i) => {\n\n    const r: TestResult = { model: model.api_key }\n    console.log(`${i + 1}/${models.length}: ${r.model}`)\n\n    try {\n      const previews = await testWebPreviewsEndpoint(model, client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) { }\n\n    try {\n      r.revalidate = await testRevalidateEndpoint(model, client)\n    } catch (e) { }\n\n    return r\n  }))\n\n  return results.sort((a, b) => a.model > b.model ? 1 : -1)\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate || !r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nexport const testResultsToHtml = (results: TestResult[]) => {\n  return `\n    <html>\n      <head>\n        <style>\n          table {\n            border-collapse: collapse;\n            width: 400px;\n          }\n          th, td {\n            padding: 5px;\n            text-align:left;\n          }\n          .center{\n            text-align:center;\n          }\n          .error{\n            color:red;\n          }\n        </style>\n      </head>\n      <body>\n        <pre>\n        <table>\n          <thead>\n            <tr>\n              <th>Model</th>\n              <th>Web Previews</th>\n              <th>Revalidate</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(r => `\n              <tr \n                title=\"Web Previews\\n-----------\\n${!r.previews ? '' : r.previews?.map(p => `${p.label}: ${p.url}`).join('\\n')}\\n\\nRevalidate\\n-----------\\n${!r.revalidate ? '' : r.revalidate?.paths?.join('\\n')}\"\n                class=\"${!r.previews || !r.revalidate?.revalidated ? 'error' : ''}\"\n              >\n                <td>${r.model}</td>\n                <td class=\"center\">${r.previews ? 'x' : '-'}</td>\n                <td class=\"center\">${r.revalidate?.revalidated ? 'x' : '-'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </pre>\n      </body>\n    </html>\n  `\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": {\n          ...item.meta,\n          \"updated_at\": new Date().toISOString(),\n          \"published_at\": new Date().toISOString(),\n          \"created_at\": new Date().toISOString()\n        }\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n  if (res.status === 200) {\n    const json = await res.json()\n    return json\n  } else {\n    throw new Error(`Error testing revalidate endpoint: ${res.status} ${res.statusText}`)\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withCors(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { origin: string, methods: string[] }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n    res.setHeader('Access-Control-Allow-Origin', options?.origin || '*');\n    res.setHeader('Access-Control-Allow-Methods', options?.methods?.join(',') || 'POST,GET,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next/types'\n\nexport default function withVercelCronAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.CRON_SECRET)\n      throw new Error('CRON_SECRET not set in .env')\n\n    if (req.headers?.authorization === `Bearer ${process.env.CRON_SECRET}`)\n      return callback(req, res)\n    else\n      return res.status(401).send('Access denied')\n  }\n}","import { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withVercelCronAuthEdge(callback: (req: NextRequest, res: NextResponse) => void): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n    if (!process.env.CRON_SECRET)\n      throw new Error('CRON_SECRET not set in .env')\n\n    if (req.headers.get('authorization') === `Bearer ${process.env.CRON_SECRET}`)\n      return callback(req, res)\n    else\n      return new Response('Access denied', { status: 401 })\n  }\n}","import type { NextRequest, NextResponse } from 'next/server.js'\nimport withVercelCronAuthEdge from './withVercelCronAuthEdge.js';\nimport { buildClient } from '@datocms/cma-client-browser';\n\nconst withBackupEdge = withVercelCronAuthEdge(async (req: NextRequest, res: NextResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    throw new Error('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    throw new Error('DATOCMS_API_TOKEN not set in .env')\n\n  try {\n    const params = new URLSearchParams(req.nextUrl.searchParams)\n    const maxBackups = params.get('max') ? parseInt(params.get('max') as string) : 1\n    const backupPrefix = 'auto-backup-'\n    const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n    const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n    const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n    const name = `auto-backup-${today}`\n\n    console.log('Last backup was: ', backups[0]?.id ?? 'none')\n    console.log('Max backups: ', maxBackups)\n    console.log('Creating backup...', name)\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return new Response(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`, { status: 200 })\n  } catch (e) {\n    console.log(e)\n    return new Response(`Backup failed: ${e.message}`, { status: 500 })\n  }\n})\n\nexport default withBackupEdge"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","_ref","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","operations","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","then","result","console","log","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","excludeInvalid","headers","Authorization","BatchHttpLink","link","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","withGlobalProps","opt","callback","id","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","push","apply","seo","gql","model","context","apiQuery","options","variables","_ref2","_ref2$preview","_ref2$excludeInvalid","Error","resolve","setLink","batch","q","idx","vars","length","all","data","errorMessages","filter","_ref3","errors","forEach","_ref4","message","res","_catch","err","props","withPreview","req","_req$query","method","ping","status","send","DATOCMS_PREVIEW_SECRET","json","secret","slug","Location","startsWith","setPreviewData","maxAge","writeHead","end","error","withWebPreviews","generatePreviewUrl","NEXT_PUBLIC_SITE_URL","SITE_URL","setHeader","previewLinks","path","_path","baseUrl","url","URL","origin","pathname","label","cors","methods","opts","originHeadersFromReq","_opts$origin","originHeaders","v","k","append","set","mergeHeaders","credentials","exposed","exposedHeaders","allowed","Headers","get","getAllowedHeaders","allowedHeaders","String","preflightContinue","Response","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","_temp2","some","o","RegExp","test","withWebPreviewsEdge","corsOptions","payload","stringify","pact","state","s","_Pact","_settle","bind","onFulfilled","onRejected","this","_this","basicAuth","entity","event_type","related_entities","find","_entity$relationships","relationships","item_type","_entity$relationships2","_entity$relationships3","record","attributes","delay","now","Math","max","meta","updated_at","published_at","created_at","paths","includes","revalidated","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","authorization","split","Buffer","from","auth","_Buffer$from$toString","withBasicAuth","NODE_ENV","username","password","pwd","withBackup","DATOCMS_API_TOKEN","maxBackups","backupPrefix","buildClient","environment","requestTimeout","environments","list","_client$environments$","_backups$0$id","_backups$","backups","primary","sort","a","b","replace","name","toISOString","replaceAll","fork","immediate_return","fast","force","i","_for","reverse","slice","_temp","destroy","prototype","withBasicAuthEdge","withFavicon","Accepts","site","favicon","reader","_fetch","getReader","_interrupt","read","done","write","notFound","withTests","itemTypes","models","modular_block","_temp4","testRevalidateEndpoint","_testRevalidateEndpoi","r","api_key","_temp5","testWebPreviewsEndpoint","previews","results","testApiEndpoints","testResultsToString","testResultsToHtml","baseApiUrl","_r$revalidate","_r$revalidate2","_r$previews","_r$revalidate3","_r$revalidate3$paths","_r$revalidate4","_r$revalidate5","p","itemType","items","type","_client$items$list","item","btoa","environmentId","locale","_client$items$list2","entity_type","statusText","withVercelCronAuth","_req$headers","CRON_SECRET","withVercelCronAuthEdge","withBackupEdge","params","URLSearchParams","nextUrl","searchParams","today","_temp3"],"mappings":"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"}
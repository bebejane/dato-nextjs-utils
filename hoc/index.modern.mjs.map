{"version":3,"file":"index.modern.mjs","sources":["../src/hoc/withGlobalProps.ts","../src/api/index.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts","../src/hoc/withBasicAuth.ts"],"sourcesContent":["import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true\n  }\n\n  headers['X-Include-Drafts'] = preview ? true : GRAPHQL_INCLUDE_DRAFTS\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n    client.headers\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n\n  const { slug } = req.query as { slug: string }\n\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 10 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  const basicAuth = req.headers.authorization\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any): Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId)\n    throw 'Model id not found in payload!'\n\n  const client = buildClient({ apiToken: process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout: 3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n\n  if (!record)\n    throw `No record found with modelId: ${modelId} (${model.api_key})`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n    record._payload = payload\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      } catch (err) {\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n\n    })\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    const basicAuth = req.headers.authorization\n    if (!basicAuth)\n      return res.status(401).send('Access denied')\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const isAuthorized = user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","DATOCMS_ENVIRONMENT","_process$env$DATOCMS_","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","operations","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","result","console","log","requestName","batchMax","batchInterval","createLink","preview","apiToken","Authorization","headers","GRAPHQL_ENVIRONMENT","BatchHttpLink","link","previewLink","client","ApolloClient","cache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","withGlobalProps","opt","callback","id","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","push","apply","seo","gql","model","context","apiQuery","options","variables","_ref","_ref$preview","Error","setLink","q","idx","vars","length","Promise","resolve","all","batch","data","errorMessages","filter","errors","_ref2","forEach","_ref3","e","message","res","err","props","reject","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","Location","startsWith","setPreviewData","maxAge","writeHead","end","error","withRevalidate","_req$body","basicAuth","authorization","auth","split","Buffer","from","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","payload","entity","recordFromPayload","modelId","relationships","_payload$relationship2","_payload$relationship","item_type","_payload$relationship3","buildClient","requestTimeout","itemTypes","list","models","find","m","items","type","api_key","fields","eq","then","records","record","_payload","paths","p","revalidated","_catch","withBasicAuth","pwd","isAuthorized"],"mappings":"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"}
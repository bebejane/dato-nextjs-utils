{"version":3,"file":"index.cjs","sources":["../src/api/index.ts","../src/hoc/withGlobalProps.ts","../src/utils/cors.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts","../src/hoc/withWebPreviews.ts","../src/hoc/withWebPreviewsEdge.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    const basicAuth = req.headers.authorization\n    if (!basicAuth)\n      return res.status(401).send('Access denied')\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const isAuthorized = user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n\n  const { slug } = req.query as { slug: string }\n\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 10 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  const basicAuth = req.headers.authorization\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any): Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId)\n    throw 'Model id not found in payload!'\n\n  const client = buildClient({ apiToken: process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout: 3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n\n  if (!record)\n    throw `No record found with modelId: ${modelId} (${model.api_key})`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n    record._payload = payload\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      } catch (err) {\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n\n    })\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const path = await generatePreviewUrl(payload);\n    const previewLinks = []\n    const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      console.log(payload.item)\n      console.log(payload?.item?.attributes?.status)\n      if (process.env.DATOCMS_PREVIEW_SECRET && payload?.item?.meta?.status !== 'published')\n        previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const path = await generatePreviewUrl(payload);\n    const previewLinks = []\n    const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      if (process.env.DATOCMS_PREVIEW_SECRET && payload?.item?.meta?.status !== 'published')\n        previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}"],"names":["_templateObject","isServer","window","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","JSON","parse","body","toString","undefined","operations","queries","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","result","console","log","requestName","batchMax","batchInterval","preview","apiToken","headers","Authorization","GRAPHQL_INCLUDE_DRAFTS","BatchHttpLink","createLink","previewLink","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","GlobalQuery","gql","cors","req","res","options","methods","opts","Promise","resolve","originHeadersFromReq","origin","_opts$origin","originHeaders","v","k","append","set","forEach","mergeHeaders","credentials","exposed","exposedHeaders","method","allowed","Headers","get","getAllowedHeaders","allowedHeaders","maxAge","String","preflightContinue","Response","status","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","then","_temp2","some","o","RegExp","test","callback","authorization","basicAuth","send","auth","split","Buffer","from","pwd","BASIC_AUTH_USER","_Buffer$from$toString","BASIC_AUTH_PASSWORD","isAuthorized","e","reject","opt","id","revalidate","parseInt","REVALIDATE_TIME","push","apply","seo","model","context","apiQuery","_ref2","variables","_ref2$preview","Error","client","setLink","batch","q","idx","length","vars","all","data","errorMessages","filter","errors","_ref4","message","err","props","withPreview","secret","DATOCMS_PREVIEW_SECRET","slug","json","Location","startsWith","setPreviewData","writeHead","end","error","withRevalidate","_req$body","payload","entity","recordFromPayload","modelId","relationships","_payload$relationship2","_payload$relationship","item_type","_payload$relationship3","buildClient","requestTimeout","itemTypes","list","models","find","m","items","type","api_key","fields","eq","records","record","_payload","paths","p","revalidated","_catch","generatePreviewUrl","NEXT_PUBLIC_SITE_URL","SITE_URL","setHeader","path","previewLinks","label","url","baseUrl","item","_payload$item$attribu","_payload$item","attributes","_payload$item2$meta","_payload$item2","meta","withWebPreviewsEdge","corsOptions","_payload$item$meta","stringify"],"mappings":"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"}
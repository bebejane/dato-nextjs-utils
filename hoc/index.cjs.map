{"version":3,"file":"index.cjs","sources":["../src/api/index.ts","../src/hoc/withGlobalProps.ts","../src/utils/cors.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withBackup.ts","../src/hoc/withBasicAuthEdge.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts","../src/hoc/withWebPreviews.ts","../src/hoc/withWebPreviewsEdge.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': 'true'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    const basicAuth = req.headers.authorization\n\n    if (!basicAuth)\n      return res.status(401).send('Access denied')\n    console.log(process.env.BASIC_AUTH_USER, process.env.BASIC_PASSWORD)\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const isAuthorized = user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport { buildClient } from '@datocms/cma-client';\n\nconst withBackup = withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    return res.status(401).send('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    return res.status(401).send('DATOCMS_API_TOKEN not set in .env')\n\n  const maxBackups = req.query.max ? parseInt(req.query.max as string) : 1\n  const backupPrefix = 'auto-backup-'\n  const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n  const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n  const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n  const name = `auto-backup-${today}`\n\n  console.log('Last backup was: ', backups[0]?.id, 'Max backups:', maxBackups)\n  console.log('Creating backup...', name)\n\n  try {\n\n    const backup = await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: false,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      console.log('Deleting old backup...', backups[i].id)\n      await client.environments.destroy(backups[i].id)\n    }\n    console.log('Backup done!', backup.id)\n  } catch (e) {\n    console.error(e)\n    return res.status(401).send(`Backup failed: ${e.message}`)\n  }\n\n  return res.status(200).send('OK')\n\n})\n\nexport default withBackup","import type { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withBasicAuthEdge(callback: (req: NextRequest, res: NextResponse) => void): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    const basicAuth = req.headers.get('authorization')\n\n    if (!basicAuth)\n      return new Response('Access denied', { status: 401 })\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const isAuthorized = user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n\n    if (!isAuthorized)\n      return new Response('Access denied. Wrong password or username.', { status: 401 })\n\n    return callback(req, res)\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n\n  const { slug } = req.query as { slug: string }\n\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 10 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n    throw new Error('BASIC_AUTH_USER or BASIC_AUTH_PASSWORD not set in .env')\n\n  const basicAuth = req.headers.authorization\n\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any): Promise<any> => {\n\n  const modelId = payload?.entity?.relationships?.item_type?.data?.id\n  const eventType = payload?.event_type\n\n  if (!modelId)\n    throw 'Model id not found in payload!'\n\n  const client = buildClient({ apiToken: process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout: 3000 })\n  const model = await client.itemTypes.find(modelId)\n\n  try {\n    const record = await client.items.find(payload.entity.id, { version: 'current' })\n\n    if (!record && eventType !== 'delete')\n      throw `No record found with modelId: ${modelId} (${model.api_key})`\n\n    return { ...record, model }\n  } catch (err) {\n\n    const isDeleted = err.response?.status === 404 && (eventType === 'delete' || eventType === 'unpublish');\n\n    if (isDeleted)\n      return { id: payload.entity.id, ...payload.entity.attributes, model }\n    else\n      throw err;\n  }\n\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'GET' && req.query?.ping)\n      return res.status(200).send('pong')\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body;\n\n    if (!payload || !payload.entity)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n    record._payload = payload.entity\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths || !paths.length)\n          throw 'Nothing to revalidate';\n\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        return res.json({ revalidated: true, paths })\n      } catch (err) {\n        //console.error(err)\n        console.log('error when revalidating')\n        return res.json({ revalidated: false, err })\n      }\n    })\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const path = await generatePreviewUrl(payload);\n    const previewLinks = []\n    const baseUrl = path?.startsWith('https://') ? '' : process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n\n      if (process.env.DATOCMS_PREVIEW_SECRET && payload?.item?.meta?.status !== 'published')\n        previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const path = await generatePreviewUrl(payload);\n    const previewLinks = []\n    const baseUrl = path?.startsWith('https://') ? '' : process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      if (process.env.DATOCMS_PREVIEW_SECRET && payload?.item?.meta?.status !== 'published')\n        previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","JSON","parse","body","toString","undefined","requestName","queries","Array","isArray","map","op","operationName","join","Promise","resolve","then","response","t","Date","getTime","_extends","text","result","console","log","e","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","GlobalQuery","gql","cors","req","res","options","methods","opts","originHeadersFromReq","origin","_opts$origin","originHeaders","v","k","append","set","forEach","mergeHeaders","credentials","exposed","exposedHeaders","method","allowed","Headers","get","getAllowedHeaders","allowedHeaders","maxAge","String","preflightContinue","Response","status","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","_temp2","some","o","RegExp","test","withBasicAuth","callback","basicAuth","authorization","send","BASIC_AUTH_USER","BASIC_PASSWORD","auth","split","_Buffer$from$toString","Buffer","from","isAuthorized","BASIC_AUTH_PASSWORD","withBackup","_req$query","ping","DATOCMS_API_TOKEN","maxBackups","max","parseInt","backupPrefix","client","buildClient","environment","requestTimeout","environments","list","backups","_client$environments$","filter","id","startsWith","meta","primary","sort","a","b","replace","name","today","toISOString","replaceAll","_backups$","_temp3","fork","immediate_return","fast","force","backup","i","_temp","_for","reverse","slice","length","destroy","_catch","error","message","_temp4","_Pact","prototype","onFulfilled","onRejected","state","this","s","_settle","_this","pwd","opt","revalidate","REVALIDATE_TIME","push","apply","seo","model","context","apiQuery","_ref2","variables","_ref2$preview","Error","setLink","batch","q","idx","vars","all","data","errorMessages","errors","_ref4","err","props","secret","DATOCMS_PREVIEW_SECRET","slug","json","Location","setPreviewData","writeHead","end","withRevalidate","payload","entity","_payload$entity","_payload$entity$relat","_payload$entity$relat2","_payload$entity$relat3","modelId","relationships","item_type","eventType","event_type","itemTypes","find","items","version","record","api_key","_err$response","attributes","recordFromPayload","_payload","paths","p","revalidated","generatePreviewUrl","NEXT_PUBLIC_SITE_URL","SITE_URL","setHeader","path","previewLinks","baseUrl","label","url","_payload$item","item","_payload$item$meta","corsOptions","stringify"],"mappings":"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"}
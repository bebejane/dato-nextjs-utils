{"version":3,"file":"index.cjs","sources":["../src/api/index.ts","../src/hoc/withGlobalProps.ts","../src/utils/cors.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withBackup.ts","../src/hoc/withFavicon.ts","../src/utils/tests.ts","../src/hoc/withBasicAuthEdge.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts","../src/hoc/withTests.ts","../src/hoc/withWebPreviews.ts","../src/hoc/withWebPreviewsEdge.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': 'true'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { username: string, password: string }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.authorization\n\n    if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      throw new Error('Basic auth not set up in .env')\n\n    if (!basicAuth || !process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      return res.status(401).send('Access denied')\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport { buildClient } from '@datocms/cma-client';\n\nconst withBackup = withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    return res.status(500).send('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    return res.status(500).send('DATOCMS_API_TOKEN not set in .env')\n\n  const maxBackups = req.query.max ? parseInt(req.query.max as string) : 1\n  const backupPrefix = 'auto-backup-'\n  const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n  const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n  const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n  const name = `auto-backup-${today}`\n\n  console.log('Last backup was: ', backups[0]?.id ?? 'none')\n  console.log('Max backups: ', maxBackups)\n  console.log('Creating backup...', name)\n\n  try {\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return res.status(200).send(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`)\n  } catch (e) {\n    console.error(e)\n    return res.status(500).send(`Backup failed: ${e.message}`)\n  }\n\n})\n\nexport default withBackup\nexport const maxDuration = 30;\n","import { GetServerSideProps } from \"next\";\n\nexport const withFavicon: GetServerSideProps = async function ({ res }) {\n\n  if (!process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN)\n    return { notFound: true }\n\n  const query = await fetch('https://graphql.datocms.com/', {\n    method: 'POST',\n    body: JSON.stringify({\n      query:\n        `query Site {\n          site: _site {\n            favicon{\n              url\n              mimeType\n            }\n          }\n        }\n    `}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accepts': 'application/json',\n      'Authorization': process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n    }\n  })\n\n  const { data: { site } } = await query.json() as { data: { site: any } }\n\n  if (!site?.favicon.url)\n    return { notFound: true }\n\n  const reader = (await fetch(site.favicon.url)).body.getReader()\n\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done)\n      break;\n    res.write(value)\n  }\n\n  res.end()\n\n  return {\n    props: {},\n  };\n}\n\nexport default withFavicon","import { Client, buildClient } from '@datocms/cma-client-node';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = []\n\n  for (let i = 0; i < models.length; i++) {\n    const r: TestResult = { model: models[i].api_key }\n\n    try {\n      const previews = await testWebPreviewsEndpoint(models[i], client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) {\n\n    }\n\n    try {\n      const revalidate = await testRevalidateEndpoint(models[i], client)\n      if (revalidate.revalidated && revalidate.paths.length > 0)\n        r.revalidate = revalidate\n\n    } catch (e) {\n\n    }\n    results.push(r)\n  }\n\n  return results\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/api/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": item.meta\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n\n  const json = await res.json()\n  return json\n}","import type { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withBasicAuthEdge(callback: (req: NextRequest, res: NextResponse) => void, options?: { username: string, password: string }): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.get('authorization')\n\n    if (!basicAuth)\n      return new Response('Access denied', { status: 401 })\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return new Response('Access denied. Wrong password or username.', { status: 401 })\n\n    return callback(req, res)\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (!process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `DATOCMS_PREVIEW_SECRET env not set` })\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `Invalid token` })\n\n  if (!req.query.slug)\n    return res.status(500).json({ message: 'Invalid slug' })\n\n  const { slug } = req.query as { slug: string }\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 3 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n    throw new Error('BASIC_AUTH_USER or BASIC_AUTH_PASSWORD not set in .env')\n\n  const basicAuth = req.headers.authorization\n\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'GET' && req.query?.ping) {\n      console.log('ping')\n      return res.status(200).send('pong')\n    }\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body;\n\n    if (!payload || !payload?.entity)\n      throw 'Payload is empty'\n\n    const { entity, related_entities, event_type } = payload\n    const model = related_entities.find(({ id }) => id === entity.relationships?.item_type?.data?.id)\n\n    if (!model)\n      throw new Error(`Model not found in payload`)\n\n    const record = { ...entity.attributes, model: model.attributes }\n    const delay = Date.now() - Math.max(new Date(entity.meta.updated_at).getTime(), new Date(entity.meta.published_at).getTime(), new Date(entity.meta.created_at).getTime())\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths || !paths.length)\n          throw 'Nothing to revalidate';\n\n        await Promise.all(paths.map(p => res.revalidate(p)))\n\n        console.log(`revalidate${delay && !['unpublish', 'delete'].includes(event_type) ? ` (${delay}ms)` : ''} ${event_type}`, paths)\n\n        return res.json({ revalidated: true, paths, delay, event_type })\n      } catch (err) {\n        console.log('Error revalidating', paths)\n        console.error(err)\n        return res.json({ revalidated: false, err, delay, event_type })\n      }\n    })\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { testApiEndpoints, testResultsToString } from '../utils/tests.js'\n\nexport default async function withTests(req: NextApiRequest, res: NextApiResponse) {\n  const results = await testApiEndpoints()\n  res.status(200).send(testResultsToString(results))\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}"],"names":["_templateObject","isServer","window","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","Promise","resolve","response","t","Date","getTime","_extends","text","result","console","log","e","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","GlobalQuery","gql","cors","req","res","options","methods","opts","originHeadersFromReq","origin","_opts$origin","originHeaders","v","k","append","set","forEach","mergeHeaders","credentials","exposed","exposedHeaders","method","allowed","Headers","get","getAllowedHeaders","allowedHeaders","maxAge","String","preflightContinue","Response","status","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","then","_temp2","some","o","RegExp","test","callback","basicAuth","authorization","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","Error","send","auth","split","Buffer","from","username","password","pwd","withBackup","withBasicAuth","DATOCMS_API_TOKEN","max","parseInt","backupPrefix","buildClient","environment","requestTimeout","environments","list","_client$environments$","_backups$0$id","_backups$","backups","filter","id","startsWith","meta","primary","sort","a","b","replace","name","toISOString","replaceAll","maxBackups","_catch","fork","immediate_return","fast","force","_temp3","i","reverse","slice","length","_temp","destroy","error","message","_settle","state","pact","s","_Pact","prototype","onFulfilled","onRejected","this","_this","bind","observer","baseApiUrl","NEXT_PUBLIC_SITE_URL","_Buffer$from$toString","stringify","Accepts","json","_ref2","site","data","favicon","url","end","props","reader","_fetch","getReader","_for","_interrupt","read","_ref3","done","write","notFound","opt","revalidate","REVALIDATE_TIME","push","apply","seo","model","context","apiQuery","variables","_ref2$preview","setLink","batch","q","idx","vars","all","errorMessages","errors","_ref4","err","_req$query","ping","DATOCMS_PREVIEW_SECRET","secret","slug","Location","setPreviewData","writeHead","payload","entity","event_type","related_entities","find","relationships","_entity$relationships2","_entity$relationships","item_type","_entity$relationships3","record","attributes","delay","now","Math","updated_at","published_at","created_at","paths","p","includes","revalidated","withTests","itemTypes","models","modular_block","results","_temp5","_temp4","r","itemType","items","type","api_key","_client$items$list2","item","btoa","entity_type","testRevalidateEndpoint","testWebPreviewsEndpoint","_client$items$list","environmentId","locale","previewLinks","previews","thenable","testApiEndpoints","nopreviews","testResultsToString","generatePreviewUrl","SITE_URL","setHeader","path","_path","baseUrl","URL","pathname","label","corsOptions"],"mappings":"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"}
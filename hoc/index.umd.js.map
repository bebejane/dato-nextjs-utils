{"version":3,"file":"index.umd.js","sources":["../src/hoc/withGlobalProps.ts","../src/api/index.ts","../src/utils/cors.ts","../src/hoc/withRevalidate.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withBackup.ts","../src/hoc/withFavicon.ts","../src/hoc/withTests.ts","../src/hoc/withCors.ts","../src/hoc/withVercelCronAuthEdge.ts","../src/hoc/withBackupEdge.ts","../src/hoc/withBasicAuthEdge.ts","../src/hoc/withPreview.ts","../src/hoc/withVercelCronAuth.ts","../src/hoc/withWebPreviews.ts","../src/hoc/withWebPreviewsEdge.ts"],"sourcesContent":["import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string, excludeInvalid: boolean = true) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': excludeInvalid ? 'true' : 'false'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n  excludeInvalid?: boolean\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken, excludeInvalid = true } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken, excludeInvalid) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  //@ts-ignore\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'GET' && req.query?.ping)\n      return res.status(200).send('pong')\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body;\n\n    if (!payload || !payload?.entity)\n      return res.status(400).send('Payload empty or missing entity')\n\n    const { entity, related_entities, event_type } = payload\n    const model = related_entities.find(({ id }) => id === entity.relationships?.item_type?.data?.id)\n\n    if (!model)\n      return res.status(400).send('Model not found in payload')\n\n    const record = { id: entity.id, ...entity.attributes, model: model.attributes }\n    const delay = Date.now() - Math.max(new Date(entity.meta.updated_at).getTime(), new Date(entity.meta.published_at).getTime(), new Date(entity.meta.created_at).getTime())\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths)\n          return res.status(400).send('Nothing to revalidate. Paths empty')\n\n        if (paths.length === 0)\n          return res.status(200).json({ revalidated: false, paths, delay, event_type })\n\n        for (const path of paths) {\n          try {\n            await res.revalidate(path)\n          } catch (err) {\n            console.error(err)\n            console.log('Error revalidating', path)\n            throw err\n          }\n        }\n\n        console.log(`revalidate${delay && !['unpublish', 'delete'].includes(event_type) ? ` (${delay}ms)` : ''} ${event_type}`, paths)\n\n        return res.status(200).json({ revalidated: true, paths, delay, event_type })\n      } catch (err) {\n        console.log('Error revalidating', paths)\n        //console.error(err)\n        return res.status(200).json({ revalidated: false, paths, err: err.message, delay, event_type })\n      }\n    })\n  }\n}\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n    throw new Error('BASIC_AUTH_USER or BASIC_AUTH_PASSWORD not set in .env')\n\n  const basicAuth = req.headers.authorization\n\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { username: string, password: string }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    if (process.env.NODE_ENV === 'development')\n      return callback(req, res)\n\n    const basicAuth = req.headers.authorization\n\n    if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      throw new Error('Basic auth not set up in .env')\n\n    if (!basicAuth || !process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD) {\n      res.setHeader('WWW-Authenticate', 'Basic realm=\"NodeJs\", charset=\"UTF-8\"')\n      return res.status(401).send('Access denied')\n    }\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport { buildClient } from '@datocms/cma-client';\n\nconst withBackup = withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    return res.status(500).send('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    return res.status(500).send('DATOCMS_API_TOKEN not set in .env')\n\n  try {\n\n    const maxBackups = req.query.max ? parseInt(req.query.max as string) : 1\n    const backupPrefix = 'auto-backup-'\n    const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n    const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n    const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n    const name = `auto-backup-${today}`\n\n    console.log('Last backup was: ', backups[0]?.id ?? 'none')\n    console.log('Max backups: ', maxBackups)\n    console.log('Creating backup...', name)\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return res.status(200).send(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`)\n  } catch (e) {\n    console.log(e)\n    return res.status(500).send(`Backup failed: ${e.message}`)\n  }\n\n})\n\nexport default withBackup\nexport const maxDuration = 30;\n","import { GetServerSideProps } from \"next\";\n\nexport const withFavicon: GetServerSideProps = async function ({ res }) {\n\n  if (!process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN)\n    return { notFound: true }\n\n  const query = await fetch('https://graphql.datocms.com/', {\n    method: 'POST',\n    body: JSON.stringify({\n      query:\n        `query Site {\n          site: _site {\n            favicon{\n              url\n              mimeType\n            }\n          }\n        }\n    `}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accepts': 'application/json',\n      'Authorization': process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n    }\n  })\n\n  const { data: { site } } = await query.json() as { data: { site: any } }\n\n  if (!site?.favicon.url)\n    return { notFound: true }\n\n  const reader = (await fetch(site.favicon.url)).body.getReader()\n\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done)\n      break;\n    res.write(value)\n  }\n\n  res.end()\n\n  return {\n    props: {},\n  };\n}\n\nexport default withFavicon","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport withCors from './withCors.js';\nimport { Client, buildClient } from '@datocms/cma-client';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst withTests = withCors(withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  const results = await testApiEndpoints()\n\n  if (req.query?.json) {\n    res.setHeader('Content-Type', 'application/json')\n    res.status(200).json(results)\n  } else if (req.query.text) {\n    res.setHeader('Content-Type', 'text/plain')\n    res.status(200).send(testResultsToString(results))\n  } else {\n    res.setHeader('Content-Type', 'text/html')\n    res.status(200).send(testResultsToHtml(results))\n  }\n}))\n\nexport default withTests\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = await Promise.all(models.map(async (model, i) => {\n\n    const r: TestResult = { model: model.api_key }\n    console.log(`${i + 1}/${models.length}: ${r.model}`)\n\n    try {\n      const previews = await testWebPreviewsEndpoint(model, client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) { }\n\n    try {\n      r.revalidate = await testRevalidateEndpoint(model, client)\n    } catch (e) { }\n\n    return r\n  }))\n\n  return results.sort((a, b) => a.model > b.model ? 1 : -1)\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate || !r.revalidate?.paths.length).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nexport const testResultsToHtml = (results: TestResult[]) => {\n  return `\n    <html>\n      <head>\n        <style>\n          table {\n            border-collapse: collapse;\n            width: 400px;\n          }\n          th, td {\n            padding: 5px;\n            text-align:left;\n          }\n          .center{\n            text-align:center;\n          }\n          .error{\n            color:red;\n          }\n        </style>\n      </head>\n      <body>\n        <pre>\n        <table>\n          <thead>\n            <tr>\n              <th>Model</th>\n              <th>Web Previews</th>\n              <th>Revalidate</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(r => `\n              <tr \n                title=\"Web Previews\\n-----------\\n${!r.previews ? '' : r.previews?.map(p => `${p.label}: ${p.url}`).join('\\n')}\\n\\nRevalidate\\n-----------\\n${!r.revalidate ? '' : r.revalidate?.paths?.join('\\n')}\"\n                class=\"${!r.previews || !r.revalidate?.revalidated ? 'error' : ''}\"\n              >\n                <td>${r.model}</td>\n                <td class=\"center\">${r.previews ? 'x' : '-'}</td>\n                <td class=\"center\">${r.revalidate?.revalidated ? 'x' : '-'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </pre>\n      </body>\n    </html>\n  `\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": {\n          ...item.meta,\n          \"updated_at\": new Date().toISOString(),\n          \"published_at\": new Date().toISOString(),\n          \"created_at\": new Date().toISOString()\n        }\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n  if (res.status === 200) {\n    const json = await res.json()\n    return json\n  } else {\n    throw new Error(`Error testing revalidate endpoint: ${res.status} ${res.statusText}`)\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withCors(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { origin: string, methods: string[] }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n    res.setHeader('Access-Control-Allow-Origin', options?.origin || '*');\n    res.setHeader('Access-Control-Allow-Methods', options?.methods?.join(',') || 'POST,GET,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    return callback(req, res)\n  }\n}\n\n\n","import { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withVercelCronAuthEdge(callback: (req: NextRequest, res: NextResponse) => void): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n    if (!process.env.CRON_SECRET)\n      throw new Error('CRON_SECRET not set in .env')\n\n    if (req.headers.get('authorization') === `Bearer ${process.env.CRON_SECRET}`)\n      return callback(req, res)\n    else\n      return new Response('Access denied', { status: 401 })\n  }\n}","import type { NextRequest, NextResponse } from 'next/server.js'\nimport withVercelCronAuthEdge from './withVercelCronAuthEdge.js';\nimport { buildClient } from '@datocms/cma-client-browser';\n\nconst withBackupEdge = withVercelCronAuthEdge(async (req: NextRequest, res: NextResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    throw new Error('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    throw new Error('DATOCMS_API_TOKEN not set in .env')\n\n  try {\n    const params = new URLSearchParams(req.nextUrl.searchParams)\n    const maxBackups = params.get('max') ? parseInt(params.get('max') as string) : 1\n    const backupPrefix = 'auto-backup-'\n    const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n    const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n    const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n    const name = `auto-backup-${today}`\n\n    console.log('Last backup was: ', backups[0]?.id ?? 'none')\n    console.log('Max backups: ', maxBackups)\n    console.log('Creating backup...', name)\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return new Response(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`, { status: 200 })\n  } catch (e) {\n    console.log(e)\n    return new Response(`Backup failed: ${e.message}`, { status: 500 })\n  }\n})\n\nexport default withBackupEdge","import type { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withBasicAuthEdge(callback: (req: NextRequest, res: NextResponse) => void, options?: { username: string, password: string }): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.get('authorization')\n\n    if (!basicAuth)\n      return new Response('Access denied', { status: 401 })\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return new Response('Access denied. Wrong password or username.', { status: 401 })\n\n    return callback(req, res)\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (!process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `DATOCMS_PREVIEW_SECRET env not set` })\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `Invalid token` })\n\n  if (!req.query.slug)\n    return res.status(500).json({ message: 'Invalid slug' })\n\n  const { slug } = req.query as { slug: string }\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 3 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next/types'\n\nexport default function withVercelCronAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.CRON_SECRET)\n      throw new Error('CRON_SECRET not set in .env')\n\n    if (req.headers?.authorization === `Bearer ${process.env.CRON_SECRET}`)\n      return callback(req, res)\n    else\n      return res.status(401).send('Access denied')\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string | null>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string | null>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","_ref","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","operations","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","then","result","console","log","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","excludeInvalid","headers","Authorization","BatchHttpLink","link","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","GlobalQuery","gql","cors","req","res","options","methods","opts","resolve","originHeadersFromReq","origin","_opts$origin","originHeaders","v","k","append","set","forEach","mergeHeaders","credentials","exposed","exposedHeaders","method","allowed","Headers","get","getAllowedHeaders","allowedHeaders","maxAge","String","preflightContinue","Response","status","optionsSuccessStatus","value","reqOrigin","isOriginAllowed","getOriginHeaders","_temp2","some","o","RegExp","test","pact","state","s","_Pact","_settle","bind","onFulfilled","onRejected","this","callback","_this","withBasicAuth","NODE_ENV","authorization","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","Error","basicAuth","setHeader","send","auth","split","Buffer","from","username","password","pwd","withBackup","DATOCMS_API_TOKEN","_catch","maxBackups","max","parseInt","backupPrefix","buildClient","environment","requestTimeout","environments","list","_client$environments$","_backups$0$id","_backups$","backups","filter","id","startsWith","meta","primary","sort","a","b","replace","name","toISOString","replaceAll","fork","immediate_return","fast","force","i","_for","reverse","slice","length","_temp","destroy","error","message","prototype","withTests","site","find","itemTypes","models","modular_block","all","model","_temp4","testRevalidateEndpoint","_testRevalidateEndpoi","r","revalidate","api_key","_temp5","testWebPreviewsEndpoint","previews","results","testApiEndpoints","_req$query","json","testResultsToString","testResultsToHtml","baseApiUrl","NEXT_PUBLIC_SITE_URL","_r$revalidate","paths","_r$revalidate2","_r$previews","_r$revalidate3","_r$revalidate3$paths","_r$revalidate4","_r$revalidate5","p","label","url","revalidated","itemType","items","type","_client$items$list","item","btoa","stringify","attributes","environmentId","locale","previewLinks","_client$items$list2","entity_type","event_type","entity","relationships","item_type","data","updated_at","published_at","created_at","related_entities","statusText","withVercelCronAuthEdge","CRON_SECRET","withBackupEdge","params","URLSearchParams","nextUrl","searchParams","today","_temp3","_Buffer$from$toString","Accepts","_ref2","favicon","end","props","reader","_fetch","getReader","_interrupt","read","_ref3","done","write","notFound","opt","REVALIDATE_TIME","push","apply","seo","context","apiQuery","variables","_ref2$preview","_ref2$excludeInvalid","setLink","batch","q","idx","vars","errorMessages","errors","_ref4","err","ping","DATOCMS_PREVIEW_SECRET","secret","slug","Location","setPreviewData","writeHead","payload","_entity$relationships","_entity$relationships2","_entity$relationships3","record","delay","now","Math","includes","path","withVercelCronAuth","_req$headers","generatePreviewUrl","SITE_URL","_path","baseUrl","URL","pathname","corsOptions"],"mappings":"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"}
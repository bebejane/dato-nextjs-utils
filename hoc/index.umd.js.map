{"version":3,"file":"index.umd.js","sources":["../src/hoc/withGlobalProps.ts","../src/api/index.ts","../src/hoc/withBasicAuth.ts","../src/hoc/withPreview.ts","../src/hoc/withRevalidate.ts"],"sourcesContent":["import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n    client.headers\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    const basicAuth = req.headers.authorization\n    if (!basicAuth)\n      return res.status(401).send('Access denied')\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const isAuthorized = user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n\n  const { slug } = req.query as { slug: string }\n\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 10 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  const basicAuth = req.headers.authorization\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any): Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId)\n    throw 'Model id not found in payload!'\n\n  const client = buildClient({ apiToken: process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout: 3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n\n  if (!record)\n    throw `No record found with modelId: ${modelId} (${model.api_key})`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n    record._payload = payload\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      } catch (err) {\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n\n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","then","response","getTime","text","Promise","resolve","result","console","log","t","e","reject","batchMax","batchInterval","createLink","preview","apiToken","Authorization","headers","BatchHttpLink","linkConfig","link","previewLink","client","ApolloClient","cache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","GlobalQuery","gql","callback","req","res","authorization","basicAuth","status","send","auth","split","Buffer","from","pwd","BASIC_AUTH_USER","_Buffer$from$toString","BASIC_AUTH_PASSWORD","isAuthorized","opt","id","revalidate","parseInt","REVALIDATE_TIME","push","apply","seo","model","context","apiQuery","options","variables","_ref","_ref$preview","Error","setLink","batch","q","idx","length","vars","all","data","errorMessages","filter","errors","forEach","_ref3","message","_catch","err","props","_extends","withPreview","secret","DATOCMS_PREVIEW_SECRET","slug","json","Location","startsWith","setPreviewData","maxAge","writeHead","end","error","withRevalidate","_req$body","payload","entity","recordFromPayload","modelId","relationships","_payload$relationship2","_payload$relationship","item_type","_payload$relationship3","buildClient","requestTimeout","itemTypes","list","models","find","m","items","type","api_key","fields","eq","records","record","_payload","paths","p","revalidated"],"mappings":"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"}
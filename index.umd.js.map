{"version":3,"file":"index.umd.js","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/components/DatoMarkdown.tsx","src/components/DatoSEO.tsx","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\n\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string = GRAPHQL_API_TOKEN) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true,\n  }\n\n  if (preview)\n    headers['X-Include-Drafts'] = true\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ( filter: { id: { eq: \"${id}\" } }) {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  pathname: string,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  pathname,\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  const props = {\n    canonical: url,\n    openGraph: {\n      url,\n      title,\n      images,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: twitterProps,\n    additionalLinkTags: favicons,\n    noindex: noindex,\n    nofollow: noindex,\n  }\n\n  if (title)\n    props['title'] = title\n  if (description) {\n    props['description'] = description\n    props.openGraph['description'] = description\n  }\n\n  return (\n    <NextSeo {...props} />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  title?: string,\n  siteTitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, siteTitle, title, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  //title = buildTitle(title, globalSeo, subtitle)\n\n  return (\n    <DefaultSeo\n      title={title}\n      titleTemplate={`${siteTitle}${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''} %s`}\n      defaultTitle={siteTitle}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","then","response","getTime","text","result","console","log","t","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","previewLink","client","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","apiQuery","options","variables","_ref$preview","Error","resolve","setLink","q","idx","length","vars","all","batch","data","errorMessages","filter","errors","forEach","message","push","res","_catch","err","model","id","GlobalQuery","gql","children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","slice","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","title","subtitle","description","noindex","_ref$noindex","_ref5","globalSeo","fallbackSeo","metaTags","tags","titleTag","m","tag","_extends","siteName","startsWith","meta","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","favicons","images","generateImages","NEXT_PUBLIC_SITE_URL","titleSuffix","buildTitle","props","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","createElement","NextSeo","_ref3","siteTitle","_ref4","twitterSite","replace","DefaultSeo","titleTemplate","defaultTitle","twitterCard","error","document","_temp","_initialData$paginati","_initialData$paginati2","initialData","pageSize","_useState","useState","setData","_useState2","no","count","size","end","pagination","page","setPage","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","max","scrollHeight","clientHeight","ceil","setTimeout","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","opt","callback","revalidate","parseInt","REVALIDATE_TIME","apply","SEOQuery","context","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","_req$body","basicAuth","authorization","Buffer","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","buildClient","requestTimeout","itemTypes","list","models","items","api_key","fields","eq","records","record","paths","revalidated"],"mappings":"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"}
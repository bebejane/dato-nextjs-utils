{"version":3,"file":"index.umd.js","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/components/DatoMarkdown.tsx","src/components/DatoSEO.tsx","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\n\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string = GRAPHQL_API_TOKEN) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true,\n  }\n\n  if (preview)\n    headers['X-Include-Drafts'] = true\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\ntype DatoSEOProps = {\n  seo?: any,\n  site?: any,\n  title?: string,\n  subtitle?: string,\n  description?: string,\n  noindex?: boolean\n}\n\nconst DatoSEO = ({\n  seo = {},\n  site = {},\n  title,\n  subtitle,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  title = buildTitle(title, globalSeo, subtitle)\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: twitterProps,\n    additionalLinkTags: favicons,\n    noindex: noindex,\n    nofollow: noindex,\n  }\n\n  if (title)\n    props['title'] = title\n  if (description) {\n    props['description'] = description\n    props.openGraph['description'] = description\n  }\n\n  return (\n    <NextSeo {...props} />\n  )\n}\nexport default DatoSEO;\n\ntype DefaultSEOProps = {\n  site: any,\n  path: string,\n  title?: string,\n  siteTitle?: string,\n  description?: any,\n}\n\nexport const DefaultDatoSEO = ({ site, path, siteTitle, title, description }: DefaultSEOProps) => {\n\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  return (\n    <DefaultSeo\n      title={title}\n      titleTemplate={`${siteTitle}${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''} %s`}\n      defaultTitle={siteTitle}\n      description={description}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${path || ''}`}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}\n\nconst buildTitle = (title?: string, globalSeo?: any, subtitle?: string) => {\n\n  if (!title && globalSeo)\n    title = globalSeo.siteName\n\n  if (globalSeo?.titleSuffix || subtitle)\n    title = `${title}${globalSeo?.titleSuffix && subtitle ? ` ${globalSeo?.titleSuffix} ${subtitle}` : ''}`;\n\n  return title;\n}","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","Promise","resolve","response","t","Date","getTime","text","then","result","console","log","e","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","apiQuery","options","variables","_ref","_ref$preview","client","setLink","batch","q","idx","vars","length","all","data","errorMessages","filter","errors","forEach","_ref3","message","push","Error","res","_catch","err","model","id","gql","GlobalQuery","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","split","slice","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","title","subtitle","description","noindex","_ref$noindex","meta","_ref5","globalSeo","fallbackSeo","metaTags","tags","titleTag","m","tag","startsWith","siteName","_extends","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","favicons","generateImages","titleSuffix","buildTitle","props","openGraph","images","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","createElement","NextSeo","path","siteTitle","twitterSite","replace","NEXT_PUBLIC_SITE_URL","DefaultSeo","titleTemplate","defaultTitle","canonical","twitterCard","error","document","_temp","_initialData$paginati","_initialData$paginati2","initialData","pageSize","_useState","useState","setData","_useState2","no","count","size","end","pagination","page","setPage","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","max","scrollHeight","clientHeight","ceil","setTimeout","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","opt","callback","revalidate","parseInt","REVALIDATE_TIME","apply","SEOQuery","context","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","_req$body","basicAuth","authorization","Buffer","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","buildClient","requestTimeout","itemTypes","list","models","items","api_key","fields","eq","records","record","paths","revalidated"],"mappings":"q0CAOA,ICPAA,MDOMC,EAA6B,oBAAXC,OACEC,EAAGC,QAAQC,IAAIF,sBAAwBC,QAAQC,IAAIC,kCAAiE,8BACvHC,EAAGH,QAAQC,IAAIG,8BAoBtBC,EAAG,CACjBC,IAAKP,EACLQ,MAAmC,SAA5BP,QAAQC,IAAIO,qBApBOC,EAAoBC,OAE9C,IAAaC,EAAGD,EAAOE,KAAKC,MAAMH,EAAKI,KAAKC,iBAAcC,EAEpDC,MADaN,EAAUO,MAAMC,QAAQR,GAAWA,EAAQS,IAAI,SAACC,GAAkCA,OAAAA,EAAGC,aAAa,GAAI,CAACX,EAAQW,eAAiB,IACjHC,KAAK,MAAO,OAAAC,QAAAC,QACvBlB,MAAME,EAAOC,IAA9BgB,KAAAA,SAAAA,GACN,IAAMC,GAAI,IAAIC,MAAOC,UAErB,YACKH,EAAQ,CACLI,KAAI,WAAA,IAAA,OAAAN,QAAAC,QACaC,EAASI,QAAMC,KAAA,SAA9BC,GAEN,OADAC,QAAQC,IAAI,cAAqB,QAAcjB,KAAAA,SAAoB,IAAIW,MAAOC,UAAYF,GAAM,MACnFK,CAAA,EAEhB,CADE,MACFG,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,GAAA,EAGH,CAFC,MAEDA,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,OAE6DnB,EAC3DqB,SAAU,GACVC,cAAe,IAGDC,EAAG,SAACC,EAA0BC,QAA1BD,IAAAA,IAAAA,GAAmB,QAAO,IAAAC,IAAAA,EAAmBtC,GAC/D,IAAMuC,EAAU,CACdC,cAA2BF,UAAAA,EAC3B,qBAAqB,GAMvB,OAHID,IACFE,EAAQ,qBAAsB,GAErBE,IAAAA,EAAaA,mBACnBvC,EAAU,CACbqC,QAAAA,IAEJ,EAEMG,EAAON,GAAW,EAAOpC,GACd2C,EAAGP,GAAW,EAAMpC,KAEf,MAAgB4C,aAAC,CACrCF,KAAAA,EACAG,MAAO,IAAIC,EAAAA,cACXC,QAASrD,EACTsD,eAAgB,CACdC,MAAO,CACLC,YAAarD,QAAQC,IAAIqD,UAAY,cAAgB,WACrDC,YAAa,YAWNC,SAAkBJ,EAAgDK,GAA2C,IAExH,IAAiDA,EAAAA,GAAW,CAAA,EAApDC,EAASC,EAATD,UAAWlB,EAAAA,EAAAA,QAAAA,cAAeoB,EAAEnB,EAAAA,EAAAA,SAEpC,GAAc,OAAVW,EACF,MAAM,UAAU,iCAElB,IAAKjD,EACH,MAAM,UAAU,uCAAsC,OAAAqB,QAAAC,gCAAA,WAItDoC,EAAOC,QAAQrB,EAAWF,EAAWC,EAASC,GAAYD,EAAUM,EAAcD,GAElF,IAAWkB,GAAI7C,MAAMC,QAAQiC,GAASA,EAAQ,CAACA,IAAQhC,IAAI,SAAC4C,EAAGC,GAC7D,IAAUC,EAAGhD,MAAMC,QAAQuC,IAAcA,EAAUS,OAASF,EAAM,EAAIP,EAAUO,GAAOP,GAAa,CAAA,EACpG,OAAaG,EAACT,MAAM,CAAEA,MAAOY,EAAGN,UAAWQ,GAC7C,GAAE,OAEiB1C,QAAAA,QAAAA,QAAQ4C,IAAIL,IAAMhC,KAAA,SAA/BsC,GAEN,IAAmBC,EAAa,GAKhC,GAJAD,EAAKE,OAAO,SAAGC,GAAM,SAANA,MAAmB,GAAEC,QAAQ,SAAAC,KAAGF,OACtCpD,IAAI,SAAAe,GAAKA,OAAAA,EAAEwC,OAAO,GAAEF,QAAQ,SAACE,GAAO,OAAkBL,EAACM,KAAKD,EAAQ,EAC7E,GAEIL,EAAcH,OAChB,UAAeU,MAACP,EAAc/C,KAAK,OAErC,IAAUS,EAAG,CAAA,EAEb,OADAqC,EAAKI,QAAQ,SAACK,GAAQ9C,OAAAA,OAAcA,EAAc,MAAH8C,OAAG,EAAHA,EAAKT,KAAM,GAC7CrC,CAAA,EAEd,6DAzBuD+C,CAAA,EAyBvD,SAAQC,GACP,MACDA,CAAA,GACF,CAAA,MAAA7C,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,IAEuB,SAAC8C,EAAeC,GAWtC,OAAUC,MATDF,2BAAAA,OAASC,EAAE,0BAA6BA,EAAa,SAAA,IAQ5D,qHAEJ,EC/FiBE,EAAGD,EAAGA,IAuCtBvF,MAAA,CAAA,orBAAAA,qBCxCoB,YAAGyF,IAAAA,IAAAA,SAAWC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAAWC,EAAS7B,EAAT6B,UACtD,IAAIH,EACF,OAAO,KAET,MAAyBC,EAAsFG,EAAgB,QAACJ,EAAU,CAACK,MAAMJ,EAAUK,UAAS,IAAhIH,EAVZ,SAACI,EAAmBF,GAC5C,IAAIE,EAAU,OAAeA,EAC7B,IAAMJ,EAAYI,EAASC,MAAM,KACjC,OAAgBL,EAACrB,QAAUuB,EAASF,EAAUM,MAAM,EAAEJ,GAAOnE,KAAK,KAAQ,MAAQqE,CACpF,CAMkDG,CAAkBV,EAAoBG,GAAcH,eAEpG,OACEW,EAAAA,sBAACC,EAAa,QAAA,CACZC,cAAe,CAACC,EAAG,QAACC,EAAY,SAChCb,UAAWA,EACXF,SAAUgB,EAEVC,WAAY,CAEVC,EAAG,SAAGlB,gBAAc,OAAoBW,EAAAA,sBAACQ,EAAI,QAAA,CAACC,QAAQ,EAAOC,KAAzCC,EAAJD,mBAAyDV,EAAAA,QAAIX,cAAAA,IAAAA,OAAvEA,SAAgF,IAAc,IAK5G,YCjCgB,SAAH1B,GACXiD,IAAAA,EAAAA,EAAAA,IACAC,EAAAA,EAAAA,KAAAA,OAAI,IAAAC,EAAG,CAAA,EACPC,EAAAA,IAAAA,MACAC,EAAQrD,EAARqD,SACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,QAAAA,cAAeC,EAGTC,EA+FkB,SAA4BC,GAAA,IAAtBT,EAAAS,EAAHT,IAAKC,EAAAA,EAAAA,KAEhC,IAAKD,IAAQC,EAAM,MAAO,GAE1B,IAAQS,GAAcT,GAAQ,CAAE,GAAxBS,UACAC,GAAgBD,GAAa,CAAA,GAA7BC,YAGJC,GAFStG,MAAMC,QAAQyF,GAAOA,EAAMA,EAAIa,OAErB,GACnBC,EAAWF,EAASjD,OAAO,SAAAoD,GAAKA,MAAU,UAAVA,EAAEC,GAAe,GAAE,GAEnDF,GAAYJ,GACVA,GAAaI,EAASrB,QAAQwB,WAAWP,EAAUQ,YACrDJ,EAAQK,EAAA,CAAA,EAAQL,EAAQ,CAAErB,QAAYiB,EAAUQ,SAAcJ,MAAAA,EAASrB,WAG3EmB,EAAWA,EAASpG,IAAI,SAAAO,GAAO,MAAiB,UAATA,EAACiG,IAAkBjG,EAAI+F,CAAS,GAEvE,IAAMN,EAAO,CAAA,EAQb,GANAI,EAAS/C,QAAQ,SAAA9C,GAGfyF,EAFazF,EAAEqG,WAAarG,EAAEqG,WAAWC,UAAYtG,EAAEqG,WAAWE,KAAOvG,EAAEiG,KAC7DjG,EAAEqG,WAAarG,EAAEqG,WAAW3B,SAAW1E,EAAEqG,WAAarG,EAAE0E,OAExE,IAEKe,EAAK,aAAeG,MAAAA,GAAAA,EAAaY,MAAO,CAC3C,IACMC,EAAa,GAAQb,EAAYY,MAAME,MAD/B,KACgDd,EAAYY,MAAME,MAChFjB,EAAK,YAAiBG,EAAYY,MAAMG,cACxClB,EAAK,kBAHS,IAIdA,EAAK,mBAAqBmB,KAAKC,MAAMjB,EAAYY,MAAMM,OAASL,EACjE,CACD,QACF,CAjIeM,CAAkB,CAAE9B,SAR9B,IAAA+B,EAAG,CAAE,EACR9B,EAOsCA,KAAAA,IAC9BS,EAAuBT,EAAvBS,UAAWsB,EAAY/B,EAAZ+B,QACLC,EAAGD,EAAUA,EAAQxH,IAAI,SAAAuF,GAAsB,OAAYqB,EAAAA,CAAAA,EAArBrB,EAAVqB,WAA4C,GAAK,KAkFtE,SAACM,EAAKD,EAAOI,GAClC,GAAKH,EAOL,OANgBA,EAAIzC,MAAM,KACX,CAAC,CACdyC,IAAAA,EACAD,MAAAA,EACAI,OAAAA,GAGJ,CA1FiBK,CAAe1B,EAAK,YAAaA,EAAK,kBAAmBA,EAAK,oBAE7EL,EA8HiB,SAACA,EAAgBO,EAAiBN,GAQnD,OANKD,GAASO,IACZP,EAAQO,EAAUQ,WAEP,MAATR,GAAAA,EAAWyB,aAAe/B,KAC5BD,SAAmBO,GAAAA,EAAWyB,aAAe/B,EAAQ,KAAOM,MAAAA,OAAAA,EAAAA,EAAWyB,aAAe/B,IAAAA,EAAa,IAE9FD,CACT,CAvIUiC,CAAWjC,EAAOO,EAAWN,GAEhCC,IACHA,EAAcG,EAAKH,YAAcG,EAAKH,YAAcK,EAAqB,MAATA,OAAS,EAATA,EAAWC,YAAYN,iBAAcjG,GAEvG,IAQWiI,EAAG,CACZC,UAAW,CACTnC,MAAAA,EACAoC,OAAAA,EACAC,OAAQhC,EAAK,aACbiC,KAAMjC,EAAK,WACXkC,UAAWlC,EAAK,iBAElBmC,QAhBwB,CACxBxC,MAAAA,EACAoB,MAAOf,EAAK,YACZoC,OAAQlC,MAAAA,OAAAA,EAAAA,EAAWmC,eACnB5C,KAAe,MAATS,OAAS,EAATA,EAAWmC,eACjBC,SAAU,uBAYVC,mBAAoBd,EACpB3B,QAASA,EACT0C,SAAU1C,GAUZ,OAPIH,IACFkC,EAAa,MAAIlC,GACfE,IACFgC,EAAmB,YAAIhC,EACvBgC,EAAMC,UAAuB,YAAIjC,gBAIjCjB,EAAAA,QAAA6D,cAACC,EAAAA,QAAYb,EAEjB,mBAW8B,SAAHvE,GAAMmC,IAAAA,IAAAA,KAAMkD,EAAIrF,EAAJqF,KAAMC,EAAAA,EAAAA,UAAWjD,EAAAA,EAAAA,MAAOE,EAAWvC,EAAXuC,YAErDK,EAAmDT,EAAnDS,UAAWsB,EAAwC/B,EAAxC+B,QAAsBrB,EAAkBV,EAA/BS,UAAaC,YACnCsB,EAAWD,EAAUA,EAAQxH,IAAI,YAAsB,OAAA2G,EAAA,CAAA,EAAnBC,EAAAA,WAA4C,GAAK,GAC1EiC,EAAG3C,EAAUmC,eAAc,uBAA0BnC,EAAUmC,eAAeS,QAAQ,IAAK,SAAQlJ,EAEpH,IAAKhB,QAAQC,IAAIkK,qBACf,KAAM,qDAER,OACEnE,EAAA,QAAA6D,cAACO,EAAUA,WAAA,CACTrD,MAAOA,EACPsD,cAAkBL,GAAqB,MAAT1C,GAAAA,EAAWyB,YAAW,KAAOzB,MAAAA,OAAAA,EAAAA,EAAWyB,aAAgB,UACtFuB,aAAcN,EACd/C,YAAaA,EACbsD,UAAS,GAAKvK,QAAQC,IAAIkK,sBAAuBJ,GAAQ,IACzDJ,mBAAoBd,EACpBK,UAAW,CACTG,KAAM,UACND,OAAQ9B,EAAU8B,OAClBE,UAAWhC,EAAUQ,UAEvByB,QAAS,CACPC,OAAQlC,EAAUmC,eAClB5C,KAAMoD,EACNP,SAAUnC,EAAYiD,cAI9B,mDHqByB,SAACxF,GAExB,OADA/C,QAAQwI,MAAMzF,GACPA,EAAIL,SAAWK,CACxB,gBI9GoB,SAAI0F,EAA4BC,GAA0D,IAAAC,EAAAC,EAAAlH,OAAA,IAAAgH,EAAA,GAAEA,EAAzDjH,EAASC,EAATD,UAAWoH,EAAAA,EAAAA,YAAaC,EAAAA,EAAAA,SAC7E9I,QAAQC,IAAI,eAEZ,IAAA8I,EAAwBC,EAAQA,SAAIH,GAA7BzG,EAAM6G,EAAAA,GAAAA,EACbF,EAAA,GAAAG,EAAwBF,EAAQA,SAAyBF,EAAW,CAClEK,GAAG,EACHC,MAAM,EACNC,KAAMP,EACNQ,KAAK,OAAAT,EAAAA,EAAYU,iBAAZ,EAAAZ,EAAwBS,OAAQ,IAA0B,OAAtBP,EAAAA,EAAYU,iBAAU,EAAtBX,EAAwBQ,QAASN,QACxE/J,GALGyK,OAAMC,EAAOP,EAAA,GAMMF,EAAAA,EAAAA,WAAnBR,EAAKkB,EAAA,GAAEC,EAAQD,EAAA,GACQV,EAAAA,YAAS,GAAhCY,EAASC,EAAAA,GAAAA,EAEhBC,EAAA,GA+BMC,EAAOC,EAAWA,YAAC,SAAC/H,GAGxB,OADA4H,GAAW,GACItI,EAACkH,EAAU,CAAChH,UAAYQ,GAAQR,IAC5C3B,KAAK,SAAA+C,GACJ,IAjBaoH,EAASC,EAiBfC,GAjBMF,EAiBOpH,GAjBEqH,EAiBG9H,IAb7BgI,OAAOC,KAAKJ,GAASzH,QAAQ,SAAA8H,GACxBJ,EAAQI,IAAMrL,MAAMC,QAAQgL,EAAQI,MACrCL,EAAQK,GAAKJ,EAAQI,GAAGC,OAAON,EAAQK,IAC3C,MALoBL,GAiBhB,OADAhB,EAAQkB,GAEVA,CAAA,GAAE,MACK,SAAApH,GAAO4G,OAAAA,EAAS5G,EAAI,GACnB,QAAC,WAAK8G,OAAAA,GAAW,EAAM,EAEnC,EAAG,CAACpB,EAAUhH,EAAWW,IAIzB,OAFDoI,EAAAA,UAAU,YAAO3B,GAAekB,GAAO,EAAG,CAAClB,EAAakB,IAEhD,CAAC3H,KAAAA,EAAMoG,MAAAA,EAAOoB,QAAAA,EAASa,SA/Cb,SAACxI,GAAS,SAAUA,EAAK,EA+CFyI,SA7ClCA,WAAsB,IAC1B,OAAIlB,EAKYO,QAAAA,QAAAA,OAAStI,EAAS,CAAEkJ,MAFtBnB,EAAKH,KAEwBuB,KAD7BpB,EAAKL,GAAGK,EAAKH,SACrBc,KAAAA,SAAAA,GAEN,IAAAU,KAA6D,OAA/CA,EAAAV,EAAEC,OAAOC,KAAKF,GAAGW,KAAK,SAAAR,GAAK,OAACS,MAAMZ,EAAEG,GAAGlB,MAAM,UAAE,EAA/CyB,EAAiDzB,QAAS,EAClED,EAAKK,EAAKL,GAAG,EAEb6B,EAASxB,EAAAA,CAAAA,EAAAA,EAAML,CAAAA,GAAAA,EAAIC,MAAAA,EAAOE,IADpBH,EAAGL,GAAYM,IAI3B,OADAK,EAAQuB,GACCA,CAAA,mBAZArB,EAAS,IAAI/G,MAAM,sBAa7B,CAAA,MAAA1C,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,EA8BkDsJ,KAAAA,EACrD,qBC3EyB,WAEvB,IAAayB,EAAGC,WAAWC,iBACZC,gBACmBpC,EAAQA,cAAoB,IAALiC,EAAmBA,EAAQI,QAAQ,iBAAmB,MAAxGC,EAAWC,EAAAA,GAAAA,OAoBlB,OAlBDf,EAASA,UAAC,WACP,MAAkBS,EAAQI,QAAQ,gBAC9BC,IAAcE,EAAOC,SACzBR,EAAQS,QAAQ,gBAAiBJ,GACjCL,EAAQS,QAAQ,eAAgBF,EAAOC,QACvCF,EAAaD,GAChB,EAAG,CAACE,EAAOC,OAAQR,IAElBT,YAAU,WACR,IAAMmB,EAAqB,SAACzL,GAC1B+K,EAAQW,WAAW,iBACnBX,EAAQW,WAAW,eACrB,EAEA,OADA/N,OAAOgO,iBAAiB,eAAgBF,qBACrB9N,OAACiO,oBAAoB,eAAgBH,EAAmB,CAC7E,IAIF,kBCbc,SAAwBI,YAAAA,IAAAA,EAAkB,GAEtD,IAAcnO,EAAqB,oBAALC,OAC9BkL,EAAoCC,EAAAA,SAAqB,CACvDgD,aAAY,EACZC,WAAW,EACXC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,iBAAkBzO,EAAW,EAAIC,OAAOyO,YACxCC,eAAgB3O,EAAW,EAAI6K,SAAS+D,gBAAgBC,aACxDC,eAAgB9O,EAAW,EAAIC,OAAO8O,YACtCC,MAAM,OATDC,EAAYC,EAAAA,GAAAA,OAYbC,EAAiBC,SAAOH,GAEZI,EAAGjD,EAAAA,YAAY,WAE/BkD,aAAaH,EAAeI,QAAQP,OAEpC,IAAML,EAAiBjG,KAAK8G,IAC1B3E,SAAS5J,KAAKwO,aACd5E,SAAS5J,KAAK4N,aACdhE,SAAS+D,gBAAgBc,aACzB7E,SAAS+D,gBAAgBa,aACzB5E,SAAS+D,gBAAgBC,cAErBC,EAAiB9O,EAAW,EAAIC,OAAO8O,YACvBN,EAAGzO,EAAW,EAAI0I,KAAK8G,IAAI,EAAG9G,KAAKiH,KAAK1P,OAAOyO,cACnDJ,GAAGtO,GAAoBC,OAAO8O,YAAcN,GAAqBE,EAAiBR,IAMjF,CACjBC,aAHkB,EAIlBC,YAPgBrO,GAAkBC,OAAOyO,aAAe,EAQxDJ,aAAAA,EACAC,aARmBE,EAAmBU,EAAeI,QAAQd,iBAS7DD,eARqBC,EAAmBU,EAAeI,QAAQd,iBAS/DA,iBAAAA,EACAE,eAAAA,EACAG,eAAAA,EACAE,MAVYG,EAAeI,QAAQP,OAYrCE,EAAcD,GACdE,EAAeI,QACVN,EAAAA,CAAAA,EAAAA,GACHD,MAAOY,WAAW,WAAA,SAAwBX,EAAAA,CAAAA,EAAAA,GAAYb,aAAY,IAAO,EAAE,MAG/E,EAAG,CAACpO,EAAUmO,IASd,OAPAvB,YAAU,WAER,OADA3M,OAAOgO,iBAAiB,SAAUoB,cAEhCpP,OAAOiO,oBAAoB,SAAUmB,EACvC,CACF,EAAG,CAACA,IAGNJ,CAAA,qBC5EyB,WAAH,OAAkBrC,EAAAA,UAAC,WACxCvL,MAAMwO,KACJhF,SAASiF,iBAAiB,4CAC1BlL,QAAQ,SAAAmL,GACRA,EAAKC,gBAAgB,WACvB,GACA,IASMC,EAAW,IAAoBC,iBATb,SAAAC,GACtBA,EAAUvL,QAAQ,SAAAd,OAASsM,EAAAtM,EAANsM,OACK,UAApBA,EAAOC,UAC4B,MAAjCD,EAAOE,aAAa,UACtBF,EAAOJ,gBAAgB,QAG7B,EACF,GAMA,OAJAC,EAASM,QAAQ1F,SAAS2F,KAAM,CAC9BC,SAAS,EACTC,gBAAiB,CAAC,WAEb,WACLT,EAASU,YACX,CACD,EAAG,GAAG,oBNpBQ,SAA0BC,EAAUC,GAEhD,IAAgBC,EAAWC,SAAS5Q,QAAQC,IAAI4Q,iBACnClQ,EAAwB,CAACyE,GAStC,OAPIqL,EAAIrN,OACNzC,EAAQiE,KAAK6L,EAAIrN,OACfqN,EAAI9P,SACNA,EAAQiE,KAAKkM,MAAMnQ,EAAS8P,EAAI9P,SAC9B8P,EAAI7J,KACNjG,EAAQiE,KAAKmM,EAASN,EAAI7J,IAAI3B,MAAOwL,EAAI7J,IAAI1B,cAEjC8L,GAAO,IACCxN,OAAAA,QAAAA,QAAAA,EAAS7C,EAAS,CAAE6B,QAASwO,EAAQxO,WAAnDyG,KAAAA,SAAAA,GAEN,OAAIyH,kBACWA,EAAS,CAAEM,QAAAA,EAAS/H,MAAKlB,EAAA,CAAA,EAAOkB,GAAS0H,WAAAA,KAE/C,CAAE1H,MAAKlB,EAAA,CAAA,EAAOkB,GAAS+H,QAAAA,EAASL,WAAAA,EAAa,EAE1D,CADG,MACHxO,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,CAAA,gBOvByC,SAAC8O,EAAsBnM,GAAqB,IAEnF,GAAKmM,EAAI7N,MAAM8N,SAAWlR,QAAQC,IAAIkR,yBAA2BF,EAAI7N,MAAMgO,KACzE,OAAA5P,QAAAC,QAAOqD,EAAIuM,OAAO,KAAKC,KAAK,CAAE3M,QAAS,mBAEzC,IAAQyM,EAASH,EAAI7N,MAAbgO,KAER,IACEtM,EAAIyM,eAAe,CAAA,EAAI,CAACC,OAAQ,KAChC1M,EAAI2M,UAAU,IAAK,CAAEC,SAAUN,GAAW,MAC1CtM,EAAIyG,KAIL,CAHA,MAAMvG,GAEL,OADA/C,QAAQwI,MAAMzF,GACdxD,QAAAC,QAAOqD,EAAIuM,OAAO,KAAKC,KAAK,CAAE3M,QAAS,2BACxC,CAAA,OAAAnD,QAAAC,SACF,CAAA,MAAAU,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,mBCmBuB,SAAeuO,GAErC,OAAcO,SAAAA,EAAqBnM,GAAwB,IAAA,IAAA6M,EAEzD,IArCqB,SAACV,GAExB,IAAeW,EAAGX,EAAIvO,QAAQmP,cAC9B,IAAKD,EACH,OAAO,EAET,MAAaA,EAAU/L,MAAM,KAAK,GACdiM,EAAAA,OAAOpC,KAAKqC,EAAM,UAAUhR,WAAW8E,MAAM,KACjE,OADWmM,EAAA,KACKhS,QAAQC,IAAIgS,iBADZD,EAAA,KACuChS,QAAQC,IAAIiS,mBACrE,CA4BSN,CAAUX,GACb,uBAAOnM,EAAIuM,OAAO,KAAKc,KAAK,kBAE9B,MAAgB,OAAAlB,EAAAA,EAAInQ,WAAJ,EAAA6Q,EAAUS,OAE1B,IAAKC,EACH,KAAM,mBAAkB,OAELC,QAAAA,QAlCF,SAAUD,GAA+B,IAAA,IAAAE,EAAAC,EAAAC,EAExDC,QAAUL,GAAsB,SAAtBA,EAASM,uBAAaH,EAAtBD,EAAwBK,YAAxB,SAAAJ,EAAmCnO,aAAnCoO,EAAyCvN,GAEzD,IAAKwN,EACH,KAAM,iCAERzQ,QAAQC,IAAI,kBAAmBwQ,GAC/B,IAAY7O,EAAGgP,EAAWA,YAAC,CAAEpQ,SAAUzC,QAAQC,IAAIG,8BAA+B0S,eAAe,MAAO,OACnFjP,QAAAA,QAAAA,EAAOkP,UAAUC,QAAhCC,KAAAA,SAAAA,GACN,IAAWhO,EAAGgO,EAAOlG,KAAK,SAAApF,GAAC,SAAMzC,KAAOwN,CAAO,GAAC,OAC1B7O,QAAAA,QAAAA,EAAOqP,MAAMF,KAAK,CAAEzO,OAAQ,CAAE8E,KAAMpE,EAAMkO,QAASC,OAAQ,CAAElO,GAAI,CAAEmO,GAAIhB,EAAQnN,SAAWnD,KAAA,SAA1GuR,GACN,IAAYC,EAAGD,EAAQ,GAEvB,IAAKC,EACH,KAAuCb,iCAAAA,EAGzC,OADAzQ,QAAQC,IAAI,aAAc+C,EAAMkO,SACpBI,EAAAA,CAAAA,EAAAA,GAAQtO,MAAAA,GAAO,EAE7B,GAAC,mCAcwBqN,CAAkBD,IAAQtQ,KAAA,SAAzCwR,GAEN7C,EAAS6C,EAAeC,SAAAA,OACnB,OAAAhS,QAAAC,gCAAA,WACD,IAAK+R,EAAMrP,OACT,KAAM,wBAEgC,OAAxClC,QAAQC,IAAI,qBAAsBsR,mBAC5BhS,QAAQ4C,IAAIoP,EAAMpS,IAAI,SAAA6L,GAAC,OAAOnI,EAAC6L,WAAW1D,EAAE,KAClDhL,KAAAA,WACA,OADAA,QAAQC,IAAI,wBACDoP,KAAK,CAAEmC,aAAa,EAAMD,MAAAA,GAAQ,EAC9C,6DAREzO,CAAA,EAQF,SAAMC,GAEL,OADA/C,QAAQwI,MAAMzF,KACHsM,KAAK,CAAEmC,aAAa,EAAOzO,IAAAA,GACvC,GAEF,CAAA,MAAA7C,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,EAAC,EAEN,CADG,MACHA,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,CAAA"}
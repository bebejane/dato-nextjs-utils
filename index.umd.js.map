{"version":3,"file":"index.umd.js","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/components/DatoMarkdown.tsx","src/components/DatoSEO.tsx","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: string, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {no:1, count:0, size:pageSize, end:false} : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n    .then(res => {\n      const d = mergeData(res, data)\n      setData(d)\n      return d\n    })\n    .catch(err => setError(err))\n    .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{\n    if(!initialData)\n      load()\n    else if(initialData.pagination?.count <= pageSize)\n      setPage((page)=>({...page, end:true}))\n\n  }, [initialData, load, setPage, pageSize])\n\n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","operations","Array","isArray","map","op","operationName","join","Promise","resolve","response","Date","getTime","_extends","text","result","console","log","requestName","t","e","reject","batchMax","batchInterval","headers","Authorization","BatchHttpLink","client","ApolloClient","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","schema","gql","apiQuery","options","variables","preview","_ref$preview","Error","setLink","previewLink","batch","q","idx","vars","length","all","data","errorMessages","filter","_ref2","errors","forEach","_ref3","message","push","res","_catch","err","GlobalQuery","_ref","children","truncate","className","sentances","content","truncateMarkdown","limit","ellipsis","markdown","split","slice","truncateSentances","h","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href","_ref$seo","seo","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","_ref4","globalSeo","fallbackSeo","metaTags","tags","m","tag","titleTag","siteName","startsWith","meta","attributes","property","name","image","width","url","Math","round","height","scaleRatio","parseDatoMetaTags","favicon","favicons","generateImages","NEXT_PUBLIC_SITE_URL","titleSuffix","NextSeo","canonical","openGraph","images","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","nofollow","document","_temp","initialData","pageSize","_useState","useState","setData","no","count","size","end","page","_useState2","setPage","error","_useState3","setError","loading","setLoading","_useState4","load","useCallback","then","newData","oldData","d","Object","keys","k","concat","useEffect","_initialData$paginati","pagination","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","max","scrollHeight","clientHeight","ceil","setTimeout","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","apply","SEOQuery","context","props","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","_req$body","basicAuth","authorization","Buffer","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","apiToken","requestTimeout","itemTypes","list","models","model","items","api_key","fields","eq","records","record","paths","revalidated"],"mappings":"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"}
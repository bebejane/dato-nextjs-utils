{"version":3,"file":"index.umd.js","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/components/DatoMarkdown.tsx","src/components/DatoSEO.tsx","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`,\n    'X-Exclude-Invalid': true,\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts' : true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} â€“ ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n"],"names":["_templateObject","isServer","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","Promise","resolve","then","response","t","Date","getTime","_extends","text","result","console","log","e","reject","batchMax","batchInterval","headers","Authorization","link","BatchHttpLink","linkConfig","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","SEOQuery","schema","gql","apiQuery","options","variables","preview","_ref$preview","Error","setLink","batch","q","idx","vars","length","all","data","filter","errors","forEach","_ref3","message","errorMessages","push","res","_catch","err","GlobalQuery","children","truncate","className","sentances","_ref","truncateMarkdown","limit","ellipsis","markdown","split","slice","truncateSentances","React","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","content","components","a","Link","scroll","href","_ref2","seo","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","meta","globalSeo","fallbackSeo","metaTags","tags","titleTag","m","tag","siteName","startsWith","attributes","property","name","image","scaleRatio","width","url","Math","round","height","parseDatoMetaTags","_ref$seo","favicon","images","generateImages","NEXT_PUBLIC_SITE_URL","createElement","NextSeo","titleSuffix","canonical","openGraph","locale","type","site_name","twitter","handle","twitterAccount","cardType","additionalLinkTags","favicons","nofollow","document","_temp","_initialData$paginati","_initialData$paginati2","initialData","pageSize","_useState","useState","setData","_useState2","no","count","size","end","pagination","page","setPage","error","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","find","isNaN","p","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","window","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","max","scrollHeight","clientHeight","ceil","setTimeout","from","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","apply","context","props","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","_req$body","basicAuth","authorization","Buffer","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","apiToken","requestTimeout","itemTypes","list","models","model","items","api_key","fields","eq","records","record","paths","revalidated"],"mappings":"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"}
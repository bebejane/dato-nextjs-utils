{"version":3,"file":"index.modern.mjs","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/components/DatoSEO.tsx","src/components/DatoMarkdown.tsx"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\n\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken:string = GRAPHQL_API_TOKEN) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true,\n  }\n  \n  if(preview)\n    headers['X-Include-Drafts'] = true\n\n  return new BatchHttpLink({\n    ...linkConfig, \n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = { \n  variables?: any | any[], \n  preview?: boolean, \n  apiToken?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false, apiToken} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) =>{\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({ seo = {}, site = {}, pathname, title, subtitle, description, noindex = false }: any) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale: meta[\"og:locale\"],\n        type: meta[\"og:type\"],\n        site_name: meta[\"og:site_name\"],\n      }}\n      twitter={twitterProps}\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\nexport default DatoSEO;\n\nexport const DefaultDatoSEO = ({ site, title, description }: { site: any, title?: string, description?: any }) => {\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["_templateObject","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","uri","fetch","LOG_GRAPHQL","loggingFetch","input","init","queries","JSON","parse","body","toString","undefined","operations","Array","isArray","map","op","operationName","join","response","t","Date","getTime","_extends","text","result","console","log","requestName","e","Promise","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","linkConfig","link","cache","InMemoryCache","ssrMode","isServer","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","apiQuery","options","variables","_ref","_ref$preview","client","setLink","previewLink","batch","q","idx","vars","length","resolve","all","data","errorMessages","filter","_ref2","errors","forEach","_ref3","message","push","Error","res","err","SEOQuery","schema","datoError","error","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","context","props","gql","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","withRevalidate","_req$body","basicAuth","authorization","split","Buffer","from","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","requestTimeout","itemTypes","list","models","model","find","m","items","type","api_key","fields","eq","then","records","record","paths","p","revalidated","_catch","useApiQuery","document","_temp","_initialData$paginati","_initialData$paginati2","initialData","pageSize","_useState","useState","setData","_useState2","no","count","size","pagination","page","setPage","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","loadMore","nextPage","first","skip","_d$Object$keys$find","isNaN","usePreviousRoute","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","window","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","DatoSEO","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","meta","parseDatoMetaTags","_ref$seo","globalSeo","favicon","favicons","attributes","images","generateImages","NEXT_PUBLIC_SITE_URL","React","createElement","NextSeo","siteName","titleSuffix","fallbackSeo","canonical","url","openGraph","locale","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","DefaultDatoSEO","_ref4","replace","DefaultSeo","twitterSite","twitterCard","width","height","metaTags","tags","titleTag","tag","content","startsWith","property","name","round","scaleRatio","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","slice","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href"],"mappings":"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"}
{"version":3,"file":"index.modern.mjs","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/hoc/withPreview.ts","src/hoc/withWebPreviews.ts","src/utils/cors.ts","src/hoc/withWebPreviewsEdge.ts","src/hoc/withRevalidate.ts","src/hoc/withBasicAuth.ts","src/hoc/withBackup.ts","src/hoc/withBasicAuthEdge.ts","src/hoc/withFavicon.ts","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/hooks/useLivePreview.ts","src/components/DatoSEO.tsx","src/components/DatoMarkdown.tsx","src/utils/tests.ts","src/utils/index.ts"],"sourcesContent":["\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN || process.env.GRAPHQL_API_TOKEN\nconst GRAPHQL_ENVIRONMENT = process.env.DATOCMS_ENVIRONMENT ?? process.env.NEXT_PUBLIC_DATOCMS_ENVIRONMENT ?? 'main'\nconst GRAPHQL_INCLUDE_DRAFTS = process.env.DATOCMS_INCLUDE_DRAFTS ? process.env.DATOCMS_INCLUDE_DRAFTS === 'true' ? true : false : false\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': 'true'\n  }\n\n  const includeDrafts = preview || GRAPHQL_INCLUDE_DRAFTS\n  if (includeDrafts)\n    headers['X-Include-Drafts'] = true\n\n  if (GRAPHQL_ENVIRONMENT)\n    headers['X-Environment'] = GRAPHQL_ENVIRONMENT\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string,\n  environment?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN && !apiToken)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const checkIsPaganationQuery = (doc: TypedDocumentNode): boolean => {\n  const operation = doc.definitions.find((d) => d.kind === 'OperationDefinition')\n\n  if (!operation)\n    throw new Error('Not a pagable query. Missing operation definition')\n\n  const { selectionSet, variableDefinitions } = operation as any\n\n  if (!selectionSet.selections.find((s) => s.alias?.value === 'pagination'))\n    throw new Error('Not a pagable query. Missing pagination field')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'first'))\n    throw new Error('Not a pagable query. Missing $first variable')\n  if (!variableDefinitions.find((v) => v.variable.name.value === 'skip'))\n    throw new Error('Not a pagable query. Missing $skip variable')\n\n  return true\n}\n\nexport const apiQueryAll = async (doc: TypedDocumentNode, opt: ApiQueryOptions = {}, options = { batchSize: 50, delay: 100 }): Promise<any> => {\n\n  checkIsPaganationQuery(doc)\n\n  const results = {}\n  let size = 100;\n  let skip = 0;\n\n  const res = await apiQuery(doc, { variables: { ...opt.variables, first: size, skip } });\n\n  if (res.pagination?.count === undefined)\n    throw new Error('Not a pagable query')\n\n  const { count } = res.pagination\n\n  const mergeProps = (res) => {\n    const props = Object.keys(res);\n\n    for (let i = 0; i < props.length; i++) {\n      const k = props[i]\n      const el = res[props[i]];\n      if (Array.isArray(el)) {\n        results[k] = !results[k] ? el : results[k].concat(el)\n      } else\n        results[k] = el;\n    }\n  }\n\n  const isRejected = (input: PromiseSettledResult<unknown>): input is PromiseRejectedResult =>\n    input.status === 'rejected'\n\n  const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> =>\n    input.status === 'fulfilled'\n\n  mergeProps(res)\n\n  let reqs = []\n  for (let skip = size; skip < count; skip += size) {\n    if (reqs.length < options.batchSize && skip + size < count)\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n    else {\n      reqs.push(apiQuery(doc, { variables: { ...opt.variables, first: size, skip } }))\n\n      const data = await Promise.allSettled(reqs)\n      const error = data.find(isRejected)?.reason\n\n      if (error)\n        throw new Error(error)\n\n      for (let x = 0; x < data.length; x++) {\n        //@ts-ignore\n        mergeProps(data[x].value);\n      }\n      await new Promise(r => setTimeout(r, options.delay))\n      reqs = []\n    }\n  }\n  return results\n}\n\nexport const SEOQuery = (model: string, id?: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ${id ? `( filter: { id: { eq: \"${id}\" } })` : ''} {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any, callback: Function): GetStaticProps {\n\n  const revalidate: number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n\n  if (opt.query)\n    queries.push(opt.query)\n  if (opt.queries)\n    queries.push.apply(queries, opt.queries)\n  if (opt.seo)\n    queries.push(SEOQuery(opt.seo.model, opt.seo.id))\n\n  return async (context) => {\n    const props = await apiQuery(queries, { preview: context.preview });\n\n    if (callback)\n      return await callback({ context, props: { ...props }, revalidate });\n    else\n      return { props: { ...props }, context, revalidate };\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req: NextApiRequest, res: NextApiResponse) {\n\n  if (req.method === 'GET' && req.query?.ping)\n    return res.status(200).send('pong')\n\n  if (!process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `DATOCMS_PREVIEW_SECRET env not set` })\n\n  if (req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET)\n    return res.status(500).json({ message: `Invalid token` })\n\n  if (!req.query.slug)\n    return res.status(500).json({ message: 'Invalid slug' })\n\n  const { slug } = req.query as { slug: string }\n  const Location = slug ? slug.startsWith('/') ? slug : `/${slug}` : '/'\n\n  try {\n    res.setPreviewData({}, { maxAge: 3 })\n    res.writeHead(307, { Location })\n    res.end()\n  } catch (err) {\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\n\nexport default function withWebPreviews(generatePreviewUrl: (record: any) => Promise<string>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    res.setHeader('Content-Type', 'application/json');\n\n    if (req.method === 'OPTIONS')\n      return res.status(200).send('ok');\n\n    if (!req.body)\n      throw new Error('No body found in request')\n\n    const payload = req.body\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return res.status(200).json({ previewLinks });\n  }\n}","/**\n * Multi purpose CORS lib.\n * Note: Based on the `cors` package in npm but using only\n * web APIs. Feel free to use it in your own projects.\n */\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[]\n\ntype OriginFn = (\n  origin: string | undefined,\n  req: Request\n) => StaticOrigin | Promise<StaticOrigin>\n\ninterface CorsOptions {\n  origin?: StaticOrigin | OriginFn\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nconst defaultOptions: CorsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  preflightContinue: false,\n  optionsSuccessStatus: 204,\n}\n\nfunction isOriginAllowed(origin: string, allowed: StaticOrigin): boolean {\n  return Array.isArray(allowed)\n    ? allowed.some((o) => isOriginAllowed(origin, o))\n    : typeof allowed === 'string'\n      ? origin === allowed\n      : allowed instanceof RegExp\n        ? allowed.test(origin)\n        : !!allowed\n}\n\nfunction getOriginHeaders(reqOrigin: string | undefined, origin: StaticOrigin) {\n  const headers = new Headers()\n\n  if (origin === '*') {\n    // Allow any origin\n    headers.set('Access-Control-Allow-Origin', '*')\n  } else if (typeof origin === 'string') {\n    // Fixed origin\n    headers.set('Access-Control-Allow-Origin', origin)\n    headers.append('Vary', 'Origin')\n  } else {\n    const allowed = isOriginAllowed(reqOrigin ?? '', origin)\n\n    if (allowed && reqOrigin) {\n      headers.set('Access-Control-Allow-Origin', reqOrigin)\n    }\n    headers.append('Vary', 'Origin')\n  }\n\n  return headers\n}\n\n// originHeadersFromReq\n\nasync function originHeadersFromReq(\n  req: Request,\n  origin: StaticOrigin | OriginFn\n) {\n  const reqOrigin = req.headers.get('Origin') || undefined\n  const value =\n    typeof origin === 'function' ? await origin(reqOrigin, req) : origin\n\n  if (!value) return\n  return getOriginHeaders(reqOrigin, value)\n}\n\nfunction getAllowedHeaders(req: Request, allowed?: string | string[]) {\n  const headers = new Headers()\n\n  if (!allowed) {\n    allowed = req.headers.get('Access-Control-Request-Headers')!\n    headers.append('Vary', 'Access-Control-Request-Headers')\n  } else if (Array.isArray(allowed)) {\n    // If the allowed headers is an array, turn it into a string\n    allowed = allowed.join(',')\n  }\n  if (allowed) {\n    headers.set('Access-Control-Allow-Headers', allowed)\n  }\n\n  return headers\n}\n\nexport default async function cors(\n  req: Request,\n  res: Response,\n  options?: CorsOptions\n) {\n  const opts = { ...defaultOptions, ...options }\n  const { headers } = res\n  const originHeaders = await originHeadersFromReq(req, opts.origin ?? false)\n  const mergeHeaders = (v: string, k: string) => {\n    if (k === 'Vary') headers.append(k, v)\n    else headers.set(k, v)\n  }\n\n  // If there's no origin we won't touch the response\n  if (!originHeaders) return res\n\n  originHeaders.forEach(mergeHeaders)\n\n  if (opts.credentials) {\n    headers.set('Access-Control-Allow-Credentials', 'true')\n  }\n\n  const exposed = Array.isArray(opts.exposedHeaders)\n    ? opts.exposedHeaders.join(',')\n    : opts.exposedHeaders\n\n  if (exposed) {\n    headers.set('Access-Control-Expose-Headers', exposed)\n  }\n\n  // Handle the preflight request\n  if (req.method === 'OPTIONS') {\n    if (opts.methods) {\n      const methods = Array.isArray(opts.methods)\n        ? opts.methods.join(',')\n        : opts.methods\n\n      headers.set('Access-Control-Allow-Methods', methods)\n    }\n\n    getAllowedHeaders(req, opts.allowedHeaders).forEach(mergeHeaders)\n\n    if (typeof opts.maxAge === 'number') {\n      headers.set('Access-Control-Max-Age', String(opts.maxAge))\n    }\n\n    if (opts.preflightContinue) return res\n\n    headers.set('Content-Length', '0')\n    return new Response(null, { status: opts.optionsSuccessStatus, headers })\n  }\n\n  // If we got here, it's a normal request\n  return res\n}\n\nexport function initCors(options?: CorsOptions) {\n  return (req: Request, res: Response) => cors(req, res, options)\n}","import { NextRequest, NextResponse } from \"next/server.js\";\nimport cors from '../utils/cors.js'\n\nexport type PreviewLink = {\n  label: string\n  url: string\n}\n\nexport default function withWebPreviewsEdge(generatePreviewUrl: (record: any) => Promise<string>): (req: NextRequest, res: NextResponse) => void {\n\n  const corsOptions = {\n    origin: '*',\n    methods: ['POST', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    preflightContinue: false,\n  }\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (!process.env.NEXT_PUBLIC_SITE_URL && !process.env.SITE_URL)\n      throw new Error('NEXT_PUBLIC_SITE_URL is not set in .env')\n\n    if (!process.env.DATOCMS_PREVIEW_SECRET)\n      throw new Error('DATOCMS_PREVIEW_SECRET is not set in .env')\n\n    if (req.method === 'OPTIONS')\n      return cors(req, new Response('ok', { status: 200 }), corsOptions)\n\n    const payload = await req.json()\n\n    if (!payload)\n      throw new Error('No form data in request body')\n\n    const previewLinks = []\n    let path = await generatePreviewUrl(payload);\n    let baseUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.SITE_URL\n    const isExternal = path?.startsWith('https://')\n\n    if (isExternal) {\n      const url = new URL(path)\n      baseUrl = url.origin\n      path = url.pathname\n    }\n\n    if (path) {\n      previewLinks.push({ label: 'Live', url: `${baseUrl}${path}` })\n      previewLinks.push({ label: 'Preview', url: `${baseUrl}/api/preview?slug=${path}&secret=${process.env.DATOCMS_PREVIEW_SECRET}` })\n    }\n\n    return cors(\n      req,\n      new Response(JSON.stringify({ previewLinks }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      }), corsOptions)\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport const basicAuth = (req: NextApiRequest) => {\n\n  if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n    throw new Error('BASIC_AUTH_USER or BASIC_AUTH_PASSWORD not set in .env')\n\n  const basicAuth = req.headers.authorization\n\n  if (!basicAuth)\n    return true;\n\n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nexport default function withRevalidate(callback: (record: any, revalidate: (paths: string[]) => Promise<void>) => Promise<void>): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'GET' && req.query?.ping) {\n      console.log('ping')\n      return res.status(200).send('pong')\n    }\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body;\n\n    if (!payload || !payload?.entity)\n      throw 'Payload is empty'\n\n    const { entity, related_entities, event_type } = payload\n    const model = related_entities.find(({ id }) => id === entity.relationships?.item_type?.data?.id)\n\n    if (!model)\n      throw new Error(`Model not found in payload`)\n\n    const record = { ...entity.attributes, model: model.attributes }\n    const delay = Date.now() - Math.max(new Date(entity.meta.updated_at).getTime(), new Date(entity.meta.published_at).getTime(), new Date(entity.meta.created_at).getTime())\n\n    callback(record, async (paths) => {\n      try {\n        if (!paths || !paths.length)\n          throw 'Nothing to revalidate';\n\n        await Promise.all(paths.map(p => res.revalidate(p)))\n\n        console.log(`revalidate${delay && !['unpublish', 'delete'].includes(event_type) ? ` (${delay}ms)` : ''} ${event_type}`, paths)\n\n        return res.json({ revalidated: true, paths, delay, event_type })\n      } catch (err) {\n        console.log('Error revalidating', paths)\n        console.error(err)\n        return res.json({ revalidated: false, err, delay, event_type })\n      }\n    })\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\n\nexport default function withBasicAuth(callback: (req: NextApiRequest, res: NextApiResponse) => void, options?: { username: string, password: string }): (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.authorization\n\n    if (!process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      throw new Error('Basic auth not set up in .env')\n\n    if (!basicAuth || !process.env.BASIC_AUTH_USER || !process.env.BASIC_AUTH_PASSWORD)\n      return res.status(401).send('Access denied')\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return res.status(401).send('Access denied')\n\n    return callback(req, res)\n  }\n}\n\n\n","import type { NextApiRequest, NextApiResponse } from 'next'\nimport withBasicAuth from './withBasicAuth.js';\nimport { buildClient } from '@datocms/cma-client';\n\nconst withBackup = withBasicAuth(async (req: NextApiRequest, res: NextApiResponse) => {\n\n  if (!process.env.DATOCMS_ENVIRONMENT)\n    return res.status(500).send('DATOCMS_ENVIRONMENT not set in .env')\n  if (!process.env.DATOCMS_API_TOKEN)\n    return res.status(500).send('DATOCMS_API_TOKEN not set in .env')\n\n  const maxBackups = req.query.max ? parseInt(req.query.max as string) : 1\n  const backupPrefix = 'auto-backup-'\n  const client = buildClient({ environment: process.env.DATOCMS_ENVIRONMENT, apiToken: process.env.DATOCMS_API_TOKEN, requestTimeout: 3000 })\n  const backups = (await client.environments.list()).filter(e => e.id.startsWith('auto-backup') && e.meta.primary === false).sort((a, b) => a.id.replace(backupPrefix, '') > b.id.replace(backupPrefix, '') ? -1 : 1)\n  const today = new Date().toISOString().replace('T', '-').replaceAll(':', '-').replace('Z', '').split('.')[0]\n  const name = `auto-backup-${today}`\n\n  console.log('Last backup was: ', backups[0]?.id ?? 'none')\n  console.log('Max backups: ', maxBackups)\n  console.log('Creating backup...', name)\n\n  try {\n\n    await client.environments.fork(process.env.DATOCMS_ENVIRONMENT, { id: name }, {\n      immediate_return: false,\n      fast: true,\n      force: true\n    })\n\n    for (let i = 0; i < backups.reverse().slice(maxBackups - 1).length; i++) {\n      try {\n        console.log('Deleting old backup...', backups[i].id)\n        await client.environments.destroy(backups[i].id)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    console.log('Backup done!')\n    return res.status(200).send(`Backup done ${process.env.DATOCMS_ENVIRONMENT} > ${name}`)\n  } catch (e) {\n    console.error(e)\n    return res.status(500).send(`Backup failed: ${e.message}`)\n  }\n\n})\n\nexport default withBackup\nexport const maxDuration = 30;\n","import type { NextRequest, NextResponse } from 'next/server.js'\n\nexport default function withBasicAuthEdge(callback: (req: NextRequest, res: NextResponse) => void, options?: { username: string, password: string }): (req: NextRequest, res: NextResponse) => void {\n\n  return async (req: NextRequest, res: NextResponse) => {\n\n    if (req.method === 'OPTIONS')\n      return callback(req, res)\n\n    const basicAuth = req.headers.get('authorization')\n\n    if (!basicAuth)\n      return new Response('Access denied', { status: 401 })\n\n    const auth = basicAuth.split(' ')[1]\n    const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n    const username = options?.username || process.env.BASIC_AUTH_USER\n    const password = options?.password || process.env.BASIC_AUTH_PASSWORD\n    const isAuthorized = user === username && pwd === password\n\n    if (!isAuthorized)\n      return new Response('Access denied. Wrong password or username.', { status: 401 })\n\n    return callback(req, res)\n  }\n}","import { GetServerSideProps } from \"next\";\n\nexport const withFavicon: GetServerSideProps = async function ({ res }) {\n\n  if (!process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN)\n    return { notFound: true }\n\n  const query = await fetch('https://graphql.datocms.com/', {\n    method: 'POST',\n    body: JSON.stringify({\n      query:\n        `query Site {\n          site: _site {\n            favicon{\n              url\n              mimeType\n            }\n          }\n        }\n    `}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accepts': 'application/json',\n      'Authorization': process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n    }\n  })\n\n  const { data: { site } } = await query.json() as { data: { site: any } }\n\n  if (!site?.favicon.url)\n    return { notFound: true }\n\n  const reader = (await fetch(site.favicon.url)).body.getReader()\n\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done)\n      break;\n    res.write(value)\n  }\n\n  res.end()\n\n  return {\n    props: {},\n  };\n}\n\nexport default withFavicon","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any\n  initialData?: any\n  pageSize?: number\n  preview?: boolean\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end: boolean\n}\n\nconst useApiQuery = <T>(document: TypedDocumentNode, { variables, initialData, pageSize, preview = false }: UseApiQueryProps = {}) => {\n\n  const [initial, setInitial] = useState<T>(initialData)\n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no: 1,\n    count: initialData.pagination?.count || 0,\n    size: pageSize,\n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(initialData) !== JSON.stringify(initial)) {\n      setData(initialData)\n      setInitial(initialData)\n    }\n  }, [initialData])\n\n  const loadMore = (vars: any) => load(vars)\n\n  const load = useCallback((vars?: any) => {\n    setLoading(true)\n\n    return apiQuery(document, { variables: { ...variables, ...vars }, preview })\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .finally(() => setLoading(false))\n\n  }, [document, variables, data])\n\n  const nextPage = useCallback(async () => {\n    if (!page)\n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = page.no * page.size\n\n    if (skip > page.count && page.count > 0)\n      return page\n\n    try {\n      const d = await load({ ...variables.variables, first, skip })\n      const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n      const no = page.no + 1\n      const end = no * pageSize >= count\n      const p = { ...page, no, count, end }\n\n      setPage(p)\n      return p;\n\n    } catch (err) {\n      setError(err)\n      return page;\n    }\n  }, [page, variables, pageSize, setPage, setError, load])\n\n  const mergeData = (newData, oldData) => {\n\n    if (!oldData || !newData) return newData\n\n    Object.keys(newData).forEach(k => {\n      if (oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n\n    return newData;\n  }\n\n  useEffect(() => { !initialData && load() }, [initialData, load])\n\n  return { data, error, loading, loadMore, nextPage, page }\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n\n  const storage = globalThis.localStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n  useEffect(() => {\n    const prevRoute = storage.getItem('currentRoute') || null;\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n  }, [router.asPath, storage])\n\n  useEffect(() => {\n    const handleWindowReload = () => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('unload', handleWindowReload)\n    return () => window.removeEventListener('unload', handleWindowReload)\n  }, [])\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean,\n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling: false,\n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer: null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n\n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({ ...scrollInfo, isScrolling: false }), 100)\n    }\n\n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    handleScroll()\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import { useQuerySubscription } from 'react-datocms';\nimport * as listen from 'datocms-listen'\nimport { DocumentNode } from '@apollo/client/core/core.cjs';\n\nconst GRAPHQL_API_TOKEN = process.env.GRAPHQL_API_TOKEN || process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nexport type LivePreviewOptions = {\n  preview: boolean\n  variables?: any\n  apiToken?: string\n}\n\nexport default function useLivePreview(\n  query: DocumentNode,\n  initialData: any = {},\n  options: LivePreviewOptions = {\n    preview: false,\n    variables: {}\n  }) {\n\n  const { data, error, status } = useQuerySubscription({\n    token: options.apiToken || GRAPHQL_API_TOKEN,\n    query: query,\n    initialData,\n    variables: options.variables,\n    enabled: options.preview,\n    includeDrafts: options.preview,\n    excludeInvalid: true,\n    reconnectionPeriod: 5000,\n  })\n\n  return { data, error, status }\n\n}\n\n// http://localhost:3000/api/preview?slug=/posts/testar&secret=jcV0Zcu6Yyl9","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nexport type DefaultSEOProps = {\n  site?: any,\n  path?: string,\n  title?: string,\n  siteTitle?: string,\n  description?: string,\n}\n\nexport type DatoSEOProps = DefaultSEOProps & {\n  seo?: any,\n  noindex?: boolean\n}\n\nexport const DefaultDatoSEO = (props: DefaultSEOProps) => {\n\n  if (!process.env.NEXT_PUBLIC_SITE_URL)\n    throw 'Set NEXT_PUBLIC_SITE_URL env variable'\n\n  const data = parseProps(props)\n  const titleTemplate = `${props.siteTitle}${data.globalSeo?.titleSuffix ? ` ${data.globalSeo?.titleSuffix}` : ' —'} %s`\n\n  return (\n    <DefaultSeo\n      {...data}\n      titleTemplate={titleTemplate}\n      defaultTitle={props.siteTitle}\n      canonical={`${process.env.NEXT_PUBLIC_SITE_URL}${props.path || ''}`}\n      additionalLinkTags={data.favicons}\n    />\n  )\n}\n\nconst DatoSEO = (props: DatoSEOProps) => {\n  const data = parseProps(props)\n  return <NextSeo {...data} />\n}\n\nexport default DatoSEO;\n\nconst parseProps = ({\n  seo = {},\n  site = {},\n  title,\n  description,\n  noindex = false\n}: DatoSEOProps) => {\n\n  const meta = parseDatoMetaTags({ seo, site })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const props = {\n    openGraph: {\n      title,\n      images,\n      description,\n      locale: meta[\"og:locale\"],\n      type: meta[\"og:type\"],\n      site_name: meta[\"og:site_name\"],\n    },\n    twitter: {\n      title,\n      image: meta[\"og:image\"],\n      handle: globalSeo?.twitterAccount,\n      site: globalSeo?.twitterAccount,\n      cardType: 'summary_large_image',\n    },\n    noindex: noindex,\n    nofollow: noindex,\n    meta,\n    title,\n    description,\n    favicons,\n    globalSeo,\n    images\n  }\n\n  return props\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\nimport { SpecialComponents } from \"react-markdown/lib/ast-to-react.js\";\n\ntype MarkdownProps = {\n  children?: React.ReactNode,\n  allowedElements?: string[]\n  truncate?: number\n  className?: string\n  sentances?: number\n  components?: Partial<Omit<any, keyof SpecialComponents> & SpecialComponents>\n  scroll?: boolean,\n  disableBreaks?: boolean\n}\n\ntype AnchorProp = {\n  children: any[],\n  href: UrlObject\n}\n\nconst truncateSentances = (markdown: string, limit: number): string => {\n  if (!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit ? sentances.slice(0, limit).join(' ') + '...' : markdown\n}\n\nconst DatoMarkdown = ({ children, truncate, className, components, sentances, allowedElements, scroll = true, disableBreaks = false }: MarkdownProps) => {\n  if (!children)\n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) : children : truncateMarkdown(children, { limit: truncate, ellipsis: true })\n\n  return (\n    <ReactMarkdown\n      remarkPlugins={disableBreaks ? [gfm] : [gfm, remarkBreaks]}\n      className={className}\n      children={content}\n      allowedElements={allowedElements}\n      //@ts-ignore\n      components={components ?? {\n        //@ts-ignore\n        a: ({ children, href }: AnchorProp) => <Link scroll={scroll} href={href}>{children[0]}</ Link>\n      }}\n    />\n  )\n}\n\nexport default DatoMarkdown\n\n","import { Client, buildClient } from '@datocms/cma-client-node';\nimport { ItemType } from '@datocms/cma-client/dist/types/generated/SimpleSchemaTypes.js';\n\nconst baseApiUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api`\n\ntype PreviewLink = {\n  label: string\n  url: string\n}\n\ntype RevalidateResponse = {\n  revalidated: boolean,\n  paths: string[]\n  delays: number\n  event_type: string\n}\n\ntype TestResult = {\n  model: string\n  previews?: PreviewLink[]\n  revalidate?: RevalidateResponse\n}\n\nexport async function testApiEndpoints() {\n\n  const client = buildClient({ apiToken: process.env.DATOCMS_API_TOKEN })\n  const site = await client.site.find()\n\n  console.log(`Testing site: ${site.name}`)\n\n  const itemTypes = await client.itemTypes.list()\n  const models = itemTypes.filter(t => !t.modular_block)\n\n  const results = []\n\n  for (let i = 0; i < models.length; i++) {\n    const r: TestResult = { model: models[i].api_key }\n\n    try {\n      const previews = await testWebPreviewsEndpoint(models[i], client)\n      if (previews.length > 0) {\n        r.previews = previews\n      }\n    } catch (e) {\n\n    }\n\n    try {\n      const revalidate = await testRevalidateEndpoint(models[i], client)\n      if (revalidate.revalidated && revalidate.paths.length > 0)\n        r.revalidate = revalidate\n\n    } catch (e) {\n\n    }\n    results.push(r)\n  }\n\n  return results\n}\n\nexport const testResultsToString = (results: TestResult[]) => {\n  const tests = results.map(r => {\n    return `${r.model} - Previews: ${r.previews ? 'YES' : 'NO'} / Revalidate: ${r.revalidate ? 'YES' : 'NO'}`\n  }).join('\\n')\n\n  const previews = results.filter(r => r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const revalidate = results.filter(r => r.revalidate).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const nopreviews = results.filter(r => !r.previews).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n  const norevalidate = results.filter(r => !r.revalidate).map(r => r.model).sort((a, b) => a > b ? 1 : -1).join('\\n')\n\n  return `WEB PREVIEWS\\n${previews}\\n\\nNO WEB PREVIEWS:\\n${nopreviews}\\n\\nREVALIDATE\\n${revalidate}\\n\\nNO REVALIDATE\\n${norevalidate}`\n\n}\n\nconst testWebPreviewsEndpoint = async (itemType: ItemType, client: Client): Promise<PreviewLink[]> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/web-previews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      item: {\n        attributes: item || {}\n      },\n      itemType: {\n        attributes: itemType\n      },\n      environmentId: \"main\",\n      locale: \"en\"\n    })\n  })\n\n  const json = await res.json()\n  return json.previewLinks\n\n}\n\nconst testRevalidateEndpoint = async (itemType: ItemType, client: Client): Promise<RevalidateResponse> => {\n\n  const item = (await client.items.list({ filter: { type: itemType.api_key } }))[0]\n  const res = await fetch(`${baseApiUrl}/api/revalidate`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${btoa(`${process.env.BASIC_AUTH_USER}:${process.env.BASIC_AUTH_PASSWORD}`)}`\n    },\n    body: JSON.stringify({\n      \"environment\": \"main\",\n      \"entity_type\": \"item\",\n      \"event_type\": \"update\",\n      \"entity\": {\n        \"id\": item.id,\n        \"type\": \"item\",\n        \"attributes\": {\n          ...item || {}\n        },\n        \"relationships\": {\n          \"item_type\": {\n            \"data\": {\n              \"id\": itemType.id,\n              \"type\": \"item_type\"\n            }\n          }\n        },\n        \"meta\": item.meta\n      },\n      \"related_entities\": [\n        {\n          \"id\": itemType.id,\n          \"type\": \"item_type\",\n          \"attributes\": itemType\n        }\n      ],\n    })\n  })\n\n  const json = await res.json()\n  return json\n}","import { ReactNode } from \"react\";\nimport { ApiError, buildClient } from \"@datocms/cma-client\";\nexport { default as cors } from './cors.js'\nexport { testApiEndpoints } from './tests.js'\n\nexport const isServer = typeof window === 'undefined';\n\nexport const chunkArray = (array: any[] | ReactNode[], chunkSize: number) => {\n  const newArr = []\n  for (let i = 0; i < array.length; i += chunkSize)\n    newArr.push(array.slice(i, i + chunkSize));\n  return newArr\n}\n\nexport const parseDatoError = (err: any): string => {\n  const errors = (err as ApiError).errors.map(({ attributes: { code, details } }) => ({ code, field: details?.field, message: details?.message, detailsCode: details?.code, errors: Array.isArray(details?.errors) ? details?.errors.join('. ') : undefined }))\n  return errors.map(({ code, field, message, detailsCode, errors }) => `${code} ${field ? `(${field})` : ''} ${message || ''} ${detailsCode || ''} ${errors ? `(${errors})` : ''}`).join('\\n')\n}\n\nexport const parseDatoCMSApiError = (e: any): string => {\n\n  if (e instanceof ApiError === false)\n    return typeof e === 'string' ? e : e.message || e.toString()\n\n  const err = new ApiError(e)\n  return err.errors.map(e => {\n    let code = `${e.attributes.code}`\n    let errors = []\n\n    if (Array.isArray(e.attributes.details?.errors)) {\n      e.attributes.details.errors.forEach(e => {\n        errors.push(Object.keys(e).map(k => `${k}: ${e[k]}`).join(', '))\n      })\n    }\n    return `${code}${errors.length ? `: ${errors.join('. ')}` : ''}`\n  }).join('\\n')\n}\n\nexport const isEmpty = (obj: any) => Object.keys(obj).filter(k => obj[k] !== undefined).length === 0\n\nexport const capitalize = (str: string, lower: boolean = false) => {\n  return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n}\n\nexport const sleep = (ms: number) => new Promise((resolve, refject) => setTimeout(resolve, ms))\n\nexport const rInt = (min: number, max: number): number => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const truncateParagraph = (s: string, sentances: number = 1, ellipsis: boolean = true, minLength = 200): string => {\n  if (!s || s.length < minLength)\n    return s;\n\n  let dotIndex = s.split('.')?.slice(0, sentances + 1).join('.').lastIndexOf('.')\n  let qIndex = s.split('? ')?.slice(0, sentances + 1).join('? ').lastIndexOf('? ')\n  const isQuestion = qIndex !== -1 && qIndex < dotIndex || (dotIndex === -1 && qIndex > -1)\n\n  if (dotIndex === -1 && qIndex === -1) {\n    dotIndex = minLength - 1\n    ellipsis = true\n  }\n\n  let str = s.substring(0, isQuestion ? qIndex : dotIndex) //`${s.substring(0, minLength - 1)}${s.substring(minLength - 1).split('.').slice(0, sentances).join('. ')}`\n  return `${str}${ellipsis ? '...' : isQuestion ? '?' : '.'}`;\n}\n\nexport const truncateWords = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength)\n    return text;\n\n  var truncatedText = text.substring(0, maxLength);\n  var lastSpaceIndex = truncatedText.lastIndexOf(' ');\n  if (lastSpaceIndex !== -1) {\n    truncatedText = truncatedText.substr(0, lastSpaceIndex);\n  }\n  return truncatedText + '...';\n}\n\nexport const sortSwedish = <T>(arr: T[], key?: string): T[] => {\n  const alfabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Å\", \"Ä\", \"Ö\"];\n\n  return arr.sort((a, b) => {\n    const ai = alfabet.findIndex((l) => l === (key ? a[key] : a)?.charAt(0).toUpperCase())\n    const bi = alfabet.findIndex((l) => l === (key ? b[key] : b)?.charAt(0).toUpperCase())\n    return !ai ? -1 : ai > bi ? 1 : ai === bi ? 0 : -1\n  })\n}\n\nexport const awaitElement = async <T>(selector: string) => {\n\n  const cleanSelector = function (selector) {\n    (selector.match(/(#[0-9][^\\s:,]*)/g) || []).forEach(function (n) {\n      selector = selector.replace(n, '[id=\"' + n.replace(\"#\", \"\") + '\"]');\n    });\n    return selector;\n  }\n\n  for (let i = 0; i < 100; i++) {\n    const el = document.querySelector(cleanSelector(selector)) as T\n    if (el) return el\n    await sleep(30)\n  }\n\n  throw new Error(`Element ${selector} not found`)\n}"],"names":["state","value","pact","s","_Pact","o","_settle","bind","v","then","observer","isServer","window","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_templateObject","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","GRAPHQL_ENVIRONMENT","_ref","_process$env$DATOCMS_","DATOCMS_ENVIRONMENT","NEXT_PUBLIC_DATOCMS_ENVIRONMENT","GRAPHQL_INCLUDE_DRAFTS","DATOCMS_INCLUDE_DRAFTS","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","Promise","resolve","response","t","Date","getTime","_extends","text","console","log","reject","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","BatchHttpLink","link","previewLink","client","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","apiQuery","options","variables","_ref2","_ref2$preview","Error","setLink","batch","q","idx","vars","length","all","data","errorMessages","filter","errors","forEach","_ref4","message","push","res","_catch","err","checkIsPaganationQuery","doc","operation","definitions","find","d","kind","variableDefinitions","selectionSet","selections","_s$alias","alias","variable","name","apiQueryAll","opt","batchSize","delay","results","size","first","skip","_res$pagination","pagination","count","mergeProps","props","Object","keys","i","k","el","concat","isRejected","status","reqs","_temp","_for","allSettled","_data$find","error","reason","x","r","setTimeout","_result2","SEOQuery","model","id","gql","datoError","withGlobalProps","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","context","withPreview","req","_req$query","method","ping","send","DATOCMS_PREVIEW_SECRET","json","secret","slug","Location","startsWith","setPreviewData","maxAge","writeHead","end","withWebPreviews","generatePreviewUrl","NEXT_PUBLIC_SITE_URL","SITE_URL","setHeader","previewLinks","path","_path","baseUrl","url","URL","origin","pathname","label","cors","methods","opts","originHeadersFromReq","_opts$origin","originHeaders","append","set","mergeHeaders","credentials","exposed","exposedHeaders","allowed","Headers","get","getAllowedHeaders","allowedHeaders","String","preflightContinue","Response","optionsSuccessStatus","reqOrigin","isOriginAllowed","getOriginHeaders","_temp2","some","RegExp","test","withWebPreviewsEdge","corsOptions","payload","stringify","withRevalidate","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","basicAuth","authorization","auth","split","_Buffer$from$toString","Buffer","from","entity","event_type","related_entities","relationships","_entity$relationships2","_entity$relationships","item_type","_entity$relationships3","record","attributes","now","Math","max","meta","updated_at","published_at","created_at","paths","p","includes","revalidated","username","password","pwd","withBackup","withBasicAuth","DATOCMS_API_TOKEN","backupPrefix","buildClient","environment","requestTimeout","environments","list","_client$environments$","_backups$0$id","_backups$","backups","primary","sort","a","b","replace","toISOString","replaceAll","maxBackups","fork","immediate_return","fast","force","_temp3","reverse","slice","destroy","prototype","withBasicAuthEdge","withFavicon","Accepts","site","favicon","reader","_fetch","getReader","_interrupt","read","_ref3","done","write","notFound","document","_initialData$paginati","_initialData$paginati2","_initialData$paginati3","initialData","pageSize","_ref$preview","useState","initial","_useState","setInitial","_useState2","setData","no","page","_useState3","setPage","setError","_useState4","loading","setLoading","_useState5","useEffect","load","useCallback","mergeData","_d$Object$keys$find","isNaN","newData","oldData","loadMore","nextPage","usePreviousRoute","storage","globalThis","localStorage","router","useRouter","getItem","prevRoute","setPrevRoute","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","clearTimeout","current","scrollHeight","clientHeight","ceil","handleScroll","useTransitionFix","querySelectorAll","node","removeAttribute","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","useLivePreview","useQuerySubscription","token","enabled","includeDrafts","excludeInvalid","reconnectionPeriod","_useQuerySubscription","DefaultDatoSEO","_data$globalSeo","_data$globalSeo2","parseProps","titleTemplate","siteTitle","globalSeo","titleSuffix","React","createElement","DefaultSeo","defaultTitle","canonical","additionalLinkTags","favicons","NextSeo","_ref$seo","_ref$site","title","description","noindex","_ref$noindex","parseDatoMetaTags","images","generateImages","fallbackSeo","openGraph","locale","type","site_name","twitter","image","handle","twitterAccount","cardType","nofollow","width","height","metaTags","tags","m","tag","titleTag","content","siteName","property","scaleRatio","round","DatoMarkdown","children","truncate","className","components","sentances","allowedElements","scroll","_ref$scroll","_ref$disableBreaks","disableBreaks","truncateMarkdown","limit","ellipsis","markdown","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","Link","href","testApiEndpoints","itemTypes","models","modular_block","_temp5","_temp4","testRevalidateEndpoint","api_key","testWebPreviewsEndpoint","previews","baseApiUrl","itemType","items","_client$items$list","item","btoa","environmentId","_client$items$list2","entity_type","array","chunkSize","newArr","parseDatoError","details","_ref$attributes","code","field","detailsCode","parseDatoCMSApiError","ApiError","_e$attributes$details","isEmpty","obj","capitalize","str","lower","toLowerCase","match","toUpperCase","sleep","ms","refject","rInt","min","floor","random","truncateParagraph","minLength","_s$split","_s$split2","dotIndex","lastIndexOf","qIndex","isQuestion","substring","truncateWords","maxLength","truncatedText","lastSpaceIndex","substr","sortSwedish","arr","key","ai","alfabet","findIndex","l","charAt","bi","awaitElement","selector","_exit2","_result","_i","querySelector","n","cleanSelector"],"mappings":"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"}
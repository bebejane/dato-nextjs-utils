{"version":3,"file":"index.modern.mjs","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/components/DatoSEO.tsx","src/components/DatoMarkdown.tsx"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\"; \nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\nexport type ApiQueryOptions = { variables?: any | any[], preview?: boolean}\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response>  => {\n  \n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op : {operationName:string}) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text () {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime()-t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL ? loggingFetch : undefined,\n  batchMax: 10, \n  batchInterval: 50,\n  headers: { \n    'Authorization': `Bearer ${GRAPHQL_API_TOKEN}`,\n    'X-Exclude-Invalid': true\n  }\n}\n\nconst link = new BatchHttpLink(linkConfig)\nconst previewLink = new BatchHttpLink({...linkConfig, headers:{...linkConfig.headers, 'X-Include-Drafts': true}})\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport const SEOQuery = (schema: string) : TypedDocumentNode => {\n  const q = \"query GetSEO {seo: \" + schema + \" {id tags: _seoMetaTags {attributes content tag}}}\";\n  return gql(q) as TypedDocumentNode\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options? : ApiQueryOptions) : Promise<any> => {\n  \n  const { variables, preview = false} = options || {}\n\n  if(query === null) \n    throw new Error('Invalid query! Query is empty')\n\n  if(!GRAPHQL_API_TOKEN) \n    throw new Error('No graphql api token exists in .env')\n  \n  try{\n    \n    client.setLink(preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx -1 ? variables[idx] : variables || {}\n      return client.query({query:q, variables:vars})\n    })\n  \n    const data = await Promise.all(batch)\n    \n    const errorMessages:string[] = []\n    data.filter(({errors}) => errors).forEach(({errors}) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n    \n    if(errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n    \n    let result = {}\n    data.forEach((res) => result = {...result, ...res?.data})\n    return result\n\n  }catch(err){\n    throw err\n  }\n}","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {no:1, count:0, size:pageSize, end:false} : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n    .then(res => {\n      const d = mergeData(res, data)\n      setData(d)\n      return d\n    })\n    .catch(err => setError(err))\n    .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{\n    if(!initialData)\n      load()\n    else if(initialData.pagination?.count <= pageSize)\n      setPage((page)=>({...page, end:true}))\n\n  }, [initialData, load, setPage, pageSize])\n\n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({seo = {}, site = {}, pathname, title, subtitle, description, noindex = false} : any) => {\n  \n  const meta = parseDatoMetaTags({seo, site, pathname}) \n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => {return {...attributes} }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  title = title ? title : globalSeo ? globalSeo?.siteName : 'Site title'\n  title = `${title} ${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`\n  description = description ? description : meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : 'Site description';\n  \n  const twitterProps : any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n  \n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale:meta[\"og:locale\"],\n        type:meta[\"og:type\"],\n        site_name:meta[\"og:site_name\"],\n      }}\n      twitter={ twitterProps }\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\n\nconst DefaultDatoSEO = ({site, url}) => {\n  const {globalSeo, favicon, globalSeo : {fallbackSeo}} = site\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n  return (\n    <DefaultSeo\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height) : any => {\n  if(!url) return undefined\n  const baseURL  = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({seo, site, pathname} : any) : any => {\n\n\tif(!seo || !site) return []\n\t\n\tconst { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n\tconst tags = Array.isArray(seo) ? seo : seo.tags;\n\n\tlet metaTags = tags || []\n\tlet titleTag = metaTags.filter(m=> m.tag === \"title\")[0]\n  \n  if(titleTag && globalSeo){\n    if(pathname === \"/\")\n      titleTag = {...titleTag, content:globalSeo.siteName}\n    else if(globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = {...titleTag, content:`${globalSeo.siteName} – ${titleTag.content}`}\n  }\n\n\tmetaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag})\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name  : t.tag;\n    const value = t.attributes ?  t.attributes.content || t.attributes : t.content;  \n    meta[prop] = value\n  })\n\n  if(!meta['og:image'] && fallbackSeo?.image){\n    const width = 1000;\n    const scaleRatio = 1.0-((fallbackSeo.image.width-width)/fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n\treturn meta\n}\n\nexport { DefaultDatoSEO };\nexport default DatoSEO;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children: React.ReactNode | React.ReactNode[], \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["_templateObject","isServer","process","env","GRAPHQL_API_ENDPOINT","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","input","init","queries","JSON","parse","body","toString","undefined","requestName","Array","isArray","map","op","operationName","join","response","t","Date","getTime","text","then","result","console","log","e","Promise","reject","batchMax","batchInterval","headers","Authorization","link","BatchHttpLink","previewLink","client","ApolloClient","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","SEOQuery","schema","apiQuery","options","_ref","variables","_ref$preview","preview","Error","resolve","setLink","batch","q","idx","vars","length","all","data","filter","errors","forEach","_ref3","message","errorMessages","push","res","_catch","err","withGlobalProps","opt","callback","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","context","props","gql","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","error","withRevalidate","_req$body","basicAuth","authorization","split","Buffer","from","auth","_Buffer$from$toString","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","entity","payload","recordFromPayload","_payload$relationship","_payload$relationship2","_payload$relationship3","modelId","relationships","item_type","id","buildClient","apiToken","requestTimeout","itemTypes","list","models","model","find","m","items","type","api_key","fields","eq","records","record","paths","p","revalidated","useApiQuery","document","_temp","initialData","pageSize","_useState","useState","setData","no","count","size","page","_useState2","setPage","_useState3","setError","loading","setLoading","_useState4","load","useCallback","newData","oldData","d","Object","keys","k","concat","useEffect","_initialData$paginati","pagination","_extends","loadMore","nextPage","first","skip","_d$Object$keys$find","isNaN","usePreviousRoute","storage","globalThis","sessionStorage","useRouter","getItem","prevRoute","setPrevRoute","router","asPath","setItem","handleWindowReload","removeItem","window","addEventListener","removeEventListener","pageBottomLimit","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","scrollInfo","setScrollInfo","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","DatoSEO","site","_ref$site","pathname","title","subtitle","description","_ref$noindex","noindex","meta","parseDatoMetaTags","_ref$seo","globalSeo","favicon","_ref2","attributes","images","generateImages","NEXT_PUBLIC_SITE_URL","React","createElement","NextSeo","siteName","titleSuffix","fallbackSeo","canonical","url","openGraph","locale","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","favicons","nofollow","width","height","metaTags","tags","titleTag","tag","content","startsWith","property","name","scaleRatio","round","DatoMarkdown","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","slice","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","Link","scroll","href"],"mappings":"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"}
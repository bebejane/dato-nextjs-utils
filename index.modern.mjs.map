{"version":3,"file":"index.modern.mjs","sources":["src/api/index.ts","src/hoc/withGlobalProps.ts","src/hoc/withPreview.ts","src/hoc/withRevalidate.ts","src/hooks/useApiQuery.ts","src/hooks/usePreviousRoute.ts","src/hooks/useScrollInfo.ts","src/hooks/useTransitionFix.ts","src/components/DatoSEO.tsx","src/components/DatoMarkdown.tsx"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client/core/core.cjs';\nimport { BatchHttpLink } from \"@apollo/client/link/batch-http/batchHttpLink.js\";\nimport { TypedDocumentNode } from '@apollo/client/core/types.js';\nimport { gql } from \"@apollo/client/core/core.cjs\";\n\n\n\nconst isServer = typeof window === 'undefined';\nconst GRAPHQL_API_ENDPOINT = process.env.GRAPHQL_API_ENDPOINT || process.env.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT || `https://graphql.datocms.com`;\nconst GRAPHQL_API_TOKEN = process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN\n\nconst loggingFetch = async (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n\n  const queries = init ? JSON.parse(init.body.toString()) : undefined;\n  const operations = queries ? Array.isArray(queries) ? queries.map((op: { operationName: string }) => op.operationName) : [queries.operationName] : [];\n  const requestName = `${operations.join(', ')}`\n  const response = await fetch(input, init)\n  const t = new Date().getTime()\n\n  return {\n    ...response,\n    async text() {\n      const result = await response.text()\n      console.log(\"\\x1b[33m%s\\x1b[0m\", 'gql  ', `- ${requestName}`, `- ${new Date().getTime() - t}ms`)\n      return result\n    }\n  }\n}\n\nconst linkConfig = {\n  uri: GRAPHQL_API_ENDPOINT,\n  fetch: process.env.LOG_GRAPHQL === 'true' ? loggingFetch : undefined,\n  batchMax: 10,\n  batchInterval: 50\n}\n\nconst createLink = (preview: boolean = false, apiToken: string = GRAPHQL_API_TOKEN) => {\n  const headers = {\n    'Authorization': `Bearer ${apiToken}`,\n    'X-Exclude-Invalid': true,\n  }\n\n  if (preview)\n    headers['X-Include-Drafts'] = true\n\n  return new BatchHttpLink({\n    ...linkConfig,\n    headers\n  })\n}\n\nconst link = createLink(false, GRAPHQL_API_TOKEN)\nconst previewLink = createLink(true, GRAPHQL_API_TOKEN)\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  ssrMode: isServer,\n  defaultOptions: {\n    query: {\n      fetchPolicy: process.env.DEV_CACHE ? 'cache-first' : 'no-cache',\n      errorPolicy: 'all',\n    }\n  }\n});\n\nexport type ApiQueryOptions = {\n  variables?: any | any[],\n  preview?: boolean,\n  apiToken?: string\n}\n\nexport const apiQuery = async (query: TypedDocumentNode | TypedDocumentNode[], options?: ApiQueryOptions): Promise<any> => {\n\n  const { variables, preview = false, apiToken } = options || {}\n\n  if (query === null)\n    throw new Error('Invalid query! Query is empty')\n\n  if (!GRAPHQL_API_TOKEN)\n    throw new Error('No graphql api token exists in .env')\n\n  try {\n\n    client.setLink(apiToken ? createLink(preview, apiToken) : preview ? previewLink : link)\n\n    const batch = (Array.isArray(query) ? query : [query]).map((q, idx) => {\n      const vars = Array.isArray(variables) && variables.length > idx - 1 ? variables[idx] : variables || {}\n      return client.query({ query: q, variables: vars })\n    })\n\n    const data = await Promise.all(batch)\n\n    const errorMessages: string[] = []\n    data.filter(({ errors }) => errors).forEach(({ errors }) => {\n      errors.map(e => e.message).forEach((message) => errorMessages.push(message))\n    })\n\n    if (errorMessages.length)\n      throw new Error(errorMessages.join('. '))\n\n    let result = {}\n    data.forEach((res) => result = { ...result, ...res?.data })\n    return result\n\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const SEOQuery = (model: string, id: string): TypedDocumentNode => {\n  const q = `query GetSEO{\n    seo: ${model} ( filter: { id: { eq: \"${id}\" } }) {\n      id \n      tags: _seoMetaTags {\n        attributes \n        content \n        tag\n      }\n    }\n  }`;\n  return gql(q) as TypedDocumentNode\n}\n\nexport const datoError = (err: Error) => {\n  console.error(err)\n  return err.message || err\n}\n","import { apiQuery, SEOQuery } from \"../api/index.js\";\nimport { GetStaticProps } from 'next'\nimport { gql } from \"@apollo/client/core/core.cjs\";\nimport type { TypedDocumentNode } from \"@apollo/client/core/types.js\";\n\nexport default function withGlobalProps(opt: any , callback : Function) : GetStaticProps {\n  \n  const revalidate : number = parseInt(process.env.REVALIDATE_TIME)\n  const queries: TypedDocumentNode[] = [GlobalQuery]\n  \n  if(opt.query) \n    queries.push(opt.query)\n  if(opt.queries) \n    queries.push.apply(queries, opt.queries)\n  if(opt.seo) \n    queries.push(SEOQuery(opt.seo))\n  \n  return async (context) => {\n    const props = await apiQuery(queries, {preview:context.preview});\n\n    if(callback)\n      return await callback({context, props: {...props}, revalidate});\n    else\n      return { props:{...props}, context, revalidate};\n  }\n}\n\nconst GlobalQuery = gql`\n  query Global {\n    site: _site {\n      favicon: faviconMetaTags {\n      attributes\n      content\n      tag\n    }\n    globalSeo {\n      facebookPageUrl\n      siteName\n      titleSuffix\n      twitterAccount\n      fallbackSeo {\n        description\n        title\n        twitterCard\n        image {\n          id\n          title\n          width\n          responsiveImage {\n            alt\n            aspectRatio\n            base64\n            bgColor\n            height\n            sizes\n            src\n            srcSet\n            webpSrcSet\n            title\n            width\n          }\n        }\n      }\n    }\n  }\n}\n`","import type { NextApiRequest, NextApiResponse } from \"next\"\n\nexport default async function withPreview(req : NextApiRequest, res : NextApiResponse) {\n\n  if ( req.query.secret !== process.env.DATOCMS_PREVIEW_SECRET || !req.query.slug)\n    return res.status(401).json({ message: 'Invalid token' })\n  \n  const { slug } = req.query\n\n  try {\n    res.setPreviewData({}, {maxAge: 10})\n    res.writeHead(307, { Location: slug ? slug : `/` })\n    res.end()\n  }catch(err){\n    console.error(err)\n    return res.status(401).json({ message: 'Error previewing page!' })\n  }\n}","import type { NextApiRequest, NextApiResponse } from 'next'\nimport { buildClient } from '@datocms/cma-client';\n\nexport const basicAuth = (req: NextApiRequest) => {\n  \n  const basicAuth = req.headers.authorization\n  if (!basicAuth) \n    return true;\n    \n  const auth = basicAuth.split(' ')[1]\n  const [user, pwd] = Buffer.from(auth, 'base64').toString().split(':')\n  return user === process.env.BASIC_AUTH_USER && pwd === process.env.BASIC_AUTH_PASSWORD\n}\n\nconst recordFromPayload = async (payload: any) : Promise<any> => {\n\n  const modelId = payload?.relationships?.item_type?.data?.id\n\n  if (!modelId) \n    throw 'Model id not found in payload!'\n  \n  console.log('resolve modelId', modelId)\n  const client = buildClient({ apiToken: process.env.NEXT_PUBLIC_GRAPHQL_API_TOKEN, requestTimeout:3000 })\n  const models = await client.itemTypes.list()\n  const model = models.find(m => m.id === modelId)\n  const records = await client.items.list({ filter: { type: model.api_key, fields: { id: { eq: payload.id } } } })\n  const record = records[0]\n  \n  if (!record)\n    throw `No record found with modelId: ${modelId}`\n\n  console.log('revalidate', model.api_key)\n  return { ...record, model }\n\n}\n\nexport default function withRevalidate(callback:(record:any, revalidate : (paths:string[]) => Promise<void> ) => Promise<void>) : (req: NextApiRequest, res: NextApiResponse) => void {\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n\n    if (!basicAuth(req))\n      return res.status(401).send('Access denied')\n\n    const payload = req.body?.entity;\n\n    if (!payload)\n      throw 'Payload is empty'\n\n    const record = await recordFromPayload(payload)\n\n    callback(record, async (paths) => {\n      try{\n        if (!paths.length)\n          throw 'Nothing to revalidate';\n\n        console.log('revalidating paths', paths)\n        await Promise.all(paths.map(p => res.revalidate(p)))\n        console.log('revalidating done!')\n        return res.json({ revalidated: true, paths })\n      }catch(err){\n        console.error(err)\n        return res.json({ revalidated: false, err })\n      }\n      \n    })\n  }\n}\n\n\n","import { TypedDocumentNode } from '@apollo/client/core/core.cjs';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { apiQuery } from '../api/index.js';\n\nexport type UseApiQueryProps = {\n  variables?: any,\n  initialData?: any,\n  pageSize?: number\n}\n\nexport type Pagination = {\n  no: number,\n  count: number,\n  size: number,\n  end:boolean\n}\n\nconst useApiQuery = <T>(document : TypedDocumentNode, {variables, initialData, pageSize} : UseApiQueryProps = {} ) => {\n  console.log('useApiQuery');\n  \n  const [data, setData] = useState<T>(initialData)\n  const [page, setPage] = useState<Pagination | undefined>(pageSize ? {\n    no:1, \n    count:0, \n    size: pageSize, \n    end: initialData.pagination?.count > 0 ? initialData.pagination?.count <= pageSize : false\n  } : undefined)\n  const [error, setError] = useState<Error | undefined>()\n  const [loading, setLoading] = useState(false)\n\n  const loadMore = (vars: any) => load(vars)\n\n  const nextPage = async () => {\n    if(!page) \n      return setError(new Error('No page size set!'))\n\n    const first = page.size\n    const skip = (page.no*page.size)\n    const d = await load({...variables, first, skip})\n\n    const count = d[Object.keys(d).find(k => !isNaN(d[k].count))]?.count || 0;\n    const no = page.no+1\n    const end = no*pageSize >= count\n    const p = { ...page, no, count, end}\n    \n    setPage(p)\n    return p;\n  }\n\n  const mergeData = (newData, oldData) => {\n  \n    if(!oldData) return newData\n  \n    Object.keys(newData).forEach(k => {\n      if(oldData[k] && Array.isArray(oldData[k]))\n        newData[k] = oldData[k].concat(newData[k])\n    })\n  \n    return newData;\n  }\n\n  const load = useCallback((vars?: any) => {\n    \n    setLoading(true)\n    return apiQuery(document, {variables : vars || variables})\n      .then(res => {\n        const d = mergeData(res, data)\n        setData(d)\n        return d\n      })\n      .catch(err => setError(err))\n      .finally(()=> setLoading(false))\n\n  }, [document, variables, data])\n\n\tuseEffect(()=>{ !initialData && load() }, [initialData, load])\n  \n  return {data, error, loading, loadMore, nextPage,  page}\n};\n\nexport default useApiQuery","import { useRouter } from \"next/router.js\";\nimport { useEffect, useState } from \"react\";\n\nconst usePreviousRoute = () => {\n  \n  const storage = globalThis.sessionStorage\n  const router = useRouter()\n  const [prevRoute, setPrevRoute] = useState(typeof storage !== 'undefined' ? storage.getItem('previousRoute') : null)\n\n\tuseEffect(()=>{\n    const prevRoute = storage.getItem('currentRoute');\n    if (prevRoute === router.asPath) return\n    storage.setItem('previousRoute', prevRoute)\n    storage.setItem(\"currentRoute\", router.asPath);\n    setPrevRoute(prevRoute)\n\t}, [router.asPath, storage])\t\n\n  useEffect(()=>{\n    const handleWindowReload = (e) => {\n      storage.removeItem('previousRoute')\n      storage.removeItem(\"currentRoute\")\n    }\n    window.addEventListener('beforeunload', handleWindowReload)\n    return () => window.removeEventListener('beforeunload', handleWindowReload)\n  })\n\n\n  return prevRoute\n};\n\nexport default usePreviousRoute","\nimport { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport type ScrollInfo = {\n  isScrolling: boolean, \n  isPageTop: boolean,\n  isPageBottom: boolean,\n  isScrolledUp: boolean,\n  isScrolledDown: boolean,\n  scrolledPosition: number,\n  documentHeight: number,\n  viewportHeight: number,\n  timer: ReturnType<typeof setTimeout>,\n}\n\nexport default function useScrollInfo(pageBottomLimit = 0) {\n\n  const isServer = typeof window === 'undefined'\n  const [scrollInfo, setScrollInfo] = useState<ScrollInfo>({\n    isScrolling:false, \n    isPageTop: false,\n    isPageBottom: false,\n    isScrolledUp: true,\n    isScrolledDown: false,\n    scrolledPosition: isServer ? 0 : window.pageYOffset,\n    documentHeight: isServer ? 0 : document.documentElement.offsetHeight,\n    viewportHeight: isServer ? 0 : window.innerHeight,\n    timer:null,\n  });\n\n  const lastScrollInfo = useRef(scrollInfo);\n\n  const handleScroll = useCallback(() => {\n    \n    clearTimeout(lastScrollInfo.current.timer)\n\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    const viewportHeight = isServer ? 0 : window.innerHeight\n    const scrolledPosition = isServer ? 0 : Math.max(0, Math.ceil(window.pageYOffset));\n    const isPageBottom = isServer ? false : (window.innerHeight + scrolledPosition) >= documentHeight - pageBottomLimit;\n    const isPageTop = isServer ? true : window.pageYOffset <= 0;\n    const isScrolledUp = scrolledPosition < lastScrollInfo.current.scrolledPosition;\n    const isScrolledDown = scrolledPosition > lastScrollInfo.current.scrolledPosition;\n    const isScrolling = true;\n    const timer = lastScrollInfo.current.timer;\n    const scrollInfo = {\n      isScrolling,\n      isPageTop,\n      isPageBottom,\n      isScrolledUp,\n      isScrolledDown,\n      scrolledPosition,\n      documentHeight,\n      viewportHeight,\n      timer\n    };\n    setScrollInfo(scrollInfo);\n    lastScrollInfo.current = {\n      ...scrollInfo,\n      timer: setTimeout(() => setScrollInfo({...scrollInfo, isScrolling:false}), 100)\n    }\n    \n  }, [isServer, pageBottomLimit]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return scrollInfo;\n}\n","import { useEffect } from \"react\";\n\nconst useTransitionFix = () => useEffect(() => {\n\tArray.from(\n\t\t\tdocument.querySelectorAll('head > link[rel=\"stylesheet\"][data-n-p]')\n\t).forEach(node => {\n\t\t\tnode.removeAttribute('data-n-p');\n\t});\n\tconst mutationHandler = mutations => {\n\t\t\tmutations.forEach(({ target }) => {\n\t\t\t\t\tif (target.nodeName === 'STYLE') {\n\t\t\t\t\t\t\tif (target.getAttribute('media') === 'x') {\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute('media');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t});\n\t};\n\tconst observer = new MutationObserver(mutationHandler);\n\tobserver.observe(document.head, {\n\t\t\tsubtree: true,\n\t\t\tattributeFilter: ['media'],\n\t});\n\treturn () => {\n\t\t\tobserver.disconnect();\n\t};\n}, []);\n\n\nexport default useTransitionFix","import React from 'react';\nimport { NextSeo, DefaultSeo } from 'next-seo';\n\nconst DatoSEO = ({ seo = {}, site = {}, pathname, title, subtitle, description, noindex = false }: any) => {\n\n  const meta = parseDatoMetaTags({ seo, site, pathname })\n  const { globalSeo, favicon } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const images = generateImages(meta[\"og:image\"], meta[\"og:image:width\"], meta[\"og:image:height\"])\n  const url = `${process.env.NEXT_PUBLIC_SITE_URL}${pathname || ''}`\n\n  if (!title) {\n    if (globalSeo)\n      title = globalSeo.siteName\n    if (globalSeo?.titleSuffix || subtitle)\n      title = `${title}${globalSeo?.titleSuffix ? ` ${globalSeo?.titleSuffix}` : ''}${subtitle ? ` ${subtitle}` : ''}`;\n  }\n\n  if (!description)\n    description = meta.description ? meta.description : globalSeo ? globalSeo?.fallbackSeo.description : undefined;\n\n  const twitterProps: any = {\n    title,\n    image: meta[\"og:image\"],\n    handle: globalSeo?.twitterAccount,\n    site: globalSeo?.twitterAccount,\n    cardType: 'summary_large_image',\n  }\n\n  return (\n    <NextSeo\n      title={title}\n      description={description}\n      canonical={url}\n      openGraph={{\n        url,\n        title,\n        description,\n        images,\n        locale: meta[\"og:locale\"],\n        type: meta[\"og:type\"],\n        site_name: meta[\"og:site_name\"],\n      }}\n      twitter={twitterProps}\n      additionalLinkTags={favicons}\n      noindex={noindex}\n      nofollow={noindex}\n    />\n  )\n}\nexport default DatoSEO;\n\nexport const DefaultDatoSEO = ({ site, title, description }: { site: any, title?: string, description?: any }) => {\n  const { globalSeo, favicon, globalSeo: { fallbackSeo } } = site\n  const favicons = favicon ? favicon.map(({ attributes }) => { return { ...attributes } }) : [];\n  const twitterSite = globalSeo.twitterAccount ? `https://twitter.com/${globalSeo.twitterAccount.replace(\"@\", \"\")}` : undefined\n\n  return (\n    <DefaultSeo\n      title={title}\n      description={description}\n      additionalLinkTags={favicons}\n      openGraph={{\n        type: 'website',\n        locale: globalSeo.locale,\n        site_name: globalSeo.siteName,\n      }}\n      twitter={{\n        handle: globalSeo.twitterAccount,\n        site: twitterSite,\n        cardType: fallbackSeo.twitterCard,\n      }}\n    />\n  )\n}\n\nconst generateImages = (url, width, height): any => {\n  if (!url) return undefined\n  const baseURL = url.split(\"?\")[0]\n  const images = [{\n    url,\n    width,\n    height\n  }]\n  return images\n}\n\nconst parseDatoMetaTags = ({ seo, site, pathname }: any): any => {\n\n  if (!seo || !site) return []\n\n  const { globalSeo } = site || {};\n  const { fallbackSeo } = globalSeo || {};\n  const tags = Array.isArray(seo) ? seo : seo.tags;\n\n  let metaTags = tags || []\n  let titleTag = metaTags.filter(m => m.tag === \"title\")[0]\n\n  if (titleTag && globalSeo) {\n    if (pathname === \"/\")\n      titleTag = { ...titleTag, content: globalSeo.siteName }\n    else if (globalSeo && titleTag.content.startsWith(globalSeo.siteName))\n      titleTag = { ...titleTag, content: `${globalSeo.siteName} – ${titleTag.content}` }\n  }\n\n  metaTags = metaTags.map(t => { return t.tag !== 'title' ? t : titleTag })\n\n  const meta = {}\n\n  metaTags.forEach(t => {\n    const prop = t.attributes ? t.attributes.property || t.attributes.name : t.tag;\n    const value = t.attributes ? t.attributes.content || t.attributes : t.content;\n    meta[prop] = value\n  })\n\n  if (!meta['og:image'] && fallbackSeo?.image) {\n    const width = 1000;\n    const scaleRatio = 1.0 - ((fallbackSeo.image.width - width) / fallbackSeo.image.width)\n    meta['og:image'] = `${fallbackSeo.image.url}?w=1000`\n    meta[\"og:image:width\"] = width\n    meta[\"og:image:height\"] = Math.round(fallbackSeo.image.height * scaleRatio)\n  }\n  return meta\n}","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm'\nimport Link from \"next/link.js\";\nimport truncateMarkdown  from 'markdown-truncate'\nimport remarkBreaks from 'remark-breaks'\nimport type { UrlObject } from 'url';\n\ntype MarkdownProps = {\n  children?: React.ReactNode, \n  truncate?: number, \n  className?:string, \n  sentances?:number\n}\n\ntype AnchorProp = {\n  children: any[], \n  href: UrlObject \n}\n\nconst truncateSentances = (markdown : string, limit: number) : string => {\n  if(!markdown) return markdown\n  const sentances = markdown.split('.')\n  return sentances.length >= limit  ? sentances.slice(0,limit).join(' ') +  '...' : markdown\n}\n\nconst DatoMarkdown = ({ children , truncate, className, sentances } : MarkdownProps) => {\n  if(!children) \n    return null\n\n  const content: string = !truncate ? sentances ? truncateSentances(children as string, sentances) :  children : truncateMarkdown(children, {limit:truncate, ellipsis:true})\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[gfm,remarkBreaks]} \n      className={className}\n      children={content}\n      //@ts-ignore\n      components={{\n        //@ts-ignore\n        a: ({ children, href } : AnchorProp) => <Link scroll={false} href={href}><a>{children[0]}</a></Link> \n      }}\n      \n     />\n  )\n} \n\nexport default DatoMarkdown\n\n"],"names":["isServer","window","GRAPHQL_API_ENDPOINT","process","env","NEXT_PUBLIC_GRAPHQL_API_ENDPOINT","GRAPHQL_API_TOKEN","NEXT_PUBLIC_GRAPHQL_API_TOKEN","linkConfig","uri","fetch","LOG_GRAPHQL","async","input","init","JSON","parse","body","toString","undefined","requestName","queries","Array","isArray","map","op","operationName","join","t","getTime","response","result","text","console","log","Date","batchMax","batchInterval","createLink","preview","apiToken","headers","Authorization","client","link","cache","InMemoryCache","ssrMode","defaultOptions","query","fetchPolicy","DEV_CACHE","errorPolicy","options","variables","Error","setLink","previewLink","batch","q","idx","length","vars","Promise","all","errorMessages","data","filter","errors","forEach","e","message","push","res","_extends","err","SEOQuery","model","id","gql","datoError","error","_t","opt","callback","revalidate","parseInt","REVALIDATE_TIME","GlobalQuery","apply","seo","props","apiQuery","context","withPreview","req","secret","DATOCMS_PREVIEW_SECRET","slug","status","json","setPreviewData","maxAge","writeHead","Location","end","withRevalidate","basicAuth","authorization","auth","split","user","pwd","Buffer","from","BASIC_AUTH_USER","BASIC_AUTH_PASSWORD","send","_req$body","entity","payload","record","modelId","_payload$relationship","relationships","_payload$relationship2","item_type","_payload$relationship3","buildClient","requestTimeout","itemTypes","list","find","m","items","type","api_key","fields","eq","recordFromPayload","paths","p","revalidated","useApiQuery","document","initialData","pageSize","setData","useState","page","setPage","no","count","size","_initialData$paginati","pagination","_initialData$paginati2","setError","loading","setLoading","load","useCallback","then","d","newData","oldData","Object","keys","k","concat","catch","finally","useEffect","loadMore","nextPage","_d$Object$keys$find","first","skip","isNaN","usePreviousRoute","storage","globalThis","sessionStorage","router","useRouter","prevRoute","setPrevRoute","getItem","asPath","setItem","handleWindowReload","removeItem","addEventListener","removeEventListener","useScrollInfo","pageBottomLimit","scrollInfo","setScrollInfo","isScrolling","isPageTop","isPageBottom","isScrolledUp","isScrolledDown","scrolledPosition","pageYOffset","documentHeight","documentElement","offsetHeight","viewportHeight","innerHeight","timer","lastScrollInfo","useRef","handleScroll","clearTimeout","current","Math","max","scrollHeight","clientHeight","ceil","setTimeout","useTransitionFix","querySelectorAll","node","removeAttribute","observer","MutationObserver","mutations","target","nodeName","getAttribute","observe","head","subtree","attributeFilter","disconnect","DatoSEO","site","pathname","title","subtitle","description","noindex","meta","parseDatoMetaTags","globalSeo","favicon","favicons","attributes","images","generateImages","url","NEXT_PUBLIC_SITE_URL","siteName","titleSuffix","fallbackSeo","React","createElement","NextSeo","canonical","openGraph","locale","site_name","twitter","image","handle","twitterAccount","cardType","additionalLinkTags","nofollow","twitterSite","replace","DefaultSeo","twitterCard","width","height","metaTags","tags","tag","titleTag","content","startsWith","property","name","round","scaleRatio","children","truncate","className","sentances","truncateMarkdown","limit","ellipsis","markdown","slice","truncateSentances","ReactMarkdown","remarkPlugins","gfm","remarkBreaks","components","a","href","Link","scroll"],"mappings":"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"}